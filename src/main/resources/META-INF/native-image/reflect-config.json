[
  {
    "name": "[B"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Ljava.lang.Class;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Ljava.lang.annotation.Annotation;"
  },
  {
    "name": "[Lorg.springframework.boot.context.config.ConfigDataLocation;"
  },
  {
    "name": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
  },
  {
    "name": "[Lsun.security.pkcs.SignerInfo;"
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.aalto$AsyncXMLStreamReader"
  },
  {
    "name": "com.fasterxml.aalto.AsyncXMLStreamReader"
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator"
  },
  {
    "name": "com.fasterxml.jackson.core.ObjectCodec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getJsonFactory",
        "parameterTypes": []
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.core.TreeCodec",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createArrayNode",
        "parameterTypes": []
      },
      {
        "name": "createObjectNode",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "missingNode",
        "parameterTypes": []
      },
      {
        "name": "nullNode",
        "parameterTypes": []
      },
      {
        "name": "readTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "treeAsTokens",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "treeToValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode",
          "java.lang.Class"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      },
      {
        "name": "writeTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.smile$SmileFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.xml$XmlMapper"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.gson$Gson"
  },
  {
    "name": "com.google.gson.Gson"
  },
  {
    "name": "com.google.protobuf$Message"
  },
  {
    "name": "com.google.protobuf.Message"
  },
  {
    "name": "com.mangasite.MangaBackendApplication",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "main",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "com.mangasite.MangaBackendApplication$$EnhancerBySpringCGLIB$$84b07dd5",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.mangasite.domain.Chapter",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true
  },
  {
    "name": "com.mangasite.domain.Manga",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true
  },
  {
    "name": "com.mangasite.domain.MangaChapters",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true
  },
  {
    "name": "com.mangasite.domain.MangaInfo",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true
  },
  {
    "name": "com.mangasite.records.DeviceInfo",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true,
    "allDeclaredMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "com.mangasite.records.ServerMessage",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "allPublicConstructors": true
  },
  {
    "name": "com.mangasite.rsocket.ConnectController",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onConnect",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "org.springframework.messaging.rsocket.RSocketRequester"
        ]
      }
    ]
  },
  {
    "name": "com.mangasite.rsocket.RSocketAdvice",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.mangasite.rsocket.RSocketChapterController",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.mangasite.rsocket.RSocketMangaController",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.mangasite.security.ServerSecurityConfig",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "rsocketTokenAcceptor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.rsocket.RSocketSecurity"
        ]
      },
      {
        "name": "springSecurityFilterChain",
        "parameterTypes": [
          "org.springframework.security.config.web.server.ServerHttpSecurity"
        ]
      }
    ]
  },
  {
    "name": "com.mangasite.security.ServerSecurityConfig$$EnhancerBySpringCGLIB$$e9f8d38",
    "fields": [
      {
        "name": "CGLIB$CALLBACK_FILTER"
      },
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.mongodb.MongoNamespace",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.mongodb.WriteConcern",
    "allPublicFields": true
  },
  {
    "name": "com.mongodb.client.model.changestream.ChangeStreamDocument",
    "allDeclaredFields": true,
    "allDeclaredMethods": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "org.bson.BsonDocument",
          "org.bson.BsonDocument",
          "org.bson.BsonDocument",
          "java.lang.Object",
          "org.bson.BsonDocument",
          "org.bson.BsonTimestamp",
          "com.mongodb.client.model.changestream.UpdateDescription",
          "org.bson.BsonInt64",
          "org.bson.BsonDocument"
        ]
      }
    ]
  },
  {
    "name": "com.mongodb.client.model.changestream.TruncatedArray",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.mongodb.client.model.changestream.UpdateDescription",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.samskivert.mustache$Template"
  },
  {
    "name": "com.samskivert.mustache.Template"
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ARCFOURCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESedeCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DHParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacCore$HmacSHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.HmacSHA1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.xml.internal.stream.XMLInputFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "freemarker.template$Configuration"
  },
  {
    "name": "freemarker.template.Configuration"
  },
  {
    "name": "groovy.lang$MetaClass"
  },
  {
    "name": "groovy.lang.MetaClass"
  },
  {
    "name": "groovy.text$TemplateEngine"
  },
  {
    "name": "groovy.text.TemplateEngine"
  },
  {
    "name": "io.jsonwebtoken.Claims",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.ClaimsMutator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.Header",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.JwsHeader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultClaims",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultHeader",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.jsonwebtoken.impl.DefaultJwsHeader",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "io.jsonwebtoken.impl.JwtMap",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.buffer.AbstractByteBufAllocator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields": [
      {
        "name": "refCnt"
      }
    ]
  },
  {
    "name": "io.netty.buffer.ByteBuf"
  },
  {
    "name": "io.netty.buffer.PooledByteBufAllocator"
  },
  {
    "name": "io.netty.channel.ChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelHandlerAdapter",
    "methods": [
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInitializer",
    "methods": [
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelOutboundHandlerAdapter",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.CombinedChannelDuplexHandler",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultFileRegion"
  },
  {
    "name": "io.netty.channel.epoll.Epoll"
  },
  {
    "name": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
  },
  {
    "name": "io.netty.channel.unix.DatagramSocketAddress"
  },
  {
    "name": "io.netty.channel.unix.DomainDatagramSocketAddress"
  },
  {
    "name": "io.netty.channel.unix.PeerCredentials"
  },
  {
    "name": "io.netty.handler.codec.ByteToMessageDecoder",
    "methods": [
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.MessageToMessageEncoder",
    "methods": [
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.handler.codec.haproxy.HAProxyMessageDecoder"
  },
  {
    "name": "io.netty.handler.codec.http.HttpServerCodec"
  },
  {
    "name": "io.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder"
  },
  {
    "name": "io.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder"
  },
  {
    "name": "io.netty.incubator.channel.uring.IOUring"
  },
  {
    "name": "io.netty.util.AbstractReferenceCounted",
    "fields": [
      {
        "name": "refCnt"
      }
    ]
  },
  {
    "name": "io.netty.util.ReferenceCountUtil",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.util.internal.NativeLibraryUtil",
    "methods": [
      {
        "name": "loadLibrary",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.reactivex$Flowable"
  },
  {
    "name": "io.reactivex.Flowable"
  },
  {
    "name": "io.reactivex.rxjava3.core$Flowable"
  },
  {
    "name": "io.reactivex.rxjava3.core.Flowable"
  },
  {
    "name": "io.rsocket.RSocket"
  },
  {
    "name": "io.rsocket.core.RSocketServer"
  },
  {
    "name": "io.rsocket.internal.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.rsocket.internal.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.rsocket.internal.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.rsocket.plugins.SocketAcceptorInterceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.rsocket.transport.netty.server.TcpServerTransport"
  },
  {
    "name": "io.smallrye.mutiny$Multi"
  },
  {
    "name": "io.smallrye.mutiny.Multi"
  },
  {
    "name": "io.undertow.Undertow"
  },
  {
    "name": "io.undertow.websockets$WebSocketProtocolHandshakeHandler"
  },
  {
    "name": "io.undertow.websockets.WebSocketProtocolHandshakeHandler"
  },
  {
    "name": "jakarta.inject.Scope",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.inject.Singleton",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.beans.PropertyVetoException"
  },
  {
    "name": "java.io.FileDescriptor"
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.IOException"
  },
  {
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Class",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getRecordComponents",
        "parameterTypes": []
      },
      {
        "name": "isSealed",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.ClassLoader",
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "java.lang.String",
          "byte[]",
          "int",
          "int",
          "java.security.ProtectionDomain"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Module",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Object",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.ObjectCustomizer"
  },
  {
    "name": "java.lang.OutOfMemoryError"
  },
  {
    "name": "java.lang.ProcessHandle",
    "methods": [
      {
        "name": "current",
        "parameterTypes": []
      },
      {
        "name": "pid",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Record",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Runtime",
    "methods": [
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Runtime$Version",
    "methods": [
      {
        "name": "major",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.RuntimeException"
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.String",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.Thread",
    "methods": [
      {
        "name": "isVirtual",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.annotation.Documented",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Inherited",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.annotation.Retention",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.annotation.Target",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.constant.Constable",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.invoke.MethodHandles",
    "methods": [
      {
        "name": "privateLookupIn",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.MethodHandles$Lookup",
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "byte[]"
        ]
      }
    ]
  },
  {
    "name": "java.lang.invoke.TypeDescriptor$OfField",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.ManagementFactory",
    "methods": [
      {
        "name": "getRuntimeMXBean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.RuntimeMXBean",
    "methods": [
      {
        "name": "getInputArguments",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.management.ThreadInfo",
    "fields": [
      {
        "name": "virtual"
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.GenericDeclaration",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.ParameterizedType",
    "methods": [
      {
        "name": "getActualTypeArguments",
        "parameterTypes": []
      },
      {
        "name": "getRawType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.RecordComponent",
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Type",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.TypeVariable",
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.net.InetSocketAddress"
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.PortUnreachableException"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.nio.Bits",
    "fields": [
      {
        "name": "UNALIGNED"
      }
    ]
  },
  {
    "name": "java.nio.Buffer",
    "fields": [
      {
        "name": "address"
      }
    ]
  },
  {
    "name": "java.nio.ByteBuffer",
    "methods": [
      {
        "name": "alignedSlice",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.nio.DirectByteBuffer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.nio.channels.ClosedChannelException"
  },
  {
    "name": "java.nio.channels.FileChannel"
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.SecureRandomParameters"
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.security.interfaces.RSAPrivateKey"
  },
  {
    "name": "java.security.interfaces.RSAPublicKey"
  },
  {
    "name": "java.sql.Date"
  },
  {
    "name": "java.sql.Timestamp"
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.Map",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.PropertyPermission"
  },
  {
    "name": "java.util.concurrent.Flow$Publisher"
  },
  {
    "name": "java.util.concurrent.Flow.Publisher"
  },
  {
    "name": "java.util.function.Function",
    "methods": [
      {
        "name": "andThen",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "compose",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      }
    ]
  },
  {
    "name": "java.util.logging.LogManager"
  },
  {
    "name": "javax.annotation.ManagedBean"
  },
  {
    "name": "javax.annotation.Resource"
  },
  {
    "name": "javax.ejb$EJB"
  },
  {
    "name": "javax.ejb.EJB"
  },
  {
    "name": "javax.inject$Inject"
  },
  {
    "name": "javax.inject$Named"
  },
  {
    "name": "javax.inject$Provider"
  },
  {
    "name": "javax.inject$Qualifier"
  },
  {
    "name": "javax.inject.Inject"
  },
  {
    "name": "javax.inject.Named"
  },
  {
    "name": "javax.inject.Provider"
  },
  {
    "name": "javax.inject.Qualifier"
  },
  {
    "name": "javax.json.bind$Jsonb"
  },
  {
    "name": "javax.json.bind.Jsonb"
  },
  {
    "name": "javax.money$MonetaryAmount"
  },
  {
    "name": "javax.money.MonetaryAmount"
  },
  {
    "name": "javax.naming.InitialContext"
  },
  {
    "name": "javax.persistence$EntityManagerFactory"
  },
  {
    "name": "javax.persistence.EntityManagerFactory"
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "name": "javax.smartcardio.CardPermission"
  },
  {
    "name": "javax.validation$Validator"
  },
  {
    "name": "javax.validation.Validator"
  },
  {
    "name": "javax.xml.bind.Binder"
  },
  {
    "name": "javax.xml.ws$WebServiceRef"
  },
  {
    "name": "javax.xml.ws.WebServiceRef"
  },
  {
    "name": "jdk.internal.misc.Unsafe",
    "methods": [
      {
        "name": "getUnsafe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "kotlin$Metadata"
  },
  {
    "name": "kotlin.Metadata"
  },
  {
    "name": "kotlin.reflect.full$KClasses"
  },
  {
    "name": "kotlin.reflect.full.KClasses"
  },
  {
    "name": "kotlinx.coroutines.reactor$MonoKt"
  },
  {
    "name": "kotlinx.coroutines.reactor.MonoKt"
  },
  {
    "name": "kotlinx.serialization.json$Json"
  },
  {
    "name": "kotlinx.serialization.json.Json"
  },
  {
    "name": "org.apache.catalina.startup.Tomcat"
  },
  {
    "name": "org.apache.jasper.compiler$JspConfig"
  },
  {
    "name": "org.apache.jasper.compiler.JspConfig"
  },
  {
    "name": "org.apache.logging.log4j.core.impl$Log4jContextFactory"
  },
  {
    "name": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
  },
  {
    "name": "org.apache.logging.log4j.spi.ExtendedLogger"
  },
  {
    "name": "org.apache.logging.slf4j.SLF4JProvider"
  },
  {
    "name": "org.apache.tomcat.websocket.server$WsHttpUpgradeHandler"
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
  },
  {
    "name": "org.bson.codecs.record.RecordCodecProvider"
  },
  {
    "name": "org.eclipse.core.runtime$FileLocator"
  },
  {
    "name": "org.eclipse.core.runtime.FileLocator"
  },
  {
    "name": "org.eclipse.jetty.server.Server"
  },
  {
    "name": "org.eclipse.jetty.servlet.ServletHolder"
  },
  {
    "name": "org.eclipse.jetty.websocket.server$JettyWebSocketServerContainer"
  },
  {
    "name": "org.eclipse.jetty.websocket.server$WebSocketServerFactory"
  },
  {
    "name": "org.eclipse.jetty.websocket.server.JettyWebSocketServerContainer"
  },
  {
    "name": "org.eclipse.jetty.websocket.server.WebSocketServerFactory"
  },
  {
    "name": "org.glassfish.jersey.servlet$ServletContainer"
  },
  {
    "name": "org.glassfish.jersey.servlet.ServletContainer"
  },
  {
    "name": "org.joda.time$YearMonth"
  },
  {
    "name": "org.joda.time.YearMonth"
  },
  {
    "name": "org.slf4j.Logger"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.slf4j.spi.LocationAwareLogger"
  },
  {
    "name": "org.springframework.beans.ExtendedBeanInfoFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.AwareCustomizer"
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAwareCustomizer"
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Autowired",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "required",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.annotation.Qualifier",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessorCustomizer"
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessorCustomizer"
  },
  {
    "name": "org.springframework.beans.factory.support.NullBean",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
    "allPublicFields": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringBootConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "proxyBeanMethods",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "after",
        "parameterTypes": []
      },
      {
        "name": "before",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ImportAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "classes",
        "parameterTypes": []
      },
      {
        "name": "exclude",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "annotation",
        "parameterTypes": []
      },
      {
        "name": "parameterizedContainer",
        "parameterTypes": []
      },
      {
        "name": "search",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "annotation",
        "parameterTypes": []
      },
      {
        "name": "ignored",
        "parameterTypes": []
      },
      {
        "name": "parameterizedContainer",
        "parameterTypes": []
      },
      {
        "name": "search",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "type",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.rsocket.RSocketMessageHandlerCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "messageHandler",
        "parameterTypes": [
          "org.springframework.messaging.rsocket.RSocketStrategies",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.rsocket.RSocketProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "getServer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "setMappingPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTransport",
        "parameterTypes": [
          "org.springframework.boot.rsocket.server.RSocketServer$Transport"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration$EmbeddedServerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "frameDecoderRSocketServerCustomizer",
        "parameterTypes": [
          "org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler"
        ]
      },
      {
        "name": "rSocketServerBootstrap",
        "parameterTypes": [
          "org.springframework.boot.rsocket.server.RSocketServerFactory",
          "org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler"
        ]
      },
      {
        "name": "rSocketServerFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.rsocket.RSocketProperties",
          "org.springframework.http.client.reactive.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration$OnRSocketWebServerCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration$WebFluxServerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "rSocketWebsocketRouteProvider",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.rsocket.RSocketProperties",
          "org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "rSocketStrategies",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration$JacksonCborStrategyConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration$JacksonJsonStrategyConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "jacksonJsonRSocketStrategyCustomizer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.rsocket.RSocketWebSocketNettyRouteProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.rsocket.RSocketSecurityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "springSecurityRSocketSecurity",
        "parameterTypes": [
          "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.rsocket.RSocketSecurityAutoConfiguration$RSocketSecurityMessageHandlerConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "rSocketAuthenticationPrincipalMessageHandlerCustomizer",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "httpHandler",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "reactiveWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "nettyReactiveWebServerFactory",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "reactorServerResourceFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "localeContextResolver",
        "parameterTypes": []
      },
      {
        "name": "webFluxConversionService",
        "parameterTypes": []
      },
      {
        "name": "webFluxValidator",
        "parameterTypes": []
      },
      {
        "name": "webSessionManager",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfigurationCustomizer"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.reactive.config.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "configureArgumentResolvers",
        "parameterTypes": [
          "org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
        ]
      },
      {
        "name": "configureHttpMessageCodecs",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "configureViewResolvers",
        "parameterTypes": [
          "org.springframework.web.reactive.config.ViewResolverRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "welcomePageRouterFunctionMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration"
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setMessageReaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMessageWriters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setViewResolvers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": []
      },
      {
        "name": "errorWebExceptionHandler",
        "parameterTypes": [
          "org.springframework.boot.web.reactive.error.ErrorAttributes",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.apache.commons.logging.Log"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.ConfigurableBootstrapContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.apache.commons.logging.Log",
          "org.springframework.boot.context.properties.bind.Binder",
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.SpringApplication",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "ignoreInvalidFields",
        "parameterTypes": []
      },
      {
        "name": "ignoreUnknownFields",
        "parameterTypes": []
      },
      {
        "name": "prefix",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.NestedConfigurationProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Name",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.apache.commons.logging.Log"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.loader.LaunchedURLClassLoader",
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketServerBootstrap",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.rsocket.messaging.RSocketStrategiesCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.rsocket.server.ConfigurableRSocketServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.rsocket.server.RSocketServerCustomizer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.rsocket.server.RSocketServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getShutdown",
        "parameterTypes": []
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.embedded.netty.NettyRouteProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext$Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext.Factory"
  },
  {
    "name": "org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getErrorAttributes",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.ServerRequest",
          "org.springframework.boot.web.error.ErrorAttributeOptions"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.error.ErrorAttributes",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
  },
  {
    "name": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addErrorPages",
        "parameterTypes": [
          "org.springframework.boot.web.server.ErrorPage[]"
        ]
      },
      {
        "name": "getAddress",
        "parameterTypes": []
      },
      {
        "name": "getCompression",
        "parameterTypes": []
      },
      {
        "name": "getErrorPages",
        "parameterTypes": []
      },
      {
        "name": "getHttp2",
        "parameterTypes": []
      },
      {
        "name": "getOrCreateSslStoreProvider",
        "parameterTypes": []
      },
      {
        "name": "getPort",
        "parameterTypes": []
      },
      {
        "name": "getServerHeader",
        "parameterTypes": []
      },
      {
        "name": "getSsl",
        "parameterTypes": []
      },
      {
        "name": "getSslStoreProvider",
        "parameterTypes": []
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setCompression",
        "parameterTypes": [
          "org.springframework.boot.web.server.Compression"
        ]
      },
      {
        "name": "setErrorPages",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setHttp2",
        "parameterTypes": [
          "org.springframework.boot.web.server.Http2"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      },
      {
        "name": "setSslStoreProvider",
        "parameterTypes": [
          "org.springframework.boot.web.server.SslStoreProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "postProcessAfterInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "postProcessBeforeInitialization",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext$Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext.Factory"
  },
  {
    "name": "org.springframework.cglib.core.MethodWrapper$MethodWrapperKey",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cglib.core.MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$552be97a",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cglib.proxy.Enhancer$EnhancerKey",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cglib.proxy.Enhancer$EnhancerKey$$KeyFactoryByCGLIB$$4ce19e8f",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextAwareCustomizer"
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationStartupAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationStartupAwareCustomizer"
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAwareCustomizer"
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAwareCustomizer"
  },
  {
    "name": "org.springframework.context.SmartLifecycle",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getPhase",
        "parameterTypes": []
      },
      {
        "name": "isAutoStartup",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.Bean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "autowire",
        "parameterTypes": []
      },
      {
        "name": "autowireCandidate",
        "parameterTypes": []
      },
      {
        "name": "destroyMethod",
        "parameterTypes": []
      },
      {
        "name": "initMethod",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.Conditional",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.Configuration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "proxyBeanMethods",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setMetadataReaderFactory",
        "parameterTypes": [
          "org.springframework.core.type.classreading.MetadataReaderFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassPostProcessorCustomizer"
  },
  {
    "name": "org.springframework.context.annotation.Import",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.annotation.Scope",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "proxyMode",
        "parameterTypes": []
      },
      {
        "name": "scopeName",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.context.support.ApplicationObjectSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.OrderedCustomizer"
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.PriorityOrderedCustomizer"
  },
  {
    "name": "org.springframework.core.ReactiveAdapterRegistry",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.AliasFor",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "annotation",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.core.annotation.Order",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.GenericConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addConverter",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class",
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.Converter"
        ]
      },
      {
        "name": "addConverter",
        "parameterTypes": [
          "org.springframework.core.convert.converter.GenericConverter"
        ]
      },
      {
        "name": "addConverterFactory",
        "parameterTypes": [
          "org.springframework.core.convert.converter.ConverterFactory"
        ]
      },
      {
        "name": "canBypassConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "canConvert",
        "parameterTypes": [
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Class"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.core.convert.TypeDescriptor",
          "org.springframework.core.convert.TypeDescriptor"
        ]
      },
      {
        "name": "removeConvertible",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.core.type.classreading.MetadataReaderFactory",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.format.support.DefaultFormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addDefaultFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFormatter",
        "parameterTypes": [
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldAnnotation",
        "parameterTypes": [
          "org.springframework.format.AnnotationFormatterFactory"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Formatter"
        ]
      },
      {
        "name": "addFormatterForFieldType",
        "parameterTypes": [
          "java.lang.Class",
          "org.springframework.format.Printer",
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addParser",
        "parameterTypes": [
          "org.springframework.format.Parser"
        ]
      },
      {
        "name": "addPrinter",
        "parameterTypes": [
          "org.springframework.format.Printer"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.ReactiveHttpInputMessage"
  },
  {
    "name": "org.springframework.http.client.reactive.ReactorResourceFactory",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.codec.ClientCodecConfigurer"
  },
  {
    "name": "org.springframework.http.codec.CodecConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.codec.ServerCodecConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.codec.support.BaseCodecConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer"
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "customCodecs",
        "parameterTypes": []
      },
      {
        "name": "defaultCodecs",
        "parameterTypes": []
      },
      {
        "name": "getReaders",
        "parameterTypes": []
      },
      {
        "name": "getWriters",
        "parameterTypes": []
      },
      {
        "name": "registerDefaults",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
  },
  {
    "name": "org.springframework.http.server.reactive.HttpHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.ReactiveMessageHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.messaging.handler.annotation.DestinationVariable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.messaging.handler.annotation.MessageExceptionHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.handler.annotation.MessageMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.messaging.handler.annotation.Payload",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "expression",
        "parameterTypes": []
      },
      {
        "name": "required",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.handler.annotation.reactive.MessageMappingMessageHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getConversionService",
        "parameterTypes": []
      },
      {
        "name": "getDecoders",
        "parameterTypes": []
      },
      {
        "name": "getRouteMatcher",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "registerMessagingAdvice",
        "parameterTypes": [
          "org.springframework.messaging.handler.MessagingAdviceBean"
        ]
      },
      {
        "name": "setConversionService",
        "parameterTypes": [
          "org.springframework.core.convert.ConversionService"
        ]
      },
      {
        "name": "setEmbeddedValueResolver",
        "parameterTypes": [
          "org.springframework.util.StringValueResolver"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "org.springframework.validation.Validator"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver",
    "methods": [
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.handler.invocation.reactive.AbstractMethodMessageHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "extendMapping",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.handler.HandlerMethod"
        ]
      },
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "getArgumentResolverConfigurer",
        "parameterTypes": []
      },
      {
        "name": "getBeanName",
        "parameterTypes": []
      },
      {
        "name": "getDestinationLookup",
        "parameterTypes": []
      },
      {
        "name": "getDirectLookupMappings",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getHandlerPredicate",
        "parameterTypes": []
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "getReactiveAdapterRegistry",
        "parameterTypes": []
      },
      {
        "name": "getReturnValueHandlerConfigurer",
        "parameterTypes": []
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.messaging.handler.HandlerMethod",
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "handleMessage",
        "parameterTypes": [
          "org.springframework.messaging.Message"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setArgumentResolverConfigurer",
        "parameterTypes": [
          "org.springframework.messaging.handler.invocation.reactive.ArgumentResolverConfigurer"
        ]
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHandlerPredicate",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "setHandlers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setReturnValueHandlerConfigurer",
        "parameterTypes": [
          "org.springframework.messaging.handler.invocation.reactive.ReturnValueHandlerConfigurer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.messaging.rsocket.DefaultRSocketStrategies",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.messaging.rsocket.RSocketRequester"
  },
  {
    "name": "org.springframework.messaging.rsocket.RSocketStrategies",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "decoder",
        "parameterTypes": [
          "org.springframework.core.ResolvableType",
          "org.springframework.util.MimeType"
        ]
      },
      {
        "name": "encoder",
        "parameterTypes": [
          "org.springframework.core.ResolvableType",
          "org.springframework.util.MimeType"
        ]
      },
      {
        "name": "mutate",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.messaging.rsocket.annotation.ConnectMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "setDecoders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setReactiveAdapterRegistry",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry"
        ]
      },
      {
        "name": "setRouteMatcher",
        "parameterTypes": [
          "org.springframework.util.RouteMatcher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationEventPublisher",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.security.core.Authentication",
          "org.springframework.security.core.AuthenticationException"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.rsocket.EnableRSocketSecurity",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.rsocket.RSocketSecurity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.rsocket.RSocketSecurityConfiguration",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "rsocketSecurity",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setUserDetailsService",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.ReactiveUserDetailsService"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.rsocket.RSocketSecurityConfigurationCustomizer"
  },
  {
    "name": "org.springframework.security.config.annotation.rsocket.SecuritySocketAcceptorInterceptorConfiguration",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "securitySocketAcceptorInterceptor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.ReactiveOAuth2ClientImportSelector",
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "authenticationPrincipalArgumentResolver",
        "parameterTypes": []
      },
      {
        "name": "authenticationPrincipalArgumentResolverConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "httpSecurity",
        "parameterTypes": []
      },
      {
        "name": "reactiveCurrentSecurityContextArgumentResolver",
        "parameterTypes": []
      },
      {
        "name": "setAdapterRegistry",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry"
        ]
      },
      {
        "name": "setReactiveUserDetailsService",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.ReactiveUserDetailsService"
        ]
      },
      {
        "name": "setUserDetailsPasswordService",
        "parameterTypes": [
          "org.springframework.security.core.userdetails.ReactiveUserDetailsPasswordService"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration$1",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configureArgumentResolvers",
        "parameterTypes": [
          "org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration$ContextAwareServerHttpSecurity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfigurationCustomizer"
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration",
    "allDeclaredFields": true,
    "allDeclaredClasses": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "conversionServicePostProcessor",
        "parameterTypes": []
      },
      {
        "name": "requestDataValueProcessor",
        "parameterTypes": []
      },
      {
        "name": "setSecurityWebFilterChains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "springSecurityWebFilterChainFilter",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration$OAuth2ClasspathGuard",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfigurationCustomizer"
  },
  {
    "name": "org.springframework.security.config.web.server.ServerHttpSecurity",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addFilterAfter",
        "parameterTypes": [
          "org.springframework.web.server.WebFilter",
          "org.springframework.security.config.web.server.SecurityWebFiltersOrder"
        ]
      },
      {
        "name": "addFilterAt",
        "parameterTypes": [
          "org.springframework.web.server.WebFilter",
          "org.springframework.security.config.web.server.SecurityWebFiltersOrder"
        ]
      },
      {
        "name": "addFilterBefore",
        "parameterTypes": [
          "org.springframework.web.server.WebFilter",
          "org.springframework.security.config.web.server.SecurityWebFiltersOrder"
        ]
      },
      {
        "name": "anonymous",
        "parameterTypes": []
      },
      {
        "name": "anonymous",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "authenticationManager",
        "parameterTypes": [
          "org.springframework.security.authentication.ReactiveAuthenticationManager"
        ]
      },
      {
        "name": "authorizeExchange",
        "parameterTypes": []
      },
      {
        "name": "authorizeExchange",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "build",
        "parameterTypes": []
      },
      {
        "name": "cors",
        "parameterTypes": []
      },
      {
        "name": "cors",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "csrf",
        "parameterTypes": []
      },
      {
        "name": "csrf",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "exceptionHandling",
        "parameterTypes": []
      },
      {
        "name": "exceptionHandling",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "formLogin",
        "parameterTypes": []
      },
      {
        "name": "formLogin",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "headers",
        "parameterTypes": []
      },
      {
        "name": "headers",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "http",
        "parameterTypes": []
      },
      {
        "name": "httpBasic",
        "parameterTypes": []
      },
      {
        "name": "httpBasic",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "logout",
        "parameterTypes": []
      },
      {
        "name": "logout",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "oauth2Client",
        "parameterTypes": []
      },
      {
        "name": "oauth2Client",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "oauth2Login",
        "parameterTypes": []
      },
      {
        "name": "oauth2Login",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "oauth2ResourceServer",
        "parameterTypes": []
      },
      {
        "name": "oauth2ResourceServer",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "passwordManagement",
        "parameterTypes": []
      },
      {
        "name": "passwordManagement",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "redirectToHttps",
        "parameterTypes": []
      },
      {
        "name": "redirectToHttps",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "requestCache",
        "parameterTypes": []
      },
      {
        "name": "requestCache",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      },
      {
        "name": "securityContextRepository",
        "parameterTypes": [
          "org.springframework.security.web.server.context.ServerSecurityContextRepository"
        ]
      },
      {
        "name": "securityMatcher",
        "parameterTypes": [
          "org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher"
        ]
      },
      {
        "name": "x509",
        "parameterTypes": []
      },
      {
        "name": "x509",
        "parameterTypes": [
          "org.springframework.security.config.Customizer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.core.annotation.AuthenticationPrincipal",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.MapReactiveUserDetailsService",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.ReactiveUserDetailsPasswordService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.ReactiveUserDetailsService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.data.repository.query.SecurityEvaluationContextExtension"
  },
  {
    "name": "org.springframework.security.messaging.handler.invocation.reactive.AuthenticationPrincipalArgumentResolver"
  },
  {
    "name": "org.springframework.security.oauth2.client.registration$ClientRegistration"
  },
  {
    "name": "org.springframework.security.oauth2.client.registration$ReactiveClientRegistrationRepository"
  },
  {
    "name": "org.springframework.security.oauth2.client.registration.ClientRegistration"
  },
  {
    "name": "org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository"
  },
  {
    "name": "org.springframework.security.rsocket.core.PayloadSocketAcceptorInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.reactive.result.view.CsrfRequestDataValueProcessor",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.server.MatcherSecurityWebFilterChain",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.server.SecurityWebFilterChain",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.server.WebFilterChainProxy",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Component",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Controller",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Indexed",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ControllerAdvice",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "annotations",
        "parameterTypes": []
      },
      {
        "name": "assignableTypes",
        "parameterTypes": []
      },
      {
        "name": "basePackageClasses",
        "parameterTypes": []
      },
      {
        "name": "basePackages",
        "parameterTypes": []
      },
      {
        "name": "value",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.context.support.GenericWebApplicationContext"
  },
  {
    "name": "org.springframework.web.cors.reactive.CorsConfigurationSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.cors.reactive.PreFlightRequestHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.cors.reactive.UrlBasedCorsConfigurationSource",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver",
    "methods": [
      {
        "name": "noMatchingExceptionHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.DispatcherHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.HandlerAdapter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.HandlerMapping",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.HandlerResult"
  },
  {
    "name": "org.springframework.web.reactive.HandlerResultHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.accept.RequestedContentTypeResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "configurePathMatching",
        "parameterTypes": [
          "org.springframework.web.reactive.config.PathMatchConfigurer"
        ]
      },
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.DelegatingWebFluxConfigurationCustomizer"
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurationSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "getApplicationContext",
        "parameterTypes": []
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "responseBodyResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "responseEntityResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "responseStatusExceptionHandler",
        "parameterTypes": []
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "serverCodecConfigurer",
        "parameterTypes": []
      },
      {
        "name": "serverResponseResultHandler",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "simpleHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "viewResolutionResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "webFluxAdapterRegistry",
        "parameterTypes": []
      },
      {
        "name": "webFluxContentTypeResolver",
        "parameterTypes": []
      },
      {
        "name": "webFluxWebSocketHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "webHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurationSupport$NoOpValidator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurationSupportCustomizer"
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addCorsMappings",
        "parameterTypes": [
          "org.springframework.web.reactive.config.CorsRegistry"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.reactive.config.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "configureContentTypeResolver",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"
        ]
      },
      {
        "name": "configureHttpMessageCodecs",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "configurePathMatching",
        "parameterTypes": [
          "org.springframework.web.reactive.config.PathMatchConfigurer"
        ]
      },
      {
        "name": "configureViewResolvers",
        "parameterTypes": [
          "org.springframework.web.reactive.config.ViewResolverRegistry"
        ]
      },
      {
        "name": "getMessageCodesResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "getWebSocketService",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.HandlerFunction",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.ServerRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.RouterFunction",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "and",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.RouterFunction"
        ]
      },
      {
        "name": "andNest",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.RequestPredicate",
          "org.springframework.web.reactive.function.server.RouterFunction"
        ]
      },
      {
        "name": "andOther",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.RouterFunction"
        ]
      },
      {
        "name": "andRoute",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.RequestPredicate",
          "org.springframework.web.reactive.function.server.HandlerFunction"
        ]
      },
      {
        "name": "filter",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.HandlerFilterFunction"
        ]
      },
      {
        "name": "withAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "withAttributes",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.RouterFunctions$AbstractRouterFunction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.RouterFunctions$SameComposedRouterFunction",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "accept",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.RouterFunctions$Visitor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.handler.AbstractHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCorsProcessor",
        "parameterTypes": []
      },
      {
        "name": "getHandler",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "getPathPatternParser",
        "parameterTypes": []
      },
      {
        "name": "setBeanName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCorsConfigurationSource",
        "parameterTypes": [
          "org.springframework.web.cors.reactive.CorsConfigurationSource"
        ]
      },
      {
        "name": "setCorsConfigurations",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCorsProcessor",
        "parameterTypes": [
          "org.springframework.web.cors.reactive.CorsProcessor"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUseCaseSensitiveMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTrailingSlashMatch",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.handler.AbstractUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHandlerInternal",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "getHandlerMap",
        "parameterTypes": []
      },
      {
        "name": "setHandlerPredicate",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "setLazyInitHandlers",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.handler.SimpleUrlHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.resource.ResourceUrlProvider",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.HandlerResultHandlerSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdapterRegistry",
        "parameterTypes": []
      },
      {
        "name": "getContentTypeResolver",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.SimpleHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDirectPaths",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getHandlerMethods",
        "parameterTypes": []
      },
      {
        "name": "getMatchingMapping",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "handleMatch",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.web.method.HandlerMethod",
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "initCorsConfiguration",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerHandlerMethod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Method",
          "java.lang.Object"
        ]
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      },
      {
        "name": "unregisterMapping",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.HandlerMethodArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.method.HandlerMethodArgumentResolverSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAdapterRegistry",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHandlerInternal",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getMessageWriters",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "registerMapping",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.reflect.Method"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.view.RequestDataValueProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.socket.server.upgrade.ReactorNettyRequestUpgradeStrategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.server.WebExceptionHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.WebFilter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.WebHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.adapter.HttpWebHandlerAdapter",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.server.handler.ResponseStatusExceptionHandler",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setWarnLogCategory",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.server.handler.WebHandlerDecorator",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDelegate",
        "parameterTypes": []
      },
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.server.ServerWebExchange"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.server.i18n.LocaleContextResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.server.session.DefaultWebSessionManager",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.server.session.WebSessionManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet$DispatcherServlet"
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet"
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternRouteMatcher"
  },
  {
    "name": "org.synchronoss.cloud.nio.multipart$NioMultipartParser"
  },
  {
    "name": "org.synchronoss.cloud.nio.multipart.NioMultipartParser"
  },
  {
    "name": "org.thymeleaf.spring5$SpringTemplateEngine"
  },
  {
    "name": "org.thymeleaf.spring5.SpringTemplateEngine"
  },
  {
    "name": "org.webjars$WebJarAssetLocator"
  },
  {
    "name": "org.webjars.WebJarAssetLocator"
  },
  {
    "name": "org.yaml.snakeyaml.Yaml"
  },
  {
    "name": "reactor.adapter.JdkFlowAdapter",
    "methods": [
      {
        "name": "flowPublisherToFlux",
        "parameterTypes": [
          "java.util.concurrent.Flow$Publisher"
        ]
      },
      {
        "name": "publisherToFlowPublisher",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      }
    ]
  },
  {
    "name": "reactor.core.publisher.Flux"
  },
  {
    "name": "reactor.netty.ChannelOperationsId"
  },
  {
    "name": "reactor.netty.DisposableChannel",
    "methods": [
      {
        "name": "address",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "reactor.netty.channel.ChannelOperationsHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.http.server.HttpServer"
  },
  {
    "name": "reactor.netty.http.server.HttpServerResponse"
  },
  {
    "name": "reactor.netty.http.server.HttpTrafficHandler",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.transport.ServerTransport$Acceptor",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.transport.ServerTransport$AcceptorInitializer"
  },
  {
    "name": "reactor.netty.transport.TransportConfig$TransportChannelInitializer"
  },
  {
    "name": "reactor.tools.agent$ReactorDebugAgent"
  },
  {
    "name": "reactor.tools.agent.ReactorDebugAgent"
  },
  {
    "name": "rx$Observable"
  },
  {
    "name": "rx.Observable"
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [
      {
        "name": "theUnsafe"
      }
    ],
    "methods": [
      {
        "name": "copyMemory",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndAddLong",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndSetObject",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeCleaner",
        "parameterTypes": [
          "java.nio.ByteBuffer"
        ]
      },
      {
        "name": "storeFence",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.misc.VM"
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.JavaKeyStore$DualFormatJKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.JavaKeyStore$JKS",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.MD5",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA224",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.certpath.PKIXCertPathValidator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.PSSParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAPSSSignature",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA256withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.util.ObjectIdentifier"
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificateExtensions"
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  }
]