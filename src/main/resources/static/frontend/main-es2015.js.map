{"version":3,"sources":["./src/app/Components/home/home.component.ts","./src/app/Components/home/home.component.html","./src/app/Services/rsocket-service.ts","./src/app/Services/reader-service.ts","./src/app/truncate.pipe.ts","./src/environments/environment.ts","./src/app/Components/SubComponents/navbar/register/register.component.ts","./src/app/Components/SubComponents/navbar/register/register.component.html","./src/app/Components/home/popular-manga/popular-manga.component.html","./src/app/Components/home/popular-manga/popular-manga.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/RSocketUtil/RSocketClientResponder.ts","./src/app/Services/manga.service.ts","./src/app/RSocketUtil/RSocketConfig.ts","./src/app/Components/SubComponents/spinner/spinner.component.html","./src/app/Components/SubComponents/spinner/spinner.component.ts","./src/app/Components/reader/reader.component.ts","./src/app/Components/reader/reader.component.html","./src/app/app.module.ts","./src/app/Components/SubComponents/footer/footer.component.ts","./src/app/Components/SubComponents/footer/footer.component.html","./src/app/Directives/VarDirective.ts","./src/app/Components/manga-list/manga-list.component.html","./src/app/Components/manga-list/manga-list.component.ts","./src/app/Components/SubComponents/navbar/navbar.component.ts","./src/app/Components/SubComponents/navbar/navbar.component.html","./src/app/Interceptors/Auth.interceptor.ts","./src/app/RSocketUtil/RsocketUtils.ts","./src/app/RSocketUtil/JSONBufferSerializer.ts","./src/app/Services/manga-list-service.ts","./src/app/Components/SubComponents/navbar/login/login.component.ts","./src/app/Components/SubComponents/navbar/login/login.component.html","./src/app/Directives/ImageDirective.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/app-routing.module.ts","./src/app/Components/manga-page/manga-page.component.html","./src/app/Components/manga-page/manga-page.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { LOCAL_STORAGE, WebStorageService } from \"ngx-webstorage-service\";\r\nimport { Manga } from \"../../Models/Manga.models\";\r\nimport { MangaListService } from \"../../Services/manga-list-service\";\r\nimport { MangaService } from \"../../Services/manga.service\";\r\n\r\n@Component({\r\n  selector: \"app-home\",\r\n  templateUrl: \"./home.component.html\",\r\n  styleUrls: [\"./home.component.css\"],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  portrait: boolean;\r\n  isMobile: boolean;\r\n  latestManga: Manga[] = [];\r\n  showGenre = false;\r\n  // tslint:disable-next-line:max-line-length\r\n  anouncement =\r\n    \"Welcome to Manga-Spring! This site was built to showcase technical expertise in full-stack development. The coolest thing about this site is that it uses the RSocket network protocol to send/recieve data\";\r\n  genres = [\r\n    \"Action\",\r\n    \"Adventure\",\r\n    \"Comedy\",\r\n    \"Comic\",\r\n    \"Drama\",\r\n    \"Demons\",\r\n    \"Doujinshi\",\r\n    \"Ecchi\",\r\n    \"Fantasy\",\r\n    \"Harem\",\r\n    \"Historical\",\r\n    \"Horror\",\r\n    \"Josei\",\r\n    \"Martial Arts\",\r\n    \"Magic\",\r\n    \"Mature\",\r\n    \"Mecha\",\r\n    \"Mystery\",\r\n    \"Psychological\",\r\n    \"Romance\",\r\n    \"Seinen\",\r\n    \"School Life\",\r\n    \"Shoujo\",\r\n    \"Sci-fi\",\r\n    \"Shounen\",\r\n    \"Supernatural\",\r\n    \"Sports\",\r\n    \"Tragedy\",\r\n  ];\r\n\r\n  currentlyReading: Manga;\r\n  currentlyReadingChapter: string;\r\n  routerLinkText: string;\r\n\r\n  constructor(\r\n    private listService: MangaListService,\r\n    public mangaService: MangaService,\r\n    title: Title,\r\n    deviceService: DeviceDetectorService,\r\n    @Inject(LOCAL_STORAGE) storage: WebStorageService\r\n  ) {\r\n    title.setTitle(\"MangaSpring\");\r\n    this.isMobile = deviceService.isMobile();\r\n    this.currentlyReading = storage.get(\"Manga\");\r\n    this.currentlyReadingChapter = mangaService.chapterIndex;\r\n  }\r\n\r\n  getLatest() {\r\n    // this.latestManga = this.latestManga.filter(item => item.ld > new Date(Date.now()).getTime() / 1000 - 604800 && !item.c.includes(\"Adult\"));\r\n    this.sortByTime();\r\n    //set size later\r\n    this.latestManga.length = 6;\r\n  }\r\n\r\n  show() {\r\n    this.showGenre = !this.showGenre;\r\n  }\r\n\r\n  setChapter(manga, chapter) {\r\n    this.mangaService.setManga(manga);\r\n    this.mangaService.setChapterIndex(chapter);\r\n  }\r\n\r\n  sortByTime() {\r\n    return this.latestManga.sort((a, b) => b.ld - a.ld);\r\n  }\r\n\r\n  getImage(url: string) {\r\n    if (url.startsWith(\"http\")) {\r\n      return url;\r\n    } else {\r\n      return \"/image/\" + url;\r\n    }\r\n  }\r\n\r\n  updateList(manga: Manga) {\r\n    if (!this.latestManga.find((m) => m.realID === manga.realID))\r\n      this.latestManga.push(manga);\r\n    else {\r\n      for (let i = 0; i < this.latestManga.length; i++) {\r\n        if (this.latestManga[i].realID === manga.realID)\r\n          this.latestManga[i] = manga;\r\n      }\r\n    }\r\n    this.getLatest();\r\n  }\r\n\r\n  ngOnInit() {\r\n    //fix when we get a lot of manga\r\n    if (this.listService.mangaList) {\r\n      this.latestManga = this.listService.mangaList.slice();\r\n      this.getLatest();\r\n      this.listService.recentSubject.subscribe((list) => {\r\n        this.latestManga = list;\r\n        this.getLatest();\r\n        this.listService.recent = list;\r\n      });\r\n    } else if (!this.listService.mangaList && this.listService.recent) {\r\n      this.latestManga = this.listService.recent;\r\n      this.getLatest();\r\n    } else {\r\n      this.listService.mangaSubject.subscribe((list) => {\r\n        this.latestManga = list.slice();\r\n        this.getLatest();\r\n      });\r\n    }\r\n    this.listService.changeSubject.subscribe((m) => this.updateList(m));\r\n    window.scroll(0, 0);\r\n  }\r\n}\r\n","<!-- If api isn't finished getting manga show cool spinner -->\r\n<div *ngIf=\"latestManga.length===0\" class=\"container justify-content-center\" style=\"text-align: center;\">\r\n  <app-spinner [wedge]=true [isMobile]=isMobile></app-spinner>\r\n  <h5>Loading Site...</h5>\r\n</div>\r\n\r\n<!--Renders the popular manga list-->\r\n<div *ngIf=\"latestManga.length!==0\" class=\"container favorites\">\r\n  <h3> <i class=\"fas fa-fire\"></i> POPULAR MANGA</h3>\r\n  <div class=\"row container\">\r\n    <app-popular-manga></app-popular-manga>\r\n  </div>\r\n</div>\r\n\r\n<!--Latest manga list-->\r\n<div class=\"container\" *ngIf=\"latestManga.length!==0\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-6 favorites2\">\r\n      <h3><i class=\"fas fa-clock\"></i> LATEST MANGA</h3>\r\n      <table class=\"table table-bordered table-hover\">\r\n        <thead class=\"thead-dark text-center\">\r\n          <tr>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Chapter</th>\r\n            <th class=\"hidecol\" scope=\"col\">Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let manga of latestManga\">\r\n            <td class=\"text-center align-middle\"><img class=\"img card-img-top\" src=\"{{getImage(manga.im)}}\"\r\n                alt=\"Card image cap\"></td>\r\n            <td class=\"text-center align-middle\"><a routerLink=\"/manga-page/{{manga.realID}}\"\r\n                routerLinkActive=\"router-link-active\">\r\n                <h5 class=\"card-title\">{{ manga.t }}</h5>\r\n              </a></td>\r\n            <td class=\"text-center align-middle\"><a (click)=\"mangaService.setPageIndex(undefined)\"\r\n                routerLink=\"/manga-reader/{{manga.realID}}/{{ manga.info.chapters[0][0]}}\"\r\n                routerLinkActive=\"router-link-active\" class=\"card-text\"> Chapter {{ manga.info.chapters[0][0]}}</a></td>\r\n            <td class=\"hidecol text-muted text-center align-middle\"><small>Last updated {{ manga.ld * 1000 |\r\n                date:'MM-dd-yyyy'\r\n                }}</small></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!--Displays the announcement-->\r\n    <div class=\"col-lg-6 message\">\r\n      <div class=\"card announcement\">\r\n        <div class=\"card-header\">\r\n          <h3><i class=\"fas fa-exclamation-triangle\"></i> ANNOUNCEMENTS</h3>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">Hey Everyone,</h5>\r\n          <p class=\"card-text\">{{ anouncement }} <br><br> </p>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n          <small class=\"text-muted\">If you find any bugs or misplaced chapters send us a email <a\r\n              href=\"mailto:someone@example.com?Subject=Report\" target=\"_top\">Here</a></small>\r\n        </div>\r\n      </div>\r\n\r\n      <!--Displays the Last Read Chapter-->\r\n      <div class=\"container\" *ngIf=\"currentlyReading && currentlyReadingChapter\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-10 favorites2\">\r\n            <h3><i class=\"fas fa-book-reader\"></i> Continue Reading</h3>\r\n            <table class=\"table table-bordered table-hover\">\r\n              <tbody>\r\n                <tr>\r\n                  <td class=\"text-center align-middle\"><img class=\"img card-img-top\" src=\"{{currentlyReading.im}}\"\r\n                      alt=\"Card image cap\"></td>\r\n                  <td class=\"text-center align-middle\"><a\r\n                      routerLink=\"/manga-reader/{{currentlyReading.realID}}/{{currentlyReadingChapter.replace('Chapter ','')}}\"\r\n                      routerLinkActive=\"router-link-active\">\r\n                      <h5 class=\"card-title\">{{ currentlyReading.t }}</h5>\r\n                    </a></td>\r\n                  <td class=\"text-center align-middle\"><a\r\n                      routerLink=\"/manga-reader/{{currentlyReading.realID}}/{{currentlyReadingChapter.replace('Chapter ','')}}\"\r\n                      routerLinkActive=\"router-link-active\">{{currentlyReadingChapter}}</a>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!--Displays the genre selection-->\r\n      <div class=\"card top-rated\">\r\n        <div class=\"card-header\">\r\n          <h3><img class=\"logo\" src=\"../../assets/imageedit_11_3620823692.png\"> BROWSE BY GENRE</h3>\r\n        </div>\r\n        <div class=\"card-body row\">\r\n          <div class=\"col-sm-4\" *ngFor=\"let genre of genres; let i = index;\">\r\n            <a *ngIf=\"showGenre || i < 6\" routerLink=\"/manga-list/{{genre}}\" routerLinkActive=\"router-link-active\">\r\n              <p class=\"card-text\">{{ genre }}</p>\r\n            </a>\r\n          </div>\r\n          <button *ngIf=\"!showGenre\" (click)=\"show()\" class=\"btn btn-success showMore\"><i\r\n              class=\"fas fa-angle-down\"></i></button>\r\n          <button *ngIf=\"showGenre\" (click)=\"show()\" class=\"btn btn-success showMore\"><i\r\n              class=\"fas fa-angle-up\"></i></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { LOCAL_STORAGE, WebStorageService } from \"ngx-webstorage-service\";\r\nimport { ClientConfig, Encodable, RSocketClient } from \"rsocket-core\";\r\nimport { ReactiveSocket } from \"rsocket-types\";\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { delay, retryWhen, take, toArray } from \"rxjs/operators\";\r\nimport { Manga, MangaChapters } from \"../Models/Manga.models\";\r\nimport { RSocketClientResponder } from \"../RSocketUtil/RSocketClientResponder\";\r\nimport { RSocketConfig } from \"../RSocketUtil/RSocketConfig\";\r\nimport {\r\n  extractPayloadData,\r\n  flowableSignal2RXJS,\r\n  routedPayload,\r\n  singleSignal2RXJS,\r\n} from \"../RSocketUtil/RsocketUtils\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RSocketService {\r\n  client: RSocketClient<any, Encodable>;\r\n  rsocket: ReactiveSocket<any, Encodable>;\r\n  socketReady = new Subject<ReactiveSocket<any, Encodable>>();\r\n  changeStream = new Subject<Manga>();\r\n  mangaListSubject = new Subject<Manga>();\r\n  latestSubject = new Subject<Manga[]>();\r\n  popularSubject = new Subject<Manga[]>();\r\n  connectFailed = false;\r\n  connected = false;\r\n  currentMangaSubject = new Subject<string>();\r\n\r\n  constructor(\r\n    http: HttpClient,\r\n    deviceService: DeviceDetectorService,\r\n    @Inject(LOCAL_STORAGE) storage: WebStorageService\r\n  ) {\r\n    let id = storage.get(\"uniqueId\");\r\n    if (!id) {\r\n      id =\r\n        deviceService.os +\r\n        \"-Manga-Spring-\" +\r\n        Math.floor(Math.random() * Math.floor(1000));\r\n      storage.set(\"uniqueId\", id);\r\n    }\r\n    const responder = new RSocketClientResponder(\r\n      this.currentMangaSubject,\r\n      deviceService.getDeviceInfo()\r\n    );\r\n\r\n    const tokenRequest = http\r\n      .get(\"/api/getToken\", {\r\n        headers: new HttpHeaders().set(\"Content-Type\", \"text/plain\"),\r\n        responseType: \"text\",\r\n      })\r\n      .pipe(retryWhen((errors) => errors.pipe(delay(1000), take(10))));\r\n\r\n    const tokenConsumer = (token: string) => {\r\n      this.connectRSocket(\r\n        new RSocketConfig(id, token, responder).rsocketConfig\r\n      );\r\n      this.subscribe2RSocket();\r\n    };\r\n\r\n    tokenRequest.subscribe(tokenConsumer);\r\n\r\n    setInterval(() => {\r\n      if (this.connectFailed) {\r\n        this.connectFailed = false;\r\n        console.log(\"Attempting Reconnect\");\r\n        tokenRequest.subscribe(tokenConsumer);\r\n      }\r\n    }, 3000);\r\n  }\r\n\r\n  connectRSocket(rsocketConfig: ClientConfig<any, Encodable>) {\r\n    new RSocketClient(rsocketConfig).connect().subscribe({\r\n      onComplete: (s) => this.publishConnectEvent(s),\r\n      onError: (err) => {\r\n        console.log(\"Failed to Connect to RSocket\", err);\r\n        this.connectFailed = true;\r\n        this.connected = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  subscribe2RSocket() {\r\n    this.socketReady.subscribe((rsocket) => {\r\n      if (!this.connected) {\r\n        this.connected = true;\r\n        console.log(\"🚀🚀🚀 RSocket Connection is: CONNECTED 🚀🚀🚀\");\r\n        this.getManga(rsocket).subscribe(this.mangaListSubject);\r\n        this.getPopular(rsocket).subscribe(this.popularSubject);\r\n        this.getLatest(rsocket).subscribe(this.latestSubject);\r\n        this.watchDBChanges(rsocket).subscribe(this.changeStream);\r\n      }\r\n    });\r\n  }\r\n\r\n  //get All manga\r\n  getManga(socket: ReactiveSocket<any, Encodable>): Observable<Manga> {\r\n    return new Observable<Manga>((subscriber) => {\r\n      socket\r\n        .requestStream(routedPayload(\"get-mangas\"))\r\n        .map(extractPayloadData)\r\n        .subscribe(flowableSignal2RXJS(subscriber));\r\n    });\r\n  }\r\n\r\n  getMangaByID(id: number): Observable<Manga> {\r\n    return new Observable<Manga>((subscriber) => {\r\n      this.rsocket\r\n        .requestResponse(routedPayload(\"get-manga-\" + id))\r\n        .map(extractPayloadData)\r\n        .subscribe(singleSignal2RXJS(subscriber));\r\n    });\r\n  }\r\n\r\n  getPopular(socket: ReactiveSocket<any, Encodable>): Observable<Manga[]> {\r\n    return new Observable<Manga>((subscriber) => {\r\n      socket\r\n        .requestStream(routedPayload(\"popular-manga\"))\r\n        .map(extractPayloadData)\r\n        .subscribe(flowableSignal2RXJS(subscriber, 5));\r\n    }).pipe(toArray());\r\n  }\r\n\r\n  getLatest(socket: ReactiveSocket<any, Encodable>): Observable<Manga[]> {\r\n    return new Observable<Manga>((subscriber) => {\r\n      socket\r\n        .requestStream(routedPayload(\"latest-manga\"))\r\n        .map(extractPayloadData)\r\n        .subscribe(flowableSignal2RXJS(subscriber));\r\n    }).pipe(toArray());\r\n  }\r\n\r\n  getChapters(id: number): Observable<MangaChapters> {\r\n    return new Observable<MangaChapters>((subscriber) => {\r\n      this.rsocket\r\n        .requestResponse(routedPayload(\"get-chapters-\" + id))\r\n        .map(extractPayloadData)\r\n        .subscribe(singleSignal2RXJS(subscriber));\r\n    });\r\n  }\r\n\r\n  watchDBChanges(socket: ReactiveSocket<any, Encodable>): Observable<Manga> {\r\n    return new Observable<Manga>((subscriber) => {\r\n      socket\r\n        .requestStream(routedPayload(\"mongo-change-stream\"))\r\n        .map(extractPayloadData)\r\n        .subscribe(flowableSignal2RXJS(subscriber));\r\n    });\r\n  }\r\n\r\n  publishConnectEvent(sock: ReactiveSocket<any, Encodable>) {\r\n    sock.connectionStatus().subscribe((status) => {\r\n      if (status.kind !== \"CONNECTED\") {\r\n        console.log(\"RSocket Connection is: \" + status.kind);\r\n        this.connected = false;\r\n        this.rsocket = undefined;\r\n        if (status.kind === \"ERROR\") {\r\n          this.connectFailed = true;\r\n        }\r\n      } else {\r\n        this.rsocket = sock;\r\n        this.socketReady.next(sock);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Title } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ReaderComponent } from \"../Components/reader/reader.component\";\r\nimport { MangaListService } from \"./manga-list-service\";\r\nimport { MangaService } from \"./manga.service\";\r\nimport { RSocketService } from \"./rsocket-service\";\r\n\r\n// Not Meant to be Injected\r\nexport class ReaderService {\r\n  constructor(\r\n    private reader: ReaderComponent,\r\n    protected service: MangaService,\r\n    protected rsocketService: RSocketService,\r\n    protected listService: MangaListService,\r\n    protected route: ActivatedRoute,\r\n    protected router: Router,\r\n    protected title: Title\r\n  ) {}\r\n\r\n  // goes to next page\r\n  nextPage(i) {\r\n    this.reader.firstPage = false;\r\n\r\n    // if it's not in vertical mode, proceed to next page by setting thier hidden status\r\n    if (i + 1 < this.reader.display.length && !this.reader.verticalView) {\r\n      this.reader.display[i][4] = false;\r\n      this.reader.display[++i][4] = true;\r\n      this.reader.currentPage = i;\r\n      window.scroll(0, 0);\r\n      this.service.setPageIndex(i);\r\n    }\r\n\r\n    // this will make the last page in vertical clickable\r\n    else if (i + 1 >= this.reader.Index.images.length - 1) {\r\n      this.nextChapter();\r\n      window.scroll(0, 0);\r\n    }\r\n\r\n    // this will check if at end of manga\r\n    if (\r\n      this.service.chapterIndex ==\r\n        this.reader.chapters.chapters[0].chapterIndex &&\r\n      this.reader.display[this.reader.display.length - 1][0] ===\r\n        this.reader.display[i][0]\r\n    ) {\r\n      this.reader.finalPage = true;\r\n    }\r\n  }\r\n\r\n  // goes to previous page\r\n  lastPage(i) {\r\n    this.reader.finalPage = false;\r\n    if (i != 0) {\r\n      this.reader.display[i][4] = false;\r\n      this.reader.display[--i][4] = true;\r\n      this.reader.currentPage = i;\r\n      this.service.setPageIndex(i);\r\n    } else if (i == 0) {\r\n      this.lastChapter();\r\n    }\r\n\r\n    if (\r\n      this.reader.display.length !== 0 &&\r\n      this.service.chapterIndex ==\r\n        this.reader.chapters.chapters[this.reader.chapters.chapters.length - 1]\r\n          .chapterIndex &&\r\n      this.reader.display[0][0] === this.reader.display[i][0]\r\n    ) {\r\n      this.reader.firstPage = true;\r\n    }\r\n\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  // jumps to page\r\n  jump(index) {\r\n    this.reader.display.forEach((element) => (element[4] = false));\r\n    this.reader.display[index][4] = true;\r\n    this.reader.currentPage = index;\r\n    this.service.setPageIndex(index);\r\n    // check if first page\r\n    if (\r\n      this.reader.display[0][0] === this.reader.display[index][0] &&\r\n      this.service.chapterIndex ==\r\n        this.reader.chapters.chapters[this.reader.chapters.chapters.length - 1]\r\n          .chapterIndex\r\n    ) {\r\n      this.reader.firstPage = true;\r\n    } else {\r\n      this.reader.firstPage = false;\r\n    }\r\n    // check if last page\r\n    if (\r\n      this.reader.display[this.reader.display.length - 1][0] ===\r\n        this.reader.display[index][0] &&\r\n      this.service.chapterIndex == this.reader.chapters.chapters[0].chapterIndex\r\n    ) {\r\n      this.reader.finalPage = true;\r\n    } else {\r\n      this.reader.finalPage = false;\r\n    }\r\n  }\r\n  // jumps to chapter\r\n  jumpChapter(chapter) {\r\n    this.service.setChapterIndex(\"Chapter \" + chapter);\r\n    clearInterval(this.reader.interval);\r\n    this.reader.display = [];\r\n    this.service.setPageIndex(undefined);\r\n    this.reader.finalPage = false;\r\n    this.router.navigate([\r\n      \"manga-reader/\",\r\n      this.reader.list[0].realID,\r\n      chapter,\r\n      1,\r\n    ]);\r\n  }\r\n  // goes to next chapter\r\n  nextChapter() {\r\n    this.reader.firstChapter = false;\r\n    for (let i = this.reader.chapters.chapters.length - 1; i >= 0; i--) {\r\n      if (\r\n        this.reader.chapters.chapters[i].chapterIndex ===\r\n          this.service.chapterIndex &&\r\n        i - 1 >= 0\r\n      ) {\r\n        this.service.setChapterIndex(\r\n          this.reader.chapters.chapters[i - 1].chapterIndex\r\n        );\r\n        this.reader.display = [];\r\n        clearInterval(this.reader.interval);\r\n        this.service.setPageIndex(undefined);\r\n\r\n        this.router.navigate([\r\n          \"manga-reader/\",\r\n          this.reader.list[0].realID,\r\n          parseFloat(\r\n            this.reader.chapters.chapters[i - 1].chapterIndex.substring(8)\r\n          ),\r\n          1,\r\n        ]);\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // goes to previous chapter\r\n  lastChapter() {\r\n    this.reader.currentPageLoaded = false;\r\n    this.reader.finalChapter = false;\r\n    for (let i = this.reader.chapters.chapters.length - 1; i >= 0; i--) {\r\n      if (\r\n        this.reader.chapters.chapters[i].chapterIndex ===\r\n        this.service.chapterIndex\r\n      ) {\r\n        this.service.setChapterIndex(\r\n          this.reader.chapters.chapters[i + 1].chapterIndex\r\n        );\r\n\r\n        this.reader.display = [];\r\n        clearInterval(this.reader.interval);\r\n\r\n        this.service.setPageIndex(undefined);\r\n        this.router.navigate([\r\n          \"manga-reader/\",\r\n          this.reader.list[0].realID,\r\n          parseFloat(\r\n            this.reader.chapters.chapters[i + 1].chapterIndex.substring(8)\r\n          ),\r\n          //@ts-ignore\r\n          this.reader.chapters.chapters[i + 1].images[0][0] + 1,\r\n        ]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // gets all chapters from API\r\n  getChapter(params) {\r\n    // this checks if the service has the right manga\r\n    if (\r\n      this.service.Manga &&\r\n      this.service.Manga.realID === parseFloat(params.get(\"manga\"))\r\n    ) {\r\n      this.reader.list[0] = this.service.Manga;\r\n\r\n      // this.reader checks whether the manga page has a pending request\r\n      if (!this.service.sendingRequest) {\r\n        this.service\r\n          .getChapter(this.service.Manga.realID)\r\n          .subscribe((chapters) => {\r\n            this.service.chapters = chapters;\r\n            this.service.sendingRequest = false;\r\n\r\n            this.reader.setup(params);\r\n            this.title.setTitle(\r\n              this.reader.list[0].t + \": Chapter \" + this.reader.chapterIndex\r\n            );\r\n          });\r\n      }\r\n\r\n      // else wait for request\r\n      else {\r\n        this.service.chapterSubject.subscribe((chapters) => {\r\n          this.service.chapters = chapters;\r\n\r\n          this.reader.setup(params);\r\n          this.title.setTitle(\r\n            this.reader.list[0].t + \": Chapter \" + this.reader.chapterIndex\r\n          );\r\n          this.service.sendingRequest = false;\r\n        });\r\n      }\r\n    }\r\n\r\n    // else wrong manga\r\n    else {\r\n      this.rsocketService\r\n        .getMangaByID(params.get(\"manga\"))\r\n        .subscribe((manga) => {\r\n          this.reader.list[0] = manga;\r\n          this.service.setManga(manga);\r\n\r\n          this.service\r\n            .getChapter(this.service.Manga.realID)\r\n            .subscribe((chapters) => {\r\n              this.service.chapters = chapters;\r\n              this.service.sendingRequest = false;\r\n\r\n              this.reader.setup(params);\r\n              this.title.setTitle(\r\n                this.reader.list[0].t + \": Chapter \" + this.reader.chapterIndex\r\n              );\r\n            });\r\n        });\r\n    }\r\n  }\r\n\r\n  // sets the current chapter\r\n  setChapter(params) {\r\n    const filtered = this.reader.chapters.chapters.filter(\r\n      (chapter) => chapter.chapterIndex === \"Chapter \" + params.get(\"index\")\r\n    );\r\n\r\n    this.reader.Index = filtered[0];\r\n    this.service.setChapterIndex(\"Chapter \" + params.get(\"index\"));\r\n    this.populateDisplay();\r\n\r\n    // check if first page\r\n    if (\r\n      this.service.chapterIndex ==\r\n      this.reader.chapters.chapters[this.reader.chapters.chapters.length - 1]\r\n        .chapterIndex\r\n    ) {\r\n      this.reader.firstChapter = true;\r\n      this.reader.firstPage = true;\r\n    } else {\r\n      this.reader.firstChapter = false;\r\n      this.reader.firstPage = false;\r\n    }\r\n\r\n    // check if final chapter\r\n    if (\r\n      this.service.chapterIndex == this.reader.chapters.chapters[0].chapterIndex\r\n    ) {\r\n      this.reader.finalChapter = true;\r\n    } else {\r\n      this.reader.finalChapter = false;\r\n    }\r\n  }\r\n\r\n  // uses interval to add pages to the display\r\n  populateDisplay() {\r\n    let i = 0;\r\n    const array = this.reader.Index.images.slice().reverse();\r\n    this.reader.interval = setInterval(() => {\r\n      if (i === array.length) {\r\n        return;\r\n      }\r\n\r\n      this.reader.display.push(array[i]);\r\n      this.reader.display[i][5] = false;\r\n\r\n      if (i === this.reader.currentPage) {\r\n        this.reader.display[i][4] = true;\r\n      } else {\r\n        this.reader.display[i][4] = false;\r\n      }\r\n\r\n      i++;\r\n    }, 0);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncate'\r\n})\r\nexport class TruncatePipe implements PipeTransform {\r\n\r\n  transform(value: any, ...args: any[]): any {\r\n    const limit = args.length > 0 ? parseInt(args[0], 10) : 20;\r\n    const trail = args.length > 1 ? args[1] : '...';\r\n\r\n    return value.length > limit ? value.substring(0, limit) + trail : value;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper fadeInDown\">\r\n    <div id=\"formContent\">\r\n      <!-- Tabs Titles -->\r\n\r\n      <!-- Icon -->\r\n      <div class=\"fadeIn first\">\r\n        <img src=\"https://www.b-cube.in/wp-content/uploads/2014/05/aditya-300x177.jpg\" id=\"icon\" alt=\"User Icon\" />\r\n        <h1>Manga Paradise</h1>\r\n      </div>\r\n\r\n      <!-- Login Form -->\r\n      <form>\r\n        <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"username\">\r\n        <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"email\">\r\n        <input type=\"text\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"password\">\r\n        <input type=\"text\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"re-enterpassword\">\r\n        <input type=\"submit\" class=\"fadeIn fourth\" value=\"Sign Up\">\r\n      </form>\r\n\r\n      <!-- Remind Passowrd -->\r\n      <div id=\"formFooter\">\r\n        <a class=\"underlineHover\" href=\"#\">Go to the Site</a>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n","<div class=\"row\">\r\n  <div *ngFor=\"let manga of favorites\" class=\"col\">\r\n    <div class=\"card-deck\" [ngClass]=\"{'notWeird': !wierdSize}\">\r\n      <div class=\"card\">\r\n\r\n        <div *ngIf=\"!manga.info.imageLoaded\">\r\n          <app-spinner></app-spinner>\r\n        </div>\r\n\r\n        <img [hidden]=\"!manga.info.imageLoaded\" (load)='manga.info.imageLoaded = true' class=\"img card-img-top\"\r\n          src=\"{{getImage(manga.im)}}\" alt=\"Card image cap\">\r\n\r\n        <div class=\"card-body\">\r\n          <a routerLink=\"/manga-page/{{manga.realID}}\" routerLinkActive=\"router-link-active\">\r\n            <h6 class=\"card-title\">{{ manga.t }}</h6>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, HostListener, OnInit } from \"@angular/core\";\r\nimport { Manga } from \"src/app/Models/Manga.models\";\r\nimport { MangaListService } from \"src/app/Services/manga-list-service\";\r\nimport { RSocketService } from \"src/app/Services/rsocket-service\";\r\n\r\n@Component({\r\n  selector: \"app-popular-manga\",\r\n  templateUrl: \"./popular-manga.component.html\",\r\n  styleUrls: [\"./popular-manga.component.css\"],\r\n})\r\nexport class PopularMangaComponent implements OnInit {\r\n  favorites: Manga[];\r\n  filter: Manga[];\r\n  wierdSize: boolean;\r\n\r\n  constructor(\r\n    private service: MangaListService,\r\n    private rsocketservice: RSocketService\r\n  ) {\r\n    this.getScreenSize();\r\n  }\r\n\r\n  getImage(url: string) {\r\n    if (url.startsWith(\"http\")) {\r\n      return url;\r\n    } else {\r\n      return \"/image/\" + url;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.service.popular) {\r\n      this.favorites = this.service.popular;\r\n    } else {\r\n      this.rsocketservice.popularSubject.subscribe((apiResponse) => {\r\n        this.favorites = apiResponse;\r\n        this.service.popular = apiResponse;\r\n      });\r\n    }\r\n  }\r\n\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  getScreenSize(event?) {\r\n    if (window.innerWidth > 767 && window.innerWidth < 993)\r\n      this.wierdSize = true;\r\n    else this.wierdSize = false;\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  title = \"Manga Spring\";\r\n}\r\n","<div class=\"main-container\">\r\n  <app-navbar></app-navbar>\r\n  <router-outlet></router-outlet>\r\n  <app-footer></app-footer>\r\n</div>\r\n","import { DeviceInfo } from \"ngx-device-detector\";\r\nimport { Encodable } from \"rsocket-core\";\r\nimport { Flowable, Single } from \"rsocket-flowable\";\r\nimport { Payload, Responder } from \"rsocket-types\";\r\nimport { Subject } from \"rxjs\";\r\nimport { bufferCount, map } from \"rxjs/operators\";\r\nimport { rxjs2Flowable } from \"./RsocketUtils\";\r\n\r\nfunction logRequest(type: string, payload: Payload<any, Encodable>) {\r\n  console.log(`Responder response to ${type}, data: ${payload.data || \"null\"}`);\r\n}\r\n\r\nfunction make(data): Payload<any, Encodable> {\r\n  return {\r\n    data,\r\n    metadata: \"\",\r\n  };\r\n}\r\n\r\nexport class RSocketClientResponder implements Responder<any, Encodable> {\r\n  mangaSubject: Subject<string>;\r\n\r\n  constructor(mangaSubject: Subject<string>, private deviceInfo: DeviceInfo) {\r\n    this.mangaSubject = mangaSubject;\r\n  }\r\n\r\n  metadataPush(payload: Payload<any, Encodable>): Single<void> {\r\n    return Single.error(new Error(\"not implemented\"));\r\n  }\r\n\r\n  fireAndForget(payload: Payload<any, Encodable>): void {\r\n    logRequest(\"fire-and-forget\", payload);\r\n  }\r\n\r\n  requestResponse(\r\n    payload: Payload<any, Encodable>\r\n  ): Single<Payload<any, Encodable>> {\r\n    console.log(\"request-response Request from server\", payload.metadata);\r\n    return Single.of(make(this.deviceInfo));\r\n  }\r\n\r\n  requestStream(\r\n    payload: Payload<any, Encodable>\r\n  ): Flowable<Payload<any, Encodable>> {\r\n    console.log(\"request-stream Request from server\", payload.metadata);\r\n    return new Flowable(\r\n      rxjs2Flowable(\r\n        this.mangaSubject.pipe(\r\n          bufferCount(2),\r\n          map((arr) => arr[arr.length - 1])\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  requestChannel(\r\n    payloads: Flowable<Payload<any, Encodable>>\r\n  ): Flowable<Payload<any, Encodable>> {\r\n    return Flowable.just(make(\"client channel response\"));\r\n  }\r\n}\r\n","import { Inject, Injectable } from \"@angular/core\";\r\nimport { LOCAL_STORAGE, WebStorageService } from \"ngx-webstorage-service\";\r\nimport { Subject } from \"rxjs\";\r\nimport { delay, map, take } from \"rxjs/operators\";\r\nimport { Manga, MangaChapters } from \"../Models/Manga.models\";\r\nimport { MangaListService } from \"./manga-list-service\";\r\nimport { RSocketService } from \"./rsocket-service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class MangaService {\r\n  public Manga: Manga;\r\n  public chapters: MangaChapters;\r\n  public chapterIndex: string;\r\n  public pageIndex: number;\r\n  public chapterSubject = new Subject<MangaChapters>();\r\n  public updateSubject = new Subject<Manga>();\r\n  public sendingRequest: boolean;\r\n  search: boolean;\r\n\r\n  constructor(\r\n    @Inject(LOCAL_STORAGE) private storage: WebStorageService,\r\n    private rsocketService: RSocketService,\r\n    listService: MangaListService\r\n  ) {\r\n    // gets manga and chapterindex from session\r\n    const storageManga = storage.get(\"Manga\");\r\n    const storageCIndex = storage.get(\"CIndex\");\r\n    const storagePIndex = storage.get(\"PIndex\");\r\n\r\n    if (storageManga) {\r\n      this.Manga = storageManga;\r\n      //ensure data in session isn't stale\r\n      listService.mangaSubject.subscribe((list) => {\r\n        const mangaFromService = list.find(\r\n          (m) => m.realID === this.Manga.realID\r\n        );\r\n        this.setManga(mangaFromService);\r\n        this.updateSubject.next(mangaFromService);\r\n      });\r\n    }\r\n\r\n    if (storageCIndex) {\r\n      this.setChapterIndex(storageCIndex);\r\n    }\r\n\r\n    if (storagePIndex) {\r\n      this.setPageIndex(storagePIndex);\r\n    }\r\n    //Update set Manga on Change Stream\r\n    listService.changeSubject.pipe(delay(500)).subscribe((m) => {\r\n      const existsInList = listService.mangaList.find(\r\n        (m) => m.realID === this.Manga.realID\r\n      );\r\n      if (existsInList) {\r\n        this.setManga(m);\r\n        this.updateSubject.next(m);\r\n      }\r\n    });\r\n  }\r\n\r\n  // sets current manga\r\n  setManga(manga: Manga) {\r\n    this.Manga = manga;\r\n  }\r\n  // sets current manga\r\n  saveManga2Local() {\r\n    this.storage.set(\"Manga\", this.Manga);\r\n  }\r\n\r\n  setMangaForReader(manga: Manga) {\r\n    this.Manga = manga;\r\n    this.saveManga2Local();\r\n  }\r\n\r\n  setMangaFromPage(manga: Manga) {\r\n    this.Manga = manga;\r\n    this.chapterSubject = new Subject<MangaChapters>();\r\n    this.getChapter(manga.realID).subscribe(this.chapterSubject);\r\n    this.chapterSubject.subscribe((chapters) => {\r\n      this.chapters = chapters;\r\n      this.sendingRequest = false;\r\n    });\r\n  }\r\n\r\n  setChapterIndex(index: string) {\r\n    this.chapterIndex = index;\r\n    this.storage.set(\"CIndex\", this.chapterIndex);\r\n    this.rsocketService.currentMangaSubject.next(this.Manga.t + \" \" + index);\r\n  }\r\n\r\n  setPageIndex(index: number) {\r\n    this.pageIndex = index;\r\n    this.storage.set(\"PIndex\", this.pageIndex);\r\n  }\r\n\r\n  getManga(id): Subject<Manga> {\r\n    const sub = new Subject<Manga>();\r\n    if (this.rsocketService.rsocket !== undefined) {\r\n      this.rsocketService.getMangaByID(id).subscribe(sub);\r\n    } else {\r\n      this.rsocketService.socketReady\r\n        .pipe(take(1))\r\n        .subscribe((b) => this.rsocketService.getMangaByID(id).subscribe(sub));\r\n    }\r\n    return sub;\r\n  }\r\n\r\n  getChapter(id: number) {\r\n    const sub = new Subject<MangaChapters>();\r\n    this.sendingRequest = true;\r\n\r\n    if (this.rsocketService.rsocket !== undefined) {\r\n      this.rsocketService.getChapters(id).subscribe(sub);\r\n    } else {\r\n      this.rsocketService.socketReady\r\n        .pipe(take(1))\r\n        .subscribe((b) => this.rsocketService.getChapters(id).subscribe(sub));\r\n    }\r\n    sub\r\n      .pipe(map((c) => c.mangaName))\r\n      .subscribe((n) => this.rsocketService.currentMangaSubject.next(n));\r\n    return sub;\r\n  }\r\n\r\n  saveToStorage() {\r\n    this.storage.set(\"Manga\", this.Manga);\r\n    this.storage.set(\"CIndex\", this.chapterIndex);\r\n    this.storage.set(\"PIndex\", this.pageIndex);\r\n  }\r\n}\r\n","import {\r\n  APPLICATION_JSON,\r\n  BufferEncoders,\r\n  ClientConfig,\r\n  Encodable,\r\n  encodeBearerAuthMetadata,\r\n  encodeCompositeMetadata,\r\n  MESSAGE_RSOCKET_AUTHENTICATION,\r\n  MESSAGE_RSOCKET_COMPOSITE_METADATA,\r\n} from \"rsocket-core\";\r\nimport RSocketWebSocketClient from \"rsocket-websocket-client\";\r\nimport { JSONBufferSerializers } from \"./JSONBufferSerializer\";\r\nimport { RSocketClientResponder } from \"./RSocketClientResponder\";\r\n\r\nexport class RSocketConfig {\r\n  rsocketConfig: ClientConfig<any, Encodable>;\r\n\r\n  constructor(id, jwt: string, responder: RSocketClientResponder) {\r\n    // const rsocketUrl = \"ws://localhost:8080/rsocket\";\r\n    const rsocketUrl = \"wss://manga-spring.herokuapp.com/rsocket\";\r\n\r\n    const transport = new RSocketWebSocketClient(\r\n      {\r\n        url: rsocketUrl,\r\n      },\r\n      BufferEncoders\r\n    );\r\n\r\n    const connectionConfig = {\r\n      keepAlive: 20000,\r\n      lifetime: 180000,\r\n      dataMimeType: APPLICATION_JSON.string,\r\n      metadataMimeType: MESSAGE_RSOCKET_COMPOSITE_METADATA.string,\r\n      //setup payload\r\n      payload: {\r\n        data: id,\r\n        metadata: encodeCompositeMetadata([\r\n          [MESSAGE_RSOCKET_AUTHENTICATION, encodeBearerAuthMetadata(jwt)],\r\n        ]),\r\n      },\r\n    };\r\n\r\n    this.rsocketConfig = {\r\n      serializers: JSONBufferSerializers,\r\n      setup: connectionConfig,\r\n      responder: responder,\r\n      transport: transport,\r\n    };\r\n  }\r\n}\r\n","<!-- generic Spinner -->\r\n<div *ngIf=\"!wedge && !rainbow && !drip\" class=\"loader\">Loading...</div>\r\n\r\n<!-- rainbow spinner -->\r\n<section *ngIf=\"rainbow\" class=\"wrapper\">\r\n  <div class=\"spinner\">\r\n    <i></i>\r\n    <i></i>\r\n    <i></i>\r\n    <i></i>\r\n    <i></i>\r\n    <i></i>\r\n    <i></i>\r\n  </div>\r\n</section>\r\n\r\n<!-- wedge spinner -->\r\n<div *ngIf=\"wedge && !isMobile\" class=\"container row justify-content-center\">\r\n  <div class=\"loadingio-spinner-wedges-v3ub56f6x8p\">\r\n    <div class=\"ldio-lneahrv1l9r\">\r\n      <div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Drip spinner -->\r\n<div *ngIf=\"drip || isMobile\" class=\"container\" style=\"text-align:center;\">\r\n\r\n  <svg class=\"gegga\">\r\n    <defs>\r\n      <filter id=\"gegga\">\r\n        <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"7\" result=\"blur\" />\r\n        <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 20 -10\" result=\"inreGegga\" />\r\n        <feComposite in=\"SourceGraphic\" in2=\"inreGegga\" operator=\"atop\" />\r\n      </filter>\r\n    </defs>\r\n  </svg>\r\n  <svg class=\"snurra\" width=\"200\" height=\"200\" viewBox=\"0 0 200 200\">\r\n    <defs>\r\n      <linearGradient id=\"linjärGradient\">\r\n        <stop class=\"stopp1\" offset=\"0\" />\r\n        <stop class=\"stopp2\" offset=\"1\" />\r\n      </linearGradient>\r\n      <linearGradient y2=\"160\" x2=\"160\" y1=\"40\" x1=\"40\" gradientUnits=\"userSpaceOnUse\" id=\"gradient\"\r\n        xlink:href=\"#linjärGradient\" />\r\n    </defs>\r\n    <path class=\"halvan\"\r\n      d=\"m 164,100 c 0,-35.346224 -28.65378,-64 -64,-64 -35.346224,0 -64,28.653776 -64,64 0,35.34622 28.653776,64 64,64 35.34622,0 64,-26.21502 64,-64 0,-37.784981 -26.92058,-64 -64,-64 -37.079421,0 -65.267479,26.922736 -64,64 1.267479,37.07726 26.703171,65.05317 64,64 37.29683,-1.05317 64,-64 64,-64\" />\r\n    <circle class=\"strecken\" cx=\"100\" cy=\"100\" r=\"64\" />\r\n  </svg>\r\n</div>\r\n","import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-spinner\",\r\n  templateUrl: \"./spinner.component.html\",\r\n  styleUrls: [\"./spinner.component.css\"],\r\n})\r\nexport class SpinnerComponent {\r\n  @Input() wedge = false;\r\n  @Input() rainbow = false;\r\n  @Input() drip = false;\r\n  @Input() isMobile = false;\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  OnDestroy,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute, ParamMap, Router } from \"@angular/router\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { Chapters, MangaChapters } from \"../../Models/Manga.models\";\r\nimport { MangaListService } from \"../../Services/manga-list-service\";\r\nimport { MangaService } from \"../../Services/manga.service\";\r\nimport { ReaderService } from \"../../Services/reader-service\";\r\nimport { RSocketService } from \"../../Services/rsocket-service\";\r\n// tslint:disable: triple-equals\r\n// tslint:disable: align\r\n// tslint:disable: one-line\r\n// tslint:disable: no-trailing-whitespace\r\n// tslint:disable: quotemark\r\n// tslint:disable: max-line-length\r\n// tslint:disable: radix\r\n\r\n@Component({\r\n  selector: \"app-reader\",\r\n  templateUrl: \"./reader.component.html\",\r\n  styleUrls: [\"./reader.component.css\"],\r\n})\r\nexport class ReaderComponent implements OnInit, OnDestroy {\r\n  list = [];\r\n\r\n  readerService: ReaderService;\r\n\r\n  constructor(\r\n    protected service: MangaService,\r\n    protected listService: MangaListService,\r\n    protected route: ActivatedRoute,\r\n    private element: ElementRef,\r\n    protected router: Router,\r\n    protected title: Title,\r\n    rsocketService: RSocketService,\r\n    deviceService: DeviceDetectorService\r\n  ) {\r\n    this.isMobile = deviceService.isMobile();\r\n    this.darkMode();\r\n\r\n    // If on phone, the pages will be displayed vertically\r\n    if (this.isMobile) {\r\n      this.verticalView = !this.verticalView;\r\n    }\r\n    this.readerService = new ReaderService(\r\n      this,\r\n      service,\r\n      rsocketService,\r\n      listService,\r\n      route,\r\n      router,\r\n      title\r\n    );\r\n  }\r\n\r\n  imageSize = 60;\r\n  isMobile: boolean;\r\n  verticalView = false;\r\n  dark = false;\r\n  chapters: MangaChapters;\r\n  Index: Chapters;\r\n  chapterIndex: string;\r\n  interval;\r\n  display = [];\r\n  currentPage = 0;\r\n  firstPage;\r\n  firstChapter = false;\r\n  finalPage = false;\r\n  finalChapter = false;\r\n  loadedImage = false;\r\n  currentPageLoaded = false;\r\n  expandImage = false;\r\n\r\n  changeView() {\r\n    this.verticalView = !this.verticalView;\r\n  }\r\n\r\n  resizeImages(size: number) {\r\n    this.imageSize = size;\r\n    this.expandImage = !this.expandImage;\r\n  }\r\n\r\n  darkMode() {\r\n    this.dark = !this.dark;\r\n\r\n    if (this.dark) {\r\n      this.element.nativeElement.ownerDocument.body.style.backgroundColor =\r\n        \"black\";\r\n    } else {\r\n      this.element.nativeElement.ownerDocument.body.style.backgroundColor =\r\n        \"white\";\r\n    }\r\n  }\r\n\r\n  disableSpinner() {\r\n    this.currentPageLoaded = true;\r\n    return null;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.display = [];\r\n      clearInterval(this.interval);\r\n\r\n      // tslint:disable: radix\r\n      if (\r\n        isNaN(parseInt(params.get(\"manga\"))) ||\r\n        isNaN(parseInt(params.get(\"index\")))\r\n      ) {\r\n        this.router.navigate([\"**\"]);\r\n      }\r\n\r\n      // if manga exists in session\r\n      if (\r\n        this.service.Manga &&\r\n        parseFloat(params.get(\"manga\")) === this.service.Manga.realID\r\n      ) {\r\n        this.list[0] = this.service.Manga;\r\n        this.setup(params);\r\n        this.title.setTitle(this.list[0].t + \": Chapter \" + this.chapterIndex);\r\n      }\r\n\r\n      // if the mangalist is loaded\r\n      else if (this.listService.mangaList) {\r\n        this.list = this.listService.mangaList.filter(\r\n          (item) => item.realID == parseInt(params.get(\"manga\"))\r\n        );\r\n\r\n        this.setup(params);\r\n        this.title.setTitle(this.list[0].t + \": Chapter \" + this.chapterIndex);\r\n      }\r\n\r\n      // check if this is part of the latest manga\r\n      else if (!this.listService.mangaList && this.checkLatest(params)) {\r\n        this.list = this.listService.recent\r\n          .slice()\r\n          .filter((item) => item.realID == parseInt(params.get(\"manga\")));\r\n\r\n        this.setup(params);\r\n        this.title.setTitle(this.list[0].t + \": Chapter \" + this.chapterIndex);\r\n      } else {\r\n        // this will run if it's part of the latest manga\r\n        this.listService.recentSubject.subscribe((latest) => {\r\n          if (!this.list) {\r\n            this.list = latest.filter(\r\n              (item) => item.realID == parseInt(params.get(\"manga\"))\r\n            );\r\n\r\n            if (this.list.length != 0) {\r\n              this.setup(params);\r\n              this.title.setTitle(\r\n                this.list[0].t + \": Chapter \" + this.chapterIndex\r\n              );\r\n            }\r\n          }\r\n        });\r\n\r\n        // this will run in all other cases\r\n        this.listService.mangaSubject.subscribe((manga) => {\r\n          if (this.list.length == 0) {\r\n            this.list = manga.filter(\r\n              (item) => item.realID == parseInt(params.get(\"manga\"))\r\n            );\r\n            this.setup(params);\r\n            this.title.setTitle(\r\n              this.list[0].t + \": Chapter \" + this.chapterIndex\r\n            );\r\n          }\r\n        });\r\n\r\n        // this will load the manga's info straight from the database if the above two functions fail\r\n        this.loadFromDatabase(params);\r\n      }\r\n    });\r\n  }\r\n\r\n  // setup variables based on the route\r\n  setup(params) {\r\n    //saves manga 2 local storage for later reading\r\n    this.service.saveManga2Local();\r\n    this.chapterIndex = params.get(\"index\");\r\n\r\n    // if chapterlist is in the service\r\n    if (\r\n      this.service.chapters &&\r\n      this.list[0].t === this.service.chapters.mangaName\r\n    ) {\r\n      this.chapters = this.service.chapters;\r\n      this.readerService.setChapter(params);\r\n    } else {\r\n      this.service.setManga(this.list[0]);\r\n      this.readerService.getChapter(params);\r\n    }\r\n\r\n    // sets page\r\n    if (this.service.pageIndex != undefined) {\r\n      this.currentPage = this.service.pageIndex;\r\n    } else if (parseInt(params.get(\"page\")) > 0) {\r\n      this.currentPage = parseInt(params.get(\"page\")) - 1;\r\n    } else {\r\n      this.currentPage = 0;\r\n    }\r\n  }\r\n\r\n  // checks whether manga is part of the latest manga\r\n  checkLatest(params) {\r\n    try {\r\n      return (\r\n        params.get(\"manga\") ===\r\n        this.listService.recent\r\n          .find((manga) => manga.realID.toString() === params.get(\"manga\"))\r\n          .realID.toString()\r\n      );\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // this will load the manga from the database if the site doesn't currently have it\r\n  loadFromDatabase(params: ParamMap) {\r\n    setTimeout(() => {\r\n      // this checks if the service has a manga stored\r\n      if (this.list.length === 0) {\r\n        this.readerService.getChapter(params);\r\n      }\r\n    }, 3000);\r\n  }\r\n\r\n  @HostListener(\"window:keydown\", [\"$event\"])\r\n  keyEvent(event: KeyboardEvent) {\r\n    if (this.service.search) {\r\n      //won't do anything because we're in the searchbar\r\n    } else if (\r\n      (event.keyCode === 39 || event.keyCode === 32 || event.keyCode === 68) &&\r\n      !this.verticalView\r\n    ) {\r\n      this.readerService.nextPage(this.currentPage);\r\n      event.preventDefault();\r\n    } else if (\r\n      (event.keyCode === 37 || event.keyCode === 65) &&\r\n      !this.verticalView\r\n    ) {\r\n      this.readerService.lastPage(this.currentPage);\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //reset dark theme\r\n    this.element.nativeElement.ownerDocument.body.style.backgroundColor =\r\n      \"white\";\r\n    //clear pageindex from session\r\n    this.service.setPageIndex(undefined);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n\r\n  <!-- if pages haven't loaded display the loading spinners -->\r\n  <div *ngIf=\"display.length === 0\">\r\n    <app-spinner [drip]=true></app-spinner>\r\n  </div>\r\n\r\n  <div *ngIf=\"!verticalView && display.length !== 0 && !currentPageLoaded \">\r\n    <app-spinner [rainbow]=true></app-spinner>\r\n  </div>\r\n\r\n  <!-- vertical view top button row -->\r\n  <div *ngIf=\"display.length !== 0\">\r\n\r\n    <div *ngIf=\"verticalView\" class=\" text-center align-middle row justify-content-center topBtn flex-wrap\">\r\n\r\n      <div class=\"dropdown btn-group\" role=\"group\">\r\n\r\n        <button *ngIf=\"!firstChapter\" (click)=\"readerService.lastChapter()\" type=\"button\" class=\"btn btn-dark\"><i\r\n            class=\"fas fa-arrow-left\"></i></button>\r\n\r\n        <div class=\" dropdown btn-group\">\r\n          <button type=\"button\" class=\"btn btn-warning btn-sm dropdown-toggle\" id=\"dropdownButton\"\r\n            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-cog\"></i></button>\r\n\r\n          <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n\r\n            <button *ngIf=\"!isMobile && !expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(100)\"><i\r\n                *ngIf=\"!expandImage\" class=\"fas fa-expand-arrows-alt\"></i> See\r\n              Full Size Images</button>\r\n\r\n            <button *ngIf=\"!isMobile && expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(60)\"><i\r\n                class=\"fas fa-compress-arrows-alt\"></i> See\r\n              60% Size Images (Default)</button>\r\n\r\n            <button class=\"dropdown-item\" (click)=\"changeView()\"><i class=\"fas fa-arrow-alt-circle-right\"></i> Change\r\n              View</button>\r\n\r\n            <button *ngIf=\"dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n              <i class=\"fas fa-sun\"></i> Light Mode\r\n            </button>\r\n\r\n            <button *ngIf=\"!dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n              <i class=\"fas fa-moon\"></i> Dark Mode\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button class=\"btn btn-secondary dropdown-toggle \" type=\"button\" id=\"dropdownButton\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Chapter {{this.chapterIndex}}\r\n        </button>\r\n        <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n          <button *ngFor=\"let chapter of list[0].info.chapters.slice().reverse(); let i = index\" class=\"dropdown-item\"\r\n            (click)=\"readerService.jumpChapter(chapter[0])\">\r\n            Chapter {{ chapter[0] }}\r\n          </button>\r\n        </div>\r\n\r\n        <button *ngIf=\"!finalChapter\" (click)=\"readerService.nextChapter()\" type=\"button\" class=\"btn btn-primary\"><i\r\n            class=\"fas fa-arrow-right\"></i></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- /vertical view top buttons -->\r\n\r\n  <!-- Image NGFOR -->\r\n  <div [hidden]=\"!pages[4] && !verticalView\" *ngFor=\"let pages of display; let i = index\">\r\n\r\n    <!-- If Display hasn't caught up -->\r\n    <div [hidden]=\"true\" *ngIf=\"(pages[4] && !verticalView)\">\r\n      <div [hidden]=\"true\" *ngIf=\"disableSpinner() || false\"></div>\r\n    </div>\r\n\r\n    <!-- top buttons -->\r\n    <div *ngIf=\"!verticalView\" class=\"container row justify-content-center topBtn flex-wrap\">\r\n\r\n      <div class=\"dropdown btn-group\" role=\"group\">\r\n\r\n        <button *ngIf=\"!firstPage\" (click)=\"readerService.lastPage(i)\" type=\"button\" class=\"btn btn-dark\"><i\r\n            class=\"fas fa-arrow-left\"></i></button>\r\n\r\n        <button class=\"btn btn-secondary dropdown-toggle \" type=\"button\" id=\"dropdownButton\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Chapter {{this.chapterIndex}}\r\n        </button>\r\n\r\n        <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n          <button *ngFor=\"let chapter of list[0].info.chapters.slice().reverse(); let i = index\" class=\"dropdown-item\"\r\n            (click)=\"readerService.jumpChapter(chapter[0])\">\r\n            Chapter {{ chapter[0] }}\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\" dropdown btn-group\">\r\n          <button type=\"button\" class=\"btn btn-warning btn-sm dropdown-toggle\" id=\"dropdownButton\"\r\n            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-cog\"></i></button>\r\n\r\n          <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n\r\n            <button *ngIf=\"!isMobile && !expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(100)\"><i\r\n                *ngIf=\"!expandImage\" class=\"fas fa-expand-arrows-alt\"></i> See\r\n              Full Size Images</button>\r\n\r\n            <button *ngIf=\"!isMobile && expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(60)\"><i\r\n                class=\"fas fa-compress-arrows-alt\"></i> See\r\n              60% Size Images (Default)</button>\r\n            <button class=\"dropdown-item\" (click)=\"changeView()\"><i class=\"fas fa-arrow-alt-circle-down\"></i> Change\r\n              View</button>\r\n\r\n            <button *ngIf=\"dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n              <i class=\"fas fa-sun\"></i> Light Mode\r\n            </button>\r\n\r\n            <button *ngIf=\"!dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n              <i class=\"fas fa-moon\"></i> Dark Mode\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"dropdown btn-group\" role=\"group\">\r\n\r\n          <button class=\"btn btn-info dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Page {{currentPage + 1}}\r\n          </button>\r\n\r\n          <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            <button *ngFor=\"let pages of display; let i = index\" (click)=\"readerService.jump(i)\" class=\"dropdown-item\"\r\n              href=\"#\">{{pages[0] + 1}}</button>\r\n          </div>\r\n\r\n\r\n          <button *ngIf=\"!finalPage\" (click)=\"readerService.nextPage(i)\" type=\"button\" class=\"btn btn-primary\"><i\r\n              class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <!-- /top buttons -->\r\n\r\n    <!-- if images aren't loaded display loading spinner -->\r\n    <div *ngIf=\"!this.display[i][5]\">\r\n      <app-spinner [rainbow]=true></app-spinner>\r\n    </div>\r\n    <!-- Dead Image -->\r\n\r\n\r\n    <!-- Image container -->\r\n    <div\r\n      *ngVar=\"{isCurrentPage:(this.display[i][4] || verticalView), isPreloadable: currentPage + 2 > i && currentPage - 1 < i } as conditions\"\r\n      [hidden]=\"!this.display[i][5]\" class=\"container-fluid justify-content: center\">\r\n      <!-- For PC Device -->\r\n      <img *ngIf=\"!isMobile && conditions.isCurrentPage || (!isMobile && conditions.isPreloadable)\"\r\n        (load)=\"this.display[i][5] = true\" [style.width.%]=imageSize class=\"img-fluid\" src=\"{{pages[1]}}\"\r\n        (click)=\"readerService.nextPage(i)\">\r\n      <!-- For Mobile Device -->\r\n      <img *ngIf=\"isMobile && conditions.isCurrentPage || (isMobile && conditions.isPreloadable)\"\r\n        (load)=\"this.display[i][5] = true\" class=\"img-fluid mobile\" src=\"{{pages[1]}}\"\r\n        (click)=\"readerService.nextPage(i)\">\r\n    </div>\r\n    <!-- /image container -->\r\n\r\n    <!-- bottom buttons -->\r\n    <div *ngIf=\"!verticalView\" class=\"container row justify-content-center Bbtn flex-wrap\">\r\n\r\n      <div class=\"dropdown btn-group\" role=\"group\">\r\n\r\n        <button *ngIf=\"!firstPage\" (click)=\"readerService.lastPage(i)\" type=\"button\" class=\"btn btn-dark\"><i\r\n            class=\"fas fa-arrow-left\"></i></button>\r\n\r\n        <button class=\"btn btn-secondary dropdown-toggle \" type=\"button\" id=\"dropdownButton\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Chapter {{this.chapterIndex}}\r\n        </button>\r\n\r\n        <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n          <button *ngFor=\"let chapter of list[0].info.chapters.slice().reverse(); let i = index\" class=\"dropdown-item\"\r\n            (click)=\"readerService.jumpChapter(chapter[0])\">\r\n            Chapter {{ chapter[0] }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\" dropdown btn-group \">\r\n        <button type=\"button\" class=\"btn btn-warning btn-sm dropdown-toggle\" id=\"dropdownButton\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-cog\"></i></button>\r\n\r\n        <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n\r\n          <button *ngIf=\"!isMobile && !expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(100)\"><i\r\n              class=\"fas fa-expand-arrows-alt\"></i> See\r\n            Full Size Images</button>\r\n\r\n          <button *ngIf=\"!isMobile && expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(60)\"><i\r\n              class=\"fas fa-compress-arrows-alt\"></i> See\r\n            60% Size Images (Default)</button>\r\n\r\n          <button class=\"dropdown-item\" (click)=\"changeView()\"><i class=\"fas fa-arrow-alt-circle-down\"></i> Change\r\n            View</button>\r\n\r\n          <button *ngIf=\"dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n            <i class=\"fas fa-sun\"></i> Light Mode\r\n          </button>\r\n\r\n          <button *ngIf=\"!dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n            <i class=\"fas fa-moon\"></i> Dark Mode\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"dropdown btn-group\" role=\"group\">\r\n\r\n        <button class=\"btn btn-info dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Page {{currentPage + 1}}\r\n        </button>\r\n\r\n        <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          <button *ngFor=\"let pages of display; let i = index\" (click)=\"readerService.jump(i)\" class=\"dropdown-item\"\r\n            href=\"#\">{{pages[0] + 1}}</button>\r\n        </div>\r\n\r\n\r\n        <button *ngIf=\"!finalPage\" (click)=\"readerService.nextPage(i)\" type=\"button\" class=\"btn btn-primary\"><i\r\n            class=\"fas fa-arrow-right\"></i></button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n  <!-- /bottom buttons -->\r\n\r\n</div>\r\n\r\n<!-- /Image NG FOR -->\r\n\r\n<!-- vertical view bottom buttons -->\r\n<div *ngIf=\"display.length !== 0 \">\r\n  <div class=\"container justify-content-center Bbtn flex-wrap\">\r\n\r\n    <div *ngIf=\"verticalView\" class=\" row justify-content-center Bbtn flex-wrap\">\r\n\r\n      <div class=\"dropdown btn-group\" role=\"group\">\r\n\r\n        <button *ngIf=\"!firstChapter\" (click)=\"readerService.lastChapter()\" type=\"button\" class=\"btn btn-dark\"><i\r\n            class=\"fas fa-arrow-left\"></i></button>\r\n\r\n        <div class=\" dropdown btn-group\">\r\n          <button type=\"button\" class=\"btn btn-warning btn-sm dropdown-toggle\" id=\"dropdownButton\"\r\n            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-cog\"></i></button>\r\n\r\n          <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n\r\n            <button *ngIf=\"!isMobile && !expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(100)\"><i\r\n                *ngIf=\"!expandImage\" class=\"fas fa-expand-arrows-alt\"></i> See\r\n              Full Size Images</button>\r\n\r\n            <button *ngIf=\"!isMobile && expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(60)\"><i\r\n                class=\"fas fa-compress-arrows-alt\"></i> See\r\n              60% Size Images (Default)</button>\r\n\r\n            <button class=\"dropdown-item\" (click)=\"changeView()\"><i class=\"fas fa-arrow-alt-circle-right\"></i> Change\r\n              View</button>\r\n\r\n            <button *ngIf=\"dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n              <i class=\"fas fa-sun\"></i> Light Mode\r\n            </button>\r\n\r\n            <button *ngIf=\"!dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n              <i class=\"fas fa-moon\"></i> Dark Mode\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button class=\"btn btn-secondary dropdown-toggle \" type=\"button\" id=\"dropdownButton\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Chapter {{this.chapterIndex}}\r\n        </button>\r\n        <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n          <button *ngFor=\"let chapter of list[0].info.chapters.slice().reverse(); let i = index\" class=\"dropdown-item\"\r\n            (click)=\"readerService.jumpChapter(chapter[0])\">\r\n            Chapter {{ chapter[0] }}\r\n          </button>\r\n        </div>\r\n\r\n        <button *ngIf=\"!finalChapter\" (click)=\"readerService.nextChapter()\" type=\"button\" class=\"btn btn-primary\"><i\r\n            class=\"fas fa-arrow-right\"></i></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- vertical view bottom buttons -->\r\n</div>\r\n","import { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { HomeComponent } from \"./Components/home/home.component\";\r\nimport { PopularMangaComponent } from \"./Components/home/popular-manga/popular-manga.component\";\r\nimport { MangaListComponent } from \"./Components/manga-list/manga-list.component\";\r\nimport { MangaPageComponent } from \"./Components/manga-page/manga-page.component\";\r\nimport { ReaderComponent } from \"./Components/reader/reader.component\";\r\nimport { FooterComponent } from \"./Components/SubComponents/footer/footer.component\";\r\nimport { LoginComponent } from \"./Components/SubComponents/navbar/login/login.component\";\r\nimport { NavbarComponent } from \"./Components/SubComponents/navbar/navbar.component\";\r\nimport { RegisterComponent } from \"./Components/SubComponents/navbar/register/register.component\";\r\nimport { SpinnerComponent } from \"./Components/SubComponents/spinner/spinner.component\";\r\nimport { ImagePreloadDirective } from \"./Directives/ImageDirective\";\r\nimport { VarDirective } from \"./Directives/VarDirective\";\r\nimport { AuthInterceptor } from \"./Interceptors/Auth.interceptor\";\r\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\r\nimport { TruncatePipe } from \"./truncate.pipe\";\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    MangaListComponent,\r\n    PageNotFoundComponent,\r\n    FooterComponent,\r\n    PopularMangaComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    MangaPageComponent,\r\n    ReaderComponent,\r\n    TruncatePipe,\r\n    SpinnerComponent,\r\n    ImagePreloadDirective,\r\n    VarDirective,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatDialogModule,\r\n    NgxPaginationModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [RegisterComponent, LoginComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<footer class=\"section footer-classic context-dark bg-image bg-dark\" style=\"background: #2d3246;\">\r\n    <div class=\"container\">\r\n      <div class=\"row row-30\">\r\n\r\n        <div class=\"col\">\r\n          <div class=\"pr-xl-4\">\r\n            <!-- Rights-->\r\n            <p class=\"rights text-center align-middle\"><span>Copyright </span><span>©  </span><span class=\"copyright-year\">2019</span><span> </span><span>MangaSpring</span><span>. </span><span>All Rights Reserved.</span></p>\r\n             <div class=\"text-center align-middle\">Logo made by <a href=\"https://www.designevo.com/logo-maker/\" title=\"Free Online Logo Maker\">DesignEvo free logo creator</a></div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n","import { Directive, Input, TemplateRef, ViewContainerRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"[ngVar]\",\r\n})\r\nexport class VarDirective {\r\n  @Input()\r\n  set ngVar(context: any) {\r\n    this.context.$implicit = this.context.ngVar = context;\r\n    this.updateView();\r\n  }\r\n\r\n  context: any = {};\r\n\r\n  constructor(\r\n    private vcRef: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>\r\n  ) {}\r\n\r\n  updateView() {\r\n    this.vcRef.clear();\r\n    this.vcRef.createEmbeddedView(this.templateRef, this.context);\r\n  }\r\n}\r\n","<!--Array of buttons that filter the manga list-->\r\n<div *ngIf=\"service.IsLoaded\" class=\"container con\">\r\n  <div class=\"btn-toolbar justify-content-center align-items-center\">\r\n    <div *ngFor=\"let letter of alphabet\" class=\"btn-group btn-group-sm button\">\r\n      <button (click)=\"filter(letter)\" class=\"btn btn-outline-primary\">{{ letter }}</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--Filter dropdown and pagination-->\r\n<div *ngIf=\"service.IsLoaded\" class=\"container\">\r\n  <div class=\"row justify-content-center filter\">\r\n    <button (click)=\"expand(); setStatus(0)\" class=\"btn btn-secondary justify-content-center\" type=\"button\"><i\r\n        class=\"fas fa-filter\"></i> Filter</button>\r\n  </div>\r\n\r\n  <div *ngIf=\"show\" class=\"wrapper\">\r\n    <h6>Genre:</h6>\r\n    <div *ngFor=\"let genre of genres\" class=\"form-check-inline\">\r\n      <div>\r\n        <label class=\"checkbox-inline items\"><input (click)=\"addToList(genre)\" type=\"checkbox\"> {{ genre }}</label>\r\n      </div>\r\n    </div>\r\n\r\n    <h6>Status:</h6>\r\n    <div class=\"form-check\">\r\n      <label class=\"form-check-label\"><input class=\"form-check-input\" (click)=\"setStatus(1)\" name=\"radio\"\r\n          type=\"radio\">Ongoing</label>\r\n    </div>\r\n\r\n    <div class=\"form-check\">\r\n      <label class=\"form-check-label\"><input class=\"form-check-input\" (click)=\"setStatus(2)\" name=\"radio\"\r\n          type=\"radio\">Completed</label>\r\n    </div>\r\n\r\n    <div class=\"form-check\">\r\n      <label class=\"form-check-label\"><input class=\"form-check-input\" (click)=\"setStatus(0)\" name=\"radio\"\r\n          type=\"radio\">None</label>\r\n    </div>\r\n\r\n    <div class=\"row justify-content-center\">\r\n      <button (click)=\"sendInfo(content)\" class=\"btn btn-success\"><i class=\"far fa-paper-plane\"></i> Submit</button>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div *ngIf=\"service.IsLoaded\" class=\"row justify-content-center\">\r\n    <pagination-controls (pageChange)=\"p =$event; resetSpinner()\"></pagination-controls>\r\n  </div>\r\n</div>\r\n\r\n<!--Renders the manga in a list form-->\r\n<div *ngIf=\"service.IsLoaded\" class=\"container con2\">\r\n  <div class=\"row\">\r\n    <div *ngFor=\"let manga of list | paginate: {itemsPerPage:6, currentPage: p}\" class=\"col-md-2 col-6\">\r\n      <div class=\"card-deck\">\r\n        <div class=\"card\">\r\n\r\n          <div *ngIf=\"!manga.info.imageLoaded\">\r\n            <app-spinner></app-spinner>\r\n          </div>\r\n\r\n          <img *ngIf=\"manga.im\" [hidden]=\"!manga.info.imageLoaded\" (load)='manga.info.imageLoaded = true'\r\n            class=\"img card-img-top\" src=\"{{getImage(manga.im)}}\" alt=\"Card image cap\">\r\n\r\n          <div>\r\n            <a class=\"card-body align-middle text-center\" routerLink=\"/manga-page/{{manga.realID}}\"\r\n              routerLinkActive=\"router-link-active\">\r\n              <h6 class=\"align-middle text-center card-title\">{{ manga.t | truncate: [26, '...']}}</h6>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--Pagination controls-->\r\n<div *ngIf=\"service.IsLoaded\" class=\"container\">\r\n  <div class=\"row justify-content-center\">\r\n    <pagination-controls (pageChange)=\"p =$event;\"></pagination-controls>\r\n  </div>\r\n\r\n</div>\r\n\r\n<!-- If api isn't finished getting manga show cool spinner -->\r\n<div *ngIf=\"!service.IsLoaded\" class=\"container justify-content-center\">\r\n\r\n  <app-spinner [wedge]=true [isMobile]=isMobile></app-spinner>\r\n  <h5>Getting Manga...<br>Read something from the <a routerLink=\"/home\"\r\n      routerLinkActive=\"router-link-active\">Homepage</a> while you wait.</h5>\r\n</div>\r\n\r\n<!-- Modal -->\r\n<ng-template #content let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Could Not Find Manga</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p>No such manga with the selected filters exists&hellip;</p>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { Manga } from \"../../Models/Manga.models\";\r\nimport { MangaListService } from \"../../Services/manga-list-service\";\r\n\r\n@Component({\r\n  selector: \"app-manga-list\",\r\n  templateUrl: \"./manga-list.component.html\",\r\n  styleUrls: [\"./manga-list.component.css\"],\r\n})\r\nexport class MangaListComponent implements OnInit {\r\n  alphabet = [\r\n    \"All\",\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\",\r\n    \"#\",\r\n  ];\r\n  genres = [\r\n    \"Action\",\r\n    \"Adult\",\r\n    \"Adventure\",\r\n    \"Comic\",\r\n    \"Comedy\",\r\n    \"Drama\",\r\n    \"Demons\",\r\n    \"Doujinshi\",\r\n    \"Ecchi\",\r\n    \"Fantasy\",\r\n    \"Harem\",\r\n    \"Historical\",\r\n    \"Horror\",\r\n    \"Josei\",\r\n    \"Martial Arts\",\r\n    \"Magic\",\r\n    \"Mature\",\r\n    \"Mecha\",\r\n    \"Mystery\",\r\n    \"Psychological\",\r\n    \"Romance\",\r\n    \"Seinen\",\r\n    \"School Life\",\r\n    \"Shoujo\",\r\n    \"Sci-fi\",\r\n    \"Shounen\",\r\n    \"Supernatural\",\r\n    \"Sports\",\r\n    \"Tragedy\",\r\n  ];\r\n  genreArray = [];\r\n  p: number;\r\n  show = false;\r\n  mangaList: Manga[];\r\n  list: Manga[];\r\n  status = 0;\r\n  toggle = false;\r\n  isMobile: boolean;\r\n\r\n  constructor(\r\n    public service: MangaListService,\r\n    title: Title,\r\n    private route: ActivatedRoute,\r\n    private modalService: NgbModal,\r\n    deviceService: DeviceDetectorService\r\n  ) {\r\n    this.isMobile = deviceService.isMobile();\r\n    title.setTitle(\"MangaList\");\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  // expands the filter options\r\n  expand() {\r\n    this.show = !this.show;\r\n  }\r\n\r\n  // filters the manga depending on which button letter the user clicks\r\n  filter(letter: string) {\r\n    if (letter === \"All\") {\r\n      this.mangaList = this.service.mangaList;\r\n      this.list = this.mangaList;\r\n      this.p = 0;\r\n    } else if (letter === \"#\") {\r\n      const filtered = this.mangaList.filter(\r\n        (manga) =>\r\n          manga.t.startsWith(\"0\") ||\r\n          manga.t.startsWith(\"1\") ||\r\n          manga.t.startsWith(\"2\") ||\r\n          manga.t.startsWith(\"3\") ||\r\n          manga.t.startsWith(\"4\") ||\r\n          manga.t.startsWith(\"5\") ||\r\n          manga.t.startsWith(\"6\") ||\r\n          manga.t.startsWith(\"7\") ||\r\n          manga.t.startsWith(\"8\") ||\r\n          manga.t.startsWith(\"9\")\r\n      );\r\n      this.list = filtered.sort((a, b) => a.a.localeCompare(b.a));\r\n      this.p = 0;\r\n    } else {\r\n      const filtered = this.mangaList.filter((manga) =>\r\n        manga.t.startsWith(letter)\r\n      );\r\n      this.list = filtered.sort((a, b) => a.a.localeCompare(b.a));\r\n      this.p = 0;\r\n    }\r\n  }\r\n\r\n  // Adds genres from the filter selection\r\n  addToList(genre) {\r\n    if (!this.genreArray.find((item) => item === genre)) {\r\n      this.genreArray.push(genre);\r\n    } else {\r\n      for (let i = 0; i < this.genreArray.length; i++) {\r\n        if (this.genreArray[i] === genre) {\r\n          this.genreArray.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setStatus(n: number) {\r\n    this.status = n;\r\n  }\r\n\r\n  // Sends genreArray to filter multiple genres selected\r\n  sendInfo(content) {\r\n    this.list = this.service.mangaList;\r\n\r\n    if (this.status === 1) {\r\n      this.list = this.list.filter(\r\n        (manga) =>\r\n          this.genreArray.every((value) => {\r\n            return manga.c.indexOf(value) >= 0;\r\n          }) && manga.s === 1\r\n      );\r\n    } else if (this.status === 2) {\r\n      this.list = this.list.filter(\r\n        (manga) =>\r\n          this.genreArray.every((value) => {\r\n            return manga.c.indexOf(value) >= 0;\r\n          }) && manga.s === 2\r\n      );\r\n    } else if (this.status === 0) {\r\n      this.list = this.list.filter((manga) =>\r\n        this.genreArray.every((value) => {\r\n          return manga.c.indexOf(value) >= 0;\r\n        })\r\n      );\r\n    }\r\n\r\n    if (this.list.length === 0) {\r\n      this.list = this.service.mangaList;\r\n      //open modal\r\n      this.modalService.open(content, { centered: true });\r\n    }\r\n\r\n    this.p = 0;\r\n  }\r\n\r\n  // filters list by (one) genre, author, and artist depending on the condition(from home page)\r\n  filterByGenre(genre) {\r\n    // checks for genre\r\n    this.list = this.list.filter((item) => item.c.find((gen) => gen === genre));\r\n\r\n    // checks for author\r\n    if (this.list.length === 0) {\r\n      this.list = this.mangaList.filter((item) => item.info.author === genre);\r\n    }\r\n    // checks for artist\r\n    if (this.list.length === 0) {\r\n      this.list = this.mangaList.filter((item) => item.info.artist === genre);\r\n    }\r\n    if (this.list.length === 0) {\r\n      this.list = this.service.mangaList;\r\n      window.alert(\"No such mangas with the selected genre exists\");\r\n    }\r\n  }\r\n\r\n  // renders the images\r\n  getImage(url: string) {\r\n    if (url.startsWith(\"http\")) {\r\n      return url;\r\n    } else {\r\n      return \"/image/\" + url;\r\n    }\r\n  }\r\n\r\n  resetSpinner() {\r\n    this.list.forEach((manga) => (manga.info.imageLoaded = false));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe((params) => {\r\n      if (this.service.mangaList) {\r\n        this.mangaList = this.service.mangaList\r\n          .sort((a, b) => b.h - a.h)\r\n          .reverse();\r\n        this.list = this.mangaList;\r\n        this.resetSpinner();\r\n\r\n        if (params.get(\"genre\") != null) {\r\n          this.filterByGenre(params.get(\"genre\"));\r\n        }\r\n      }\r\n\r\n      this.service.mangaSubject.subscribe((list) => {\r\n        this.mangaList = list.sort((a, b) => b.h - a.h).reverse();\r\n        this.list = this.mangaList;\r\n        this.resetSpinner();\r\n\r\n        if (params.get(\"genre\") != null) {\r\n          this.filterByGenre(params.get(\"genre\"));\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Component, HostListener, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { Manga } from \"src/app/Models/Manga.models\";\r\nimport { MangaListService } from \"src/app/Services/manga-list-service\";\r\nimport { MangaService } from \"src/app/Services/manga.service\";\r\nimport { RSocketService } from \"src/app/Services/rsocket-service\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\n\r\n@Component({\r\n  selector: \"app-navbar\",\r\n  templateUrl: \"./navbar.component.html\",\r\n  styleUrls: [\"./navbar.component.css\"],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  list: Manga[];\r\n  name;\r\n  showlist;\r\n  tempList;\r\n  isMobile: boolean;\r\n  scrHeight: number;\r\n  scrWidth: number;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    public service: MangaListService,\r\n    public rsocket: RSocketService,\r\n    private mangaService: MangaService,\r\n    deviceService: DeviceDetectorService\r\n  ) {\r\n    this.isMobile = deviceService.isMobile();\r\n    this.getScreenSize();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.service.mangaList) {\r\n      this.list = this.service.mangaList.slice();\r\n    } else {\r\n      this.service.mangaSubject.subscribe((manga) => {\r\n        this.list = manga.filter((item) => item.realID != -2);\r\n      });\r\n    }\r\n  }\r\n\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  getScreenSize(event?) {\r\n    this.scrHeight = window.innerHeight;\r\n    this.scrWidth = window.innerWidth;\r\n  }\r\n\r\n  // when mouse hovers enters navbar it disables the keyboard scroll in reader\r\n  @HostListener(\"mouseenter\") inSearch() {\r\n    this.mangaService.search = true;\r\n  }\r\n\r\n  // when mouse hovers outside of navbar it disables the list\r\n  @HostListener(\"mouseleave\") closeList() {\r\n    this.showlist = false;\r\n    this.mangaService.search = false;\r\n  }\r\n\r\n  @HostListener(\"window:beforeunload\", [\"$event\"])\r\n  saveToStorage(event: Event) {\r\n    this.mangaService.saveToStorage();\r\n  }\r\n\r\n  // sends the chapter to the service so that manga-page can display the data\r\n  setChapter(manga) {\r\n    this.mangaService.setManga(manga);\r\n    this.showlist = false;\r\n    this.name = \"\";\r\n  }\r\n\r\n  // A temp variable takes the list to display the data being filtered\r\n  search(n: string) {\r\n    if (n.length > 1) {\r\n      n = n.toUpperCase();\r\n      this.showlist = true;\r\n      this.tempList = this.list.sort((a, b) => a.a.localeCompare(b.a));\r\n      this.tempList = this.tempList.filter((manga) =>\r\n        manga.t.toUpperCase().startsWith(n)\r\n      );\r\n    } else {\r\n      this.showlist = false;\r\n    }\r\n  }\r\n\r\n  // handles the images\r\n  getImage(url: string) {\r\n    if (url.startsWith(\"http\")) {\r\n      return url;\r\n    } else {\r\n      return \"/image/\" + url;\r\n    }\r\n  }\r\n\r\n  // dialog buttons operations\r\n  openDialog(): void {\r\n    this.dialog.open(RegisterComponent);\r\n  }\r\n\r\n  openLogin(): void {\r\n    this.dialog.open(LoginComponent);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark \">\r\n  <a class=\"navbar-brand\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\"><img class=\"logo\" src=\"../../assets/imageedit_11_3620823692.png\"> MangaSpring</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" [ngClass]=\"{row: scrWidth > 991}\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/home']\" routerLinkActive=\"router-link-active\" >Home</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/manga-list']\" routerLinkActive=\"router-link-active\" >List</a>\r\n      </li>\r\n\r\n    <form *ngIf=\"service.IsLoaded\" class=\"form-inline my-2 my-lg-0 \" [ngClass]=\"{'col-sm' : scrWidth > 991}\" >\r\n      <input [(ngModel)]=\"name\" [ngModelOptions]=\"{standalone: true}\" (keyup)=\"search(name)\" class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\">\r\n      <div class=\"search-container\">\r\n      <ul *ngFor=\"let item of tempList; let i = index\" class=\"list-group\">\r\n        <li *ngIf=\"item.im === null && showlist && i < 10\" class=\"list-group-item\" (click)=\"setChapter(item)\" routerLink=\"/manga-page/{{item.realID}}\" routerLinkActive=\"router-link-active\"><img class=\"img card-img-top\" src=\"../../../assets/noimage.jpeg\" alt=\"Card image cap\">{{ item.t | truncate: [17, '...']}}</li>\r\n        <li *ngIf=\"item.im != null && showlist  && i < 10\" class=\"list-group-item\" (click)=\"setChapter(item)\" routerLink=\"/manga-page/{{item.realID}}\" routerLinkActive=\"router-link-active\"><img class=\"img card-img-top\" src=\"{{getImage(item.im)}}\" alt=\"Card image cap\"> {{ item.t | truncate: [17, '...']}}</li>\r\n      </ul>\r\n    </div>\r\n      <!-- <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"button\" (click)=\"openDialog()\">Register</button> -->\r\n      <!-- <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"button\" (click)=\"openLogin()\">Login</button> -->\r\n    </form>\r\n    </ul>\r\n\r\n  </div>\r\n</nav>\r\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor() { }\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: \"Basic \" + btoa(\"SpringRsocketBackendUserName:SpringRsocketBackendSecretUserPassword\"),\r\n      },\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import {\r\n  Encodable,\r\n  encodeCompositeMetadata,\r\n  encodeRoute,\r\n  MESSAGE_RSOCKET_ROUTING,\r\n} from \"rsocket-core\";\r\nimport { IFutureSubscriber } from \"rsocket-flowable/Single\";\r\nimport { ISubscriber, Payload } from \"rsocket-types\";\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport { take } from \"rxjs/operators\";\r\n\r\nexport function routedPayload(\r\n  route: string,\r\n  data: any = null\r\n): Payload<any, Encodable> {\r\n  return {\r\n    data: data,\r\n    metadata: encodeCompositeMetadata([\r\n      [MESSAGE_RSOCKET_ROUTING, encodeRoute(route)],\r\n    ]),\r\n  };\r\n}\r\n\r\nexport function basicPayload(data): Payload<any, Encodable> {\r\n  return {\r\n    data: data,\r\n    metadata: null,\r\n  };\r\n}\r\n\r\nexport const extractPayloadData = (p) => p.data;\r\n\r\nexport function singleSignal2RXJS(\r\n  subscriber: Subscriber<any>\r\n): Partial<IFutureSubscriber<any>> {\r\n  return {\r\n    onComplete: (n) => {\r\n      subscriber.next(n);\r\n      subscriber.complete();\r\n    },\r\n    onError: (e) => subscriber.error(e),\r\n  };\r\n}\r\n\r\nexport function flowableSignal2RXJS(\r\n  subscriber: Subscriber<any>,\r\n  requestN: number = Number.MAX_SAFE_INTEGER\r\n): Partial<ISubscriber<any>> {\r\n  return {\r\n    onNext: (n) => subscriber.next(n),\r\n    onComplete: () => subscriber.complete(),\r\n    onError: (e) => subscriber.error(e),\r\n    onSubscribe: (s) => s.request(requestN),\r\n  };\r\n}\r\n\r\nexport function rxjs2Flowable(observabl: Observable<any>) {\r\n  return (subscriber: ISubscriber<any>) => {\r\n    subscriber.onSubscribe({\r\n      request: (n) => {\r\n        observabl\r\n          .pipe(take(n))\r\n          .subscribe((s) => subscriber.onNext(basicPayload(s)));\r\n      },\r\n      cancel: () => console.log(\"Cancelled Server Request\"),\r\n    });\r\n  };\r\n}\r\n","import { JsonSerializer, Serializer } from \"rsocket-core\";\r\n\r\n/**  Serializer that serializes data to Buffer and deserializes to JSON\r\n */\r\nexport const JSONBufferSerializer: Serializer<any> = {\r\n  deserialize: JsonSerializer.deserialize,\r\n  serialize: (data) => {\r\n    if (Buffer.isBuffer(data) || data == null) {\r\n      return data;\r\n    } else return Buffer.from(JSON.stringify(data));\r\n  },\r\n};\r\n/**  Serializer that serializes metadata to Buffer and deserializes to JSON\r\n *  If incoming metadata contains multiple objects will deserialize and return an array of objects\r\n *  If incoming metadata doesn't return any JSON will return\r\n */\r\nexport const JSONCompositeMetadataSerializer: Serializer<any> = {\r\n  deserialize: (metadata) => {\r\n    let str;\r\n    if (metadata == null) {\r\n      return null;\r\n    } else if (typeof metadata === \"string\") {\r\n      str = metadata;\r\n    } else if (Buffer.isBuffer(metadata)) {\r\n      const buffer: Buffer = metadata;\r\n      str = buffer.toString(\"utf8\");\r\n    } else {\r\n      const buffer: Buffer = Buffer.from(metadata);\r\n      str = buffer.toString(\"utf8\");\r\n    }\r\n\r\n    if (str.includes(\"application/json\")) {\r\n      const objArray = [];\r\n      const jsonStrArr = str.split(\"application/json\");\r\n      for (let i = 1; i < jsonStrArr.length; i++) {\r\n        const unformattedJsonstr = jsonStrArr[i];\r\n\r\n        const jsonstr = unformattedJsonstr.substring(\r\n          unformattedJsonstr.indexOf(\"{\"),\r\n          unformattedJsonstr.lastIndexOf(\"}\") + 1\r\n        );\r\n        objArray.push(JSON.parse(jsonstr));\r\n      }\r\n      if (objArray.length > 1) return objArray;\r\n      else return objArray[0];\r\n    } else return metadata;\r\n  },\r\n  serialize: (metadata) => {\r\n    if (Buffer.isBuffer(metadata) || metadata == null) {\r\n      return metadata;\r\n    } else return Buffer.from(JSON.stringify(metadata));\r\n  },\r\n};\r\n\r\nexport const JSONBufferSerializers = {\r\n  data: JSONBufferSerializer,\r\n  metadata: JSONCompositeMetadataSerializer,\r\n};\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport { toArray } from \"rxjs/operators\";\r\nimport { Manga } from \"../Models/Manga.models\";\r\nimport { RSocketService } from \"./rsocket-service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class MangaListService {\r\n  public mangaList: Manga[];\r\n  popular: Manga[];\r\n  recent: Manga[];\r\n  postlist: Manga[];\r\n  IsLoaded = false;\r\n  sendingRequest: boolean;\r\n\r\n  // subjects allow for multicasted observables\r\n  mangaSubject = new Subject<Manga[]>();\r\n  recentSubject = new Subject<Manga[]>();\r\n  changeSubject = new Subject<Manga>();\r\n\r\n  constructor(rsocketService: RSocketService) {\r\n    //multicast manga values to the rest of application\r\n    rsocketService.mangaListSubject\r\n      .pipe(toArray())\r\n      .subscribe(this.mangaSubject);\r\n    rsocketService.latestSubject.subscribe(this.recentSubject);\r\n    rsocketService.popularSubject.subscribe((p) => (this.popular = p));\r\n    this.recentSubject.subscribe((r) => (this.recent = r));\r\n    this.mangaSubject.subscribe((list) => {\r\n      this.mangaList = list;\r\n      this.IsLoaded = true;\r\n      //subscribe to rsocket change stream for real-time updates\r\n      rsocketService.changeStream.subscribe(this.changeSubject);\r\n      this.changeSubject.subscribe((m) => this.changeStreamEventHandler(m));\r\n    });\r\n  }\r\n  //Handle Changed manga\r\n  changeStreamEventHandler(manga: Manga): void {\r\n    console.log(manga.t + \" Was Updated\");\r\n    this.updateArray(this.mangaList, manga);\r\n    this.updateArray(this.popular, manga);\r\n    this.updateArray(this.recent, manga);\r\n  }\r\n\r\n  updateArray(arr: any[], manga: Manga) {\r\n    const exists = !arr.find((m) => m.realID === manga.realID);\r\n    //if manga was just inserted into table\r\n    if (exists && arr != this.popular) {\r\n      arr.push(manga);\r\n    }\r\n    //else find manga in array and replace\r\n    else {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].realID === manga.realID) arr[i] = manga;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper fadeInDown\">\r\n    <div id=\"formContent\">\r\n      <!-- Tabs Titles -->\r\n\r\n      <!-- Icon -->\r\n      <div class=\"fadeIn first\">\r\n        <img src=\"https://www.b-cube.in/wp-content/uploads/2014/05/aditya-300x177.jpg\" id=\"icon\" alt=\"User Icon\" />\r\n        <h1>Manga Paradise</h1>\r\n      </div>\r\n\r\n      <!-- Login Form -->\r\n      <form>\r\n        <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"username\">\r\n        <input type=\"text\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"password\">\r\n        <input type=\"submit\" class=\"fadeIn fourth\" value=\"Log In\">\r\n      </form>\r\n\r\n      <!-- Remind Passowrd -->\r\n      <div id=\"formFooter\">\r\n        <a class=\"underlineHover\" href=\"#\">Go to the Site</a>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n","import { Directive, HostBinding, Input } from \"@angular/core\";\r\n@Directive({\r\n  selector: \"img\",\r\n  host: {\r\n    \"(error)\": \"updateUrl()\",\r\n    \"(load)\": \"load()\",\r\n    \"[src]\": \"src\",\r\n  },\r\n})\r\nexport class ImagePreloadDirective {\r\n  @Input() src: string;\r\n  @HostBinding(\"class\") className;\r\n\r\n  updateUrl() {\r\n    this.src = \"../../../assets/noimage.jpeg\";\r\n  }\r\n  load() {\r\n    this.className = \"image-loaded\";\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<img class=\"img-responsive img-fluid\" src=\"../../assets/404.png\">\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { HomeComponent } from \"./Components/home/home.component\";\r\nimport { MangaListComponent } from \"./Components/manga-list/manga-list.component\";\r\nimport { MangaPageComponent } from \"./Components/manga-page/manga-page.component\";\r\nimport { ReaderComponent } from \"./Components/reader/reader.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"/home\", pathMatch: \"full\" },\r\n  {\r\n    path: \"manga-reader/:manga/:index\",\r\n    redirectTo: \"/manga-reader/:manga/:index/1\",\r\n    pathMatch: \"full\",\r\n  },\r\n  {\r\n    path: \"manga-reader/:manga\",\r\n    redirectTo: \"/manga-page/:manga\",\r\n    pathMatch: \"full\",\r\n  },\r\n  { path: \"home\", component: HomeComponent },\r\n  { path: \"manga-list\", component: MangaListComponent },\r\n  { path: \"manga-list/:genre\", component: MangaListComponent },\r\n  { path: \"manga-page/:realID\", component: MangaPageComponent },\r\n  { path: \"manga-reader/:manga/:index/:page\", component: ReaderComponent },\r\n  //{path: '**', component: PageNotFoundComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","<!-- If api isn't finished getting manga show cool spinner -->\r\n<div *ngIf=\"showSpinner\" class=\"container justify-content-center\">\r\n  <app-spinner [wedge]=true [isMobile]=isMobile></app-spinner>\r\n</div>\r\n\r\n<div [hidden]=\"showSpinner\" class=\"container\">\r\n  <!--Displays the first container that contains info such as author,artist, status and manga image-->\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n\r\n      <img class=\"image-fluid rounded cover\" (load)=\"showSpinner=false\" src=\"{{manga.im}}\">\r\n\r\n      <div class=\"col\">\r\n        <h1 class=\"title\">{{ manga.t }} </h1>\r\n        <p>Author: <a routerLink=\"/manga-list/{{manga.info.author}}\" routerLinkActive=\"router-link-active\">{{\r\n            manga.info.author }}</a></p>\r\n        <p>Artist: <a routerLink=\"/manga-list/{{manga.info.artist}}\" routerLinkActive=\"router-link-active\">{{\r\n            manga.info.artist }}</a></p>\r\n        <p *ngIf=\"manga.s == 1\">Status: <span>Ongoing | {{ manga.info.chapters.length }} Chapters</span></p>\r\n        <p *ngIf=\"manga.s == 2\">Status: <span>Completed | {{ manga.info.chapters.length }} Chapters</span></p>\r\n        <button class=\"btn btn-success read\" (click)=\"startReading()\"><i class=\"fas fa-book-open\"></i> Start\r\n          Reading</button>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!--Displays the second container that contains info such as summary, genre and other facts-->\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <h1 class=\"title2\">Summary</h1>\r\n        <div class=\"row genre\">\r\n          <h4 class=\"genre\" *ngFor=\"let genre of genres\"><a routerLink=\"/manga-list/{{genre}}\"><span\r\n                class=\"badge badge-primary\">{{ genre }}</span></a></h4>\r\n        </div>\r\n\r\n        <h3 class=\"title2\">Description</h3>\r\n        <p class=\"description\" [innerHTML]=manga.info.description></p>\r\n        <h3 class=\"title2\">Other Facts</h3>\r\n        <p class=\"lastUpdate\">Last Update: {{ manga.ld * 1000 | date:'MM-dd-yyyy' }}</p>\r\n        <p class=\"published\">Published year: {{ manga.info.released}}</p>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!--Displays the third container that contains the manga chapters-->\r\n  <div class=\"container page2\">\r\n    <div class=\"row\">\r\n\r\n      <div class=\"col-lg-6\">\r\n        <div class=\"card mangaChapters\">\r\n          <div class=\"card-header\">\r\n            <h3 *ngIf=\"!showChapter\"><i class=\"fas fa-book\"></i> CHAPTERS </h3>\r\n            <h3 *ngIf=\"showChapter\"> CHAPTERS | JUMP </h3>\r\n            <button [hidden]=\"!showChapter\" class=\"btn btn-info jump\" (click)=\"jumpToChapter(item)\"\r\n              *ngFor=\"let item of location\">{{jumpDisplay(item)}}</button>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div *ngFor=\"let chapter of chapters; let i = index\" class=\"card-title\">\r\n              <div *ngIf=\"showChapter || i < 10\" id=\"chapter {{chapter[0]}}\">\r\n                <a (click)=\"service.setPageIndex(undefined)\"\r\n                  routerLink=\"/manga-reader/{{manga.realID}}/{{ chapter[0] }}/0\" routerLinkActive=\"router-link-active\">\r\n                  <span *ngIf=\"!chapter[2] && chapter[2] != chapter[0]\">Chapter {{ chapter[0]}}</span>\r\n                  <span *ngIf=\"chapter[2] == chapter[0]\">Chapter {{ chapter[2]}}</span>\r\n                  <span *ngIf=\"chapter[2] && chapter[2] != chapter[0]\">Chapter {{ chapter[0]}}: {{ chapter[2]}}</span>\r\n                </a>\r\n              </div>\r\n              <div *ngIf=\"showChapter\">\r\n                <div *ngIf=\"checkIndex(chapter[0])\"></div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button *ngIf=\"!showChapter\" (click)=\"showMore()\" class=\"btn btn-success showMore\"><i\r\n                  class=\"fas fa-angle-down\"></i></button>\r\n              <button *ngIf=\"showChapter\" (click)=\"showMore()\" class=\"btn btn-success showMore\"><i\r\n                  class=\"fas fa-angle-up\"></i></button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!--Related mangas section-->\r\n      <div class=\"col-lg-6\">\r\n        <div class=\"card related\">\r\n          <div class=\"card-header\">\r\n            <h3><img class=\"logo\" src=\"../../assets/imageedit_11_3620823692.png\"> SIMILAR MANGA</h3>\r\n          </div>\r\n          <div *ngFor=\"let item of relatedManga;  let i = index\" class=\"card-body text-center align-middle\">\r\n\r\n            <div *ngIf=\"item!==undefined && !item.info.imageLoaded\">\r\n              <app-spinner></app-spinner>\r\n            </div>\r\n\r\n            <img *ngIf=\"item !== undefined && manga.realID != item.realID\" [hidden]=\"!item.info.imageLoaded\"\r\n              (load)='item.info.imageLoaded = true' (error)='item.info.imageLoaded = true'\r\n              class=\"relatedImg card-img-top\" src=\"{{item.im}}\" alt=\"Card image cap\">\r\n            <div class=\"col\">\r\n              <a *ngIf=\"item !== undefined && manga.realID != item.realID\" class=\"card-title\"\r\n                routerLink=\"/manga-page/{{item.realID}}\" routerLinkActive=\"router-link-active\">\r\n                <h4>{{item.t}}</h4>\r\n              </a>\r\n            </div>\r\n\r\n            <div class=\"col\">\r\n              <p *ngIf=\"item !== undefined && i < 5 && manga.realID != item.realID && item.s == 1\">Status:\r\n                <span>Ongoing | {{ item.info.chapters.length }} Chapters</span>\r\n              </p>\r\n              <p *ngIf=\"item !== undefined && i < 5 && manga.realID != item.realID && item.s == 2\">Status:\r\n                <span>Completed | {{ item.info.chapters.length }} Chapters</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { Manga } from \"src/app/Models/Manga.models\";\r\nimport { MangaListService } from \"src/app/Services/manga-list-service\";\r\nimport { MangaService } from \"src/app/Services/manga.service\";\r\n\r\n@Component({\r\n  selector: \"app-manga-page\",\r\n  templateUrl: \"./manga-page.component.html\",\r\n  styleUrls: [\"./manga-page.component.css\"],\r\n})\r\nexport class MangaPageComponent implements OnInit {\r\n  manga: Manga;\r\n  list = [];\r\n  relatedManga: Manga[] = [];\r\n  genres = [];\r\n  chapters: any[];\r\n  location = [];\r\n  showChapter = false;\r\n  showSpinner = true;\r\n  isMobile: boolean;\r\n\r\n  constructor(\r\n    public service: MangaService,\r\n    private mangaListService: MangaListService,\r\n    private title: Title,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    deviceService: DeviceDetectorService\r\n  ) {\r\n    window.scroll(0, 0);\r\n    this.isMobile = deviceService.isMobile();\r\n  }\r\n\r\n  fixString() {\r\n    this.manga.info.description = this.manga.info.description\r\n      .split(\"&#039;\")\r\n      .join(\"'\");\r\n    this.manga.info.description = this.manga.info.description\r\n      .split(\"&quot;\")\r\n      .join(\"'\");\r\n    this.manga.info.description = this.manga.info.description\r\n      .split(\"&amp;\")\r\n      .join(\"'\");\r\n    this.manga.info.description = this.manga.info.description\r\n      .split(\"&nbsp;\")\r\n      .join(\"'\");\r\n  }\r\n\r\n  showMore() {\r\n    this.showChapter = !this.showChapter;\r\n  }\r\n\r\n  startReading() {\r\n    this.service.setPageIndex(undefined);\r\n    this.router.navigate([\r\n      \"manga-reader/\",\r\n      this.manga.realID,\r\n      this.manga.info.chapters[this.manga.info.chapters.length - 1][0],\r\n      1,\r\n    ]);\r\n  }\r\n\r\n  // renders a list of 5 mangas that are related to the current genre\r\n  relatedMangas() {\r\n    const filter = (m) => {\r\n      let i = 0;\r\n      this.genres.forEach((g) => {\r\n        if (m.c.includes(g)) i++;\r\n      });\r\n      return i >= 2;\r\n    };\r\n\r\n    if (this.mangaListService.mangaList) {\r\n      this.relatedManga = this.mangaListService.mangaList\r\n        .slice()\r\n        .filter((manga) => this.manga.realID !== manga.realID);\r\n      this.shuffle(this.relatedManga);\r\n      // Until Our Numbers are up, this logic must be disabled\r\n      this.relatedManga = this.relatedManga.filter(filter);\r\n      if (this.relatedManga.length > 3) this.relatedManga.length = 3;\r\n    } else {\r\n      this.mangaListService.mangaSubject.subscribe((l) => {\r\n        this.relatedManga = l\r\n          .slice()\r\n          .filter((manga) => this.manga.realID !== manga.realID);\r\n        this.shuffle(this.relatedManga);\r\n        // Until Our Numbers are up, this logic must be disabled\r\n        this.relatedManga = this.relatedManga.filter(filter);\r\n        if (this.relatedManga.length > 3) this.relatedManga.length = 3;\r\n      });\r\n    }\r\n  }\r\n\r\n  // gets image from api\r\n  getImage(url: string) {\r\n    if (url.startsWith(\"http\")) {\r\n      return url;\r\n    } else {\r\n      return \"/image/\" + url;\r\n    }\r\n  }\r\n\r\n  // filter function that handles the manga\r\n  filter(params) {\r\n    // tslint:disable-next-line:radix\r\n    this.list = this.list.filter(\r\n      (manga) => manga.realID === parseInt(params.get(\"realID\"))\r\n    );\r\n\r\n    if (this.list[0] == null || isNaN(parseInt(params.get(\"realID\")))) {\r\n      this.router.navigate([\"**\"]);\r\n    }\r\n\r\n    this.title.setTitle(this.list[0].t);\r\n    this.manga = this.list[0];\r\n    this.fixString();\r\n    this.service.setManga(this.list[0]);\r\n    this.genres = this.manga.c;\r\n    this.manga.info.numOfChapters = this.manga.info.chapters.length;\r\n    this.chapters = this.manga.info.chapters;\r\n  }\r\n\r\n  // Pushes every 50 element into an array\r\n  checkIndex(i) {\r\n    i = parseFloat(i);\r\n    if (i % 50 === 0 && i !== 0) {\r\n      if (this.location.find((num) => num === i)) {\r\n        return;\r\n      } else {\r\n        this.location.push(parseFloat(i));\r\n      }\r\n    }\r\n  }\r\n\r\n  jumpToChapter(chapter) {\r\n    if (chapter - 50 > 1) {\r\n      const x = document.getElementById(\"chapter \" + (chapter - 50));\r\n      x.scrollIntoView();\r\n    } else {\r\n      const x = document.getElementById(\r\n        \"chapter \" + this.chapters[this.chapters.length - 1][0]\r\n      );\r\n      x.scrollIntoView();\r\n    }\r\n  }\r\n\r\n  jumpDisplay(item) {\r\n    if (item - 50 > 1) {\r\n      return item - 50;\r\n    } else {\r\n      return this.chapters[this.chapters.length - 1][0];\r\n    }\r\n  }\r\n\r\n  // shuffles an array\r\n  shuffle(array) {\r\n    // tslint:disable-next-line:one-variable-per-declaration\r\n    let currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  IsLatest(params) {\r\n    try {\r\n      return (\r\n        params.get(\"realID\") ===\r\n        this.mangaListService.recent\r\n          .find((manga) => manga.realID.toString() === params.get(\"realID\"))\r\n          .realID.toString()\r\n      );\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  IsPopular(params) {\r\n    try {\r\n      return (\r\n        params.get(\"realID\") ===\r\n        this.mangaListService.popular\r\n          .find((manga) => manga.realID.toString() === params.get(\"realID\"))\r\n          .realID.toString()\r\n      );\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  loadFromDatabase(params) {\r\n    setTimeout(() => {\r\n      if (this.list.length === 0) {\r\n        if (\r\n          this.service.Manga &&\r\n          this.service.Manga.realID === parseFloat(params.get(\"realID\"))\r\n        ) {\r\n          this.list[0] = this.service.Manga;\r\n          this.filter(params);\r\n          this.relatedMangas();\r\n        } else {\r\n          this.service.getManga(params.get(\"realID\")).subscribe((manga) => {\r\n            this.list[0] = manga;\r\n            this.service.setMangaFromPage(manga);\r\n\r\n            this.filter(params);\r\n            this.relatedMangas();\r\n          });\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  resetSpinner() {\r\n    this.list.forEach((manga) => (manga.info.imageLoaded = false));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.resetSpinner();\r\n      window.scroll(0, 0);\r\n\r\n      // if manga is in manga service\r\n      if (\r\n        this.service.Manga &&\r\n        parseFloat(params.get(\"realID\")) === this.service.Manga.realID\r\n      ) {\r\n        this.list[0] = this.service.Manga;\r\n\r\n        this.filter(params);\r\n        this.relatedMangas();\r\n        // if any manga are in the api service\r\n      } else if (this.mangaListService.mangaList) {\r\n        this.list = this.mangaListService.mangaList.slice();\r\n        this.filter(params);\r\n        this.service.setMangaFromPage(this.list[0]);\r\n        this.relatedMangas();\r\n\r\n        // if in popular manga\r\n      } else if (!this.mangaListService.mangaList && this.IsPopular(params)) {\r\n        this.list = this.mangaListService.popular.slice();\r\n        this.filter(params);\r\n        this.relatedMangas();\r\n\r\n        // if in latest manga\r\n      } else if (!this.mangaListService.mangaList && this.IsLatest(params)) {\r\n        this.list = this.mangaListService.recent.slice();\r\n        this.filter(params);\r\n        this.service.setMangaFromPage(this.list[0]);\r\n        this.relatedMangas();\r\n      } else {\r\n        // this will load the manga's info straight from the database if the next functions fail\r\n        this.loadFromDatabase(params);\r\n\r\n        // this will run if it's part of the latest manga\r\n        this.mangaListService.recentSubject.subscribe((latest) => {\r\n          if (!this.list) {\r\n            this.list = latest.filter(\r\n              (item) => item.realID == parseInt(params.get(\"realID\"))\r\n            );\r\n\r\n            if (this.list.length != 0) {\r\n              this.filter(params);\r\n              this.service.setMangaFromPage(this.list[0]);\r\n              this.relatedMangas();\r\n            }\r\n          }\r\n        });\r\n\r\n        this.mangaListService.mangaSubject.subscribe((manga) => {\r\n          if (!this.list) {\r\n            this.list = manga.slice();\r\n            this.filter(params);\r\n            this.service.setMangaFromPage(this.list[0]);\r\n            this.relatedMangas();\r\n          }\r\n        });\r\n      }\r\n      this.service.updateSubject.subscribe((m) => {\r\n        if (this.manga.realID === m.realID) {\r\n          this.manga = m;\r\n          this.list[0] = m;\r\n          this.filter(params);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}