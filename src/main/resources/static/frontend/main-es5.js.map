{"version":3,"sources":["webpack:///src/app/Components/home/home.component.ts","webpack:///src/app/Components/home/home.component.html","webpack:///src/app/Services/rsocket-service.ts","webpack:///src/app/Services/reader-service.ts","webpack:///src/app/truncate.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/app/Components/SubComponents/navbar/register/register.component.ts","webpack:///src/app/Components/SubComponents/navbar/register/register.component.html","webpack:///src/app/Components/home/popular-manga/popular-manga.component.html","webpack:///src/app/Components/home/popular-manga/popular-manga.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/RSocketUtil/RSocketClientResponder.ts","webpack:///src/app/Services/manga.service.ts","webpack:///src/app/RSocketUtil/RSocketConfig.ts","webpack:///src/app/Components/SubComponents/spinner/spinner.component.html","webpack:///src/app/Components/SubComponents/spinner/spinner.component.ts","webpack:///src/app/Components/reader/reader.component.ts","webpack:///src/app/Components/reader/reader.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/Components/SubComponents/footer/footer.component.ts","webpack:///src/app/Components/SubComponents/footer/footer.component.html","webpack:///src/app/Directives/VarDirective.ts","webpack:///src/app/Components/manga-list/manga-list.component.html","webpack:///src/app/Components/manga-list/manga-list.component.ts","webpack:///src/app/Components/SubComponents/navbar/navbar.component.ts","webpack:///src/app/Components/SubComponents/navbar/navbar.component.html","webpack:///src/app/Interceptors/Auth.interceptor.ts","webpack:///src/app/RSocketUtil/RsocketUtils.ts","webpack:///src/app/RSocketUtil/JSONBufferSerializer.ts","webpack:///src/app/Services/manga-list-service.ts","webpack:///src/app/Components/SubComponents/navbar/login/login.component.ts","webpack:///src/app/Components/SubComponents/navbar/login/login.component.html","webpack:///src/app/Directives/ImageDirective.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/Components/manga-page/manga-page.component.html","webpack:///src/app/Components/manga-page/manga-page.component.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["mangaService","undefined","HomeComponent","listService","title","deviceService","storage","latestManga","showGenre","anouncement","genres","setTitle","isMobile","currentlyReading","get","currentlyReadingChapter","chapterIndex","sortByTime","length","manga","chapter","setManga","setChapterIndex","sort","a","b","ld","url","startsWith","find","m","realID","push","i","getLatest","mangaList","slice","recentSubject","subscribe","list","recent","mangaSubject","changeSubject","updateList","window","scroll","RSocketService","http","socketReady","changeStream","mangaListSubject","latestSubject","popularSubject","connectFailed","connected","currentMangaSubject","id","os","Math","floor","random","set","responder","getDeviceInfo","tokenRequest","headers","responseType","pipe","errors","tokenConsumer","token","connectRSocket","rsocketConfig","subscribe2RSocket","setInterval","console","log","connect","onComplete","s","publishConnectEvent","onError","err","rsocket","getManga","getPopular","watchDBChanges","socket","subscriber","requestStream","map","requestResponse","sock","connectionStatus","status","kind","next","ReaderService","reader","service","rsocketService","route","router","firstPage","display","verticalView","currentPage","setPageIndex","Index","images","nextChapter","chapters","finalPage","lastChapter","index","forEach","element","clearInterval","interval","navigate","firstChapter","parseFloat","substring","currentPageLoaded","finalChapter","params","Manga","sendingRequest","getChapter","setup","t","chapterSubject","getMangaByID","filtered","filter","populateDisplay","array","reverse","TruncatePipe","value","limit","parseInt","trail","environment","production","RegisterComponent","PopularMangaComponent","rsocketservice","getScreenSize","popular","favorites","apiResponse","event","innerWidth","wierdSize","AppComponent","logRequest","type","payload","data","make","metadata","RSocketClientResponder","deviceInfo","error","Error","of","arr","payloads","just","MangaService","updateSubject","storageManga","storageCIndex","storagePIndex","mangaFromService","existsInList","saveManga2Local","pageIndex","sub","getChapters","c","mangaName","n","RSocketConfig","jwt","rsocketUrl","transport","connectionConfig","keepAlive","lifetime","dataMimeType","string","metadataMimeType","serializers","SpinnerComponent","wedge","rainbow","drip","readerService","ReaderComponent","imageSize","dark","loadedImage","expandImage","darkMode","size","nativeElement","ownerDocument","body","style","backgroundColor","paramMap","isNaN","item","checkLatest","latest","loadFromDatabase","setChapter","toString","setTimeout","search","keyCode","nextPage","preventDefault","lastPage","AppModule","provide","useClass","multi","FooterComponent","VarDirective","vcRef","templateRef","context","$implicit","ngVar","updateView","clear","createEmbeddedView","MangaListComponent","modalService","alphabet","genreArray","show","toggle","letter","p","localeCompare","genre","splice","content","every","indexOf","open","centered","gen","info","author","artist","alert","imageLoaded","h","resetSpinner","filterByGenre","NavbarComponent","dialog","scrHeight","innerHeight","scrWidth","showlist","saveToStorage","name","toUpperCase","tempList","AuthInterceptor","request","clone","setHeaders","Authorization","btoa","handle","routedPayload","basicPayload","extractPayloadData","singleSignal2RXJS","complete","e","flowableSignal2RXJS","requestN","Number","MAX_SAFE_INTEGER","onNext","onSubscribe","rxjs2Flowable","observabl","cancel","JSONBufferSerializer","deserialize","serialize","Buffer","isBuffer","from","JSON","stringify","JSONCompositeMetadataSerializer","str","buffer","includes","objArray","jsonStrArr","split","unformattedJsonstr","jsonstr","lastIndexOf","parse","JSONBufferSerializers","MangaListService","IsLoaded","r","changeStreamEventHandler","updateArray","exists","LoginComponent","ImagePreloadDirective","src","className","PageNotFoundComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","MangaPageComponent","mangaListService","relatedManga","location","showChapter","showSpinner","description","join","g","shuffle","l","fixString","numOfChapters","num","x","document","getElementById","scrollIntoView","currentIndex","temporaryValue","randomIndex","relatedMangas","setMangaFromPage","IsPopular","IsLatest","startReading","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, Inject, OnInit } from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { LOCAL_STORAGE, WebStorageService } from \"ngx-webstorage-service\";\r\nimport { Manga } from \"../../Models/Manga.models\";\r\nimport { MangaListService } from \"../../Services/manga-list-service\";\r\nimport { MangaService } from \"../../Services/manga.service\";\r\n\r\n@Component({\r\n  selector: \"app-home\",\r\n  templateUrl: \"./home.component.html\",\r\n  styleUrls: [\"./home.component.css\"],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  portrait: boolean;\r\n  isMobile: boolean;\r\n  latestManga: Manga[] = [];\r\n  showGenre = false;\r\n  // tslint:disable-next-line:max-line-length\r\n  anouncement =\r\n    \"Welcome to Manga-Spring! This site was built to showcase technical expertise in full-stack development. The coolest thing about this site is that it uses the RSocket network protocol to send/recieve data\";\r\n  genres = [\r\n    \"Action\",\r\n    \"Adventure\",\r\n    \"Comedy\",\r\n    \"Comic\",\r\n    \"Drama\",\r\n    \"Demons\",\r\n    \"Doujinshi\",\r\n    \"Ecchi\",\r\n    \"Fantasy\",\r\n    \"Harem\",\r\n    \"Historical\",\r\n    \"Horror\",\r\n    \"Josei\",\r\n    \"Martial Arts\",\r\n    \"Magic\",\r\n    \"Mature\",\r\n    \"Mecha\",\r\n    \"Mystery\",\r\n    \"Psychological\",\r\n    \"Romance\",\r\n    \"Seinen\",\r\n    \"School Life\",\r\n    \"Shoujo\",\r\n    \"Sci-fi\",\r\n    \"Shounen\",\r\n    \"Supernatural\",\r\n    \"Sports\",\r\n    \"Tragedy\",\r\n  ];\r\n\r\n  currentlyReading: Manga;\r\n  currentlyReadingChapter: string;\r\n  routerLinkText: string;\r\n\r\n  constructor(\r\n    private listService: MangaListService,\r\n    public mangaService: MangaService,\r\n    title: Title,\r\n    deviceService: DeviceDetectorService,\r\n    @Inject(LOCAL_STORAGE) storage: WebStorageService\r\n  ) {\r\n    title.setTitle(\"MangaSpring\");\r\n    this.isMobile = deviceService.isMobile();\r\n    this.currentlyReading = storage.get(\"Manga\");\r\n    this.currentlyReadingChapter = mangaService.chapterIndex;\r\n  }\r\n\r\n  getLatest() {\r\n    // this.latestManga = this.latestManga.filter(item => item.ld > new Date(Date.now()).getTime() / 1000 - 604800 && !item.c.includes(\"Adult\"));\r\n    this.sortByTime();\r\n    //set size later\r\n    this.latestManga.length = 6;\r\n  }\r\n\r\n  show() {\r\n    this.showGenre = !this.showGenre;\r\n  }\r\n\r\n  setChapter(manga, chapter) {\r\n    this.mangaService.setManga(manga);\r\n    this.mangaService.setChapterIndex(chapter);\r\n  }\r\n\r\n  sortByTime() {\r\n    return this.latestManga.sort((a, b) => b.ld - a.ld);\r\n  }\r\n\r\n  getImage(url: string) {\r\n    if (url.startsWith(\"http\")) {\r\n      return url;\r\n    } else {\r\n      return \"/image/\" + url;\r\n    }\r\n  }\r\n\r\n  updateList(manga: Manga) {\r\n    if (!this.latestManga.find((m) => m.realID === manga.realID))\r\n      this.latestManga.push(manga);\r\n    else {\r\n      for (let i = 0; i < this.latestManga.length; i++) {\r\n        if (this.latestManga[i].realID === manga.realID)\r\n          this.latestManga[i] = manga;\r\n      }\r\n    }\r\n    this.getLatest();\r\n  }\r\n\r\n  ngOnInit() {\r\n    //fix when we get a lot of manga\r\n    if (this.listService.mangaList) {\r\n      this.latestManga = this.listService.mangaList.slice();\r\n      this.getLatest();\r\n      this.listService.recentSubject.subscribe((list) => {\r\n        this.latestManga = list;\r\n        this.getLatest();\r\n        this.listService.recent = list;\r\n      });\r\n    } else if (!this.listService.mangaList && this.listService.recent) {\r\n      this.latestManga = this.listService.recent;\r\n      this.getLatest();\r\n    } else {\r\n      this.listService.mangaSubject.subscribe((list) => {\r\n        this.latestManga = list.slice();\r\n        this.getLatest();\r\n      });\r\n    }\r\n    this.listService.changeSubject.subscribe((m) => this.updateList(m));\r\n    window.scroll(0, 0);\r\n  }\r\n}\r\n","<!-- If api isn't finished getting manga show cool spinner -->\r\n<div *ngIf=\"latestManga.length===0\" class=\"container justify-content-center\" style=\"text-align: center;\">\r\n  <app-spinner [wedge]=true [isMobile]=isMobile></app-spinner>\r\n  <h5>Loading Site...</h5>\r\n</div>\r\n\r\n<!--Renders the popular manga list-->\r\n<div *ngIf=\"latestManga.length!==0\" class=\"container favorites\">\r\n  <h3> <i class=\"fas fa-fire\"></i> POPULAR MANGA</h3>\r\n  <div class=\"row container\">\r\n    <app-popular-manga></app-popular-manga>\r\n  </div>\r\n</div>\r\n\r\n<!--Latest manga list-->\r\n<div class=\"container\" *ngIf=\"latestManga.length!==0\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-6 favorites2\">\r\n      <h3><i class=\"fas fa-clock\"></i> LATEST MANGA</h3>\r\n      <table class=\"table table-bordered table-hover\">\r\n        <thead class=\"thead-dark text-center\">\r\n          <tr>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Chapter</th>\r\n            <th class=\"hidecol\" scope=\"col\">Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let manga of latestManga\">\r\n            <td class=\"text-center align-middle\"><img class=\"img card-img-top\" src=\"{{getImage(manga.im)}}\"\r\n                alt=\"Card image cap\"></td>\r\n            <td class=\"text-center align-middle\"><a routerLink=\"/manga-page/{{manga.realID}}\"\r\n                routerLinkActive=\"router-link-active\">\r\n                <h5 class=\"card-title\">{{ manga.t }}</h5>\r\n              </a></td>\r\n            <td class=\"text-center align-middle\"><a (click)=\"mangaService.setPageIndex(undefined)\"\r\n                routerLink=\"/manga-reader/{{manga.realID}}/{{ manga.info.chapters[0][0]}}\"\r\n                routerLinkActive=\"router-link-active\" class=\"card-text\"> Chapter {{ manga.info.chapters[0][0]}}</a></td>\r\n            <td class=\"hidecol text-muted text-center align-middle\"><small>Last updated {{ manga.ld * 1000 |\r\n                date:'MM-dd-yyyy'\r\n                }}</small></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!--Displays the announcement-->\r\n    <div class=\"col-lg-6 message\">\r\n      <div class=\"card announcement\">\r\n        <div class=\"card-header\">\r\n          <h3><i class=\"fas fa-exclamation-triangle\"></i> ANNOUNCEMENTS</h3>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">Hey Everyone,</h5>\r\n          <p class=\"card-text\">{{ anouncement }} <br><br> </p>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n          <small class=\"text-muted\">If you find any bugs or misplaced chapters send us a email <a\r\n              href=\"mailto:someone@example.com?Subject=Report\" target=\"_top\">Here</a></small>\r\n        </div>\r\n      </div>\r\n\r\n      <!--Displays the Last Read Chapter-->\r\n      <div class=\"container\" *ngIf=\"currentlyReading && currentlyReadingChapter\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-10 favorites2\">\r\n            <h3><i class=\"fas fa-book-reader\"></i> Continue Reading</h3>\r\n            <table class=\"table table-bordered table-hover\">\r\n              <tbody>\r\n                <tr>\r\n                  <td class=\"text-center align-middle\"><img class=\"img card-img-top\" src=\"{{currentlyReading.im}}\"\r\n                      alt=\"Card image cap\"></td>\r\n                  <td class=\"text-center align-middle\"><a\r\n                      routerLink=\"/manga-reader/{{currentlyReading.realID}}/{{currentlyReadingChapter.replace('Chapter ','')}}\"\r\n                      routerLinkActive=\"router-link-active\">\r\n                      <h5 class=\"card-title\">{{ currentlyReading.t }}</h5>\r\n                    </a></td>\r\n                  <td class=\"text-center align-middle\"><a\r\n                      routerLink=\"/manga-reader/{{currentlyReading.realID}}/{{currentlyReadingChapter.replace('Chapter ','')}}\"\r\n                      routerLinkActive=\"router-link-active\">{{currentlyReadingChapter}}</a>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!--Displays the genre selection-->\r\n      <div class=\"card top-rated\">\r\n        <div class=\"card-header\">\r\n          <h3><img class=\"logo\" src=\"../../assets/imageedit_11_3620823692.png\"> BROWSE BY GENRE</h3>\r\n        </div>\r\n        <div class=\"card-body row\">\r\n          <div class=\"col-sm-4\" *ngFor=\"let genre of genres; let i = index;\">\r\n            <a *ngIf=\"showGenre || i < 6\" routerLink=\"/manga-list/{{genre}}\" routerLinkActive=\"router-link-active\">\r\n              <p class=\"card-text\">{{ genre }}</p>\r\n            </a>\r\n          </div>\r\n          <button *ngIf=\"!showGenre\" (click)=\"show()\" class=\"btn btn-success showMore\"><i\r\n              class=\"fas fa-angle-down\"></i></button>\r\n          <button *ngIf=\"showGenre\" (click)=\"show()\" class=\"btn btn-success showMore\"><i\r\n              class=\"fas fa-angle-up\"></i></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Inject, Injectable } from \"@angular/core\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { LOCAL_STORAGE, WebStorageService } from \"ngx-webstorage-service\";\r\nimport { ClientConfig, Encodable, RSocketClient } from \"rsocket-core\";\r\nimport { ReactiveSocket } from \"rsocket-types\";\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { delay, retryWhen, take, toArray } from \"rxjs/operators\";\r\nimport { Manga, MangaChapters } from \"../Models/Manga.models\";\r\nimport { RSocketClientResponder } from \"../RSocketUtil/RSocketClientResponder\";\r\nimport { RSocketConfig } from \"../RSocketUtil/RSocketConfig\";\r\nimport {\r\n  extractPayloadData,\r\n  flowableSignal2RXJS,\r\n  routedPayload,\r\n  singleSignal2RXJS,\r\n} from \"../RSocketUtil/RsocketUtils\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RSocketService {\r\n  client: RSocketClient<any, Encodable>;\r\n  rsocket: ReactiveSocket<any, Encodable>;\r\n  socketReady = new Subject<ReactiveSocket<any, Encodable>>();\r\n  changeStream = new Subject<Manga>();\r\n  mangaListSubject = new Subject<Manga>();\r\n  latestSubject = new Subject<Manga[]>();\r\n  popularSubject = new Subject<Manga[]>();\r\n  connectFailed = false;\r\n  connected = false;\r\n  currentMangaSubject = new Subject<string>();\r\n\r\n  constructor(\r\n    http: HttpClient,\r\n    deviceService: DeviceDetectorService,\r\n    @Inject(LOCAL_STORAGE) storage: WebStorageService\r\n  ) {\r\n    let id = storage.get(\"uniqueId\");\r\n    if (!id) {\r\n      id =\r\n        deviceService.os +\r\n        \"-Manga-Spring-\" +\r\n        Math.floor(Math.random() * Math.floor(1000));\r\n      storage.set(\"uniqueId\", id);\r\n    }\r\n    const responder = new RSocketClientResponder(\r\n      this.currentMangaSubject,\r\n      deviceService.getDeviceInfo()\r\n    );\r\n\r\n    const tokenRequest = http\r\n      .get(\"/api/getToken\", {\r\n        headers: new HttpHeaders().set(\"Content-Type\", \"text/plain\"),\r\n        responseType: \"text\",\r\n      })\r\n      .pipe(retryWhen((errors) => errors.pipe(delay(1000), take(10))));\r\n\r\n    const tokenConsumer = (token: string) => {\r\n      this.connectRSocket(\r\n        new RSocketConfig(id, token, responder).rsocketConfig\r\n      );\r\n      this.subscribe2RSocket();\r\n    };\r\n\r\n    tokenRequest.subscribe(tokenConsumer);\r\n\r\n    setInterval(() => {\r\n      if (this.connectFailed) {\r\n        this.connectFailed = false;\r\n        console.log(\"Attempting Reconnect\");\r\n        tokenRequest.subscribe(tokenConsumer);\r\n      }\r\n    }, 3000);\r\n  }\r\n\r\n  connectRSocket(rsocketConfig: ClientConfig<any, Encodable>) {\r\n    new RSocketClient(rsocketConfig).connect().subscribe({\r\n      onComplete: (s) => this.publishConnectEvent(s),\r\n      onError: (err) => {\r\n        console.log(\"Failed to Connect to RSocket\", err);\r\n        this.connectFailed = true;\r\n        this.connected = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  subscribe2RSocket() {\r\n    this.socketReady.subscribe((rsocket) => {\r\n      if (!this.connected) {\r\n        this.connected = true;\r\n        console.log(\"🚀🚀🚀 RSocket Connection is: CONNECTED 🚀🚀🚀\");\r\n        this.getManga(rsocket).subscribe(this.mangaListSubject);\r\n        this.getPopular(rsocket).subscribe(this.popularSubject);\r\n        this.getLatest(rsocket).subscribe(this.latestSubject);\r\n        this.watchDBChanges(rsocket).subscribe(this.changeStream);\r\n      }\r\n    });\r\n  }\r\n\r\n  //get All manga\r\n  getManga(socket: ReactiveSocket<any, Encodable>): Observable<Manga> {\r\n    return new Observable<Manga>((subscriber) => {\r\n      socket\r\n        .requestStream(routedPayload(\"get-mangas\"))\r\n        .map(extractPayloadData)\r\n        .subscribe(flowableSignal2RXJS(subscriber));\r\n    });\r\n  }\r\n\r\n  getMangaByID(id: number): Observable<Manga> {\r\n    return new Observable<Manga>((subscriber) => {\r\n      this.rsocket\r\n        .requestResponse(routedPayload(\"get-manga-\" + id))\r\n        .map(extractPayloadData)\r\n        .subscribe(singleSignal2RXJS(subscriber));\r\n    });\r\n  }\r\n\r\n  getPopular(socket: ReactiveSocket<any, Encodable>): Observable<Manga[]> {\r\n    return new Observable<Manga>((subscriber) => {\r\n      socket\r\n        .requestStream(routedPayload(\"popular-manga\"))\r\n        .map(extractPayloadData)\r\n        .subscribe(flowableSignal2RXJS(subscriber, 5));\r\n    }).pipe(toArray());\r\n  }\r\n\r\n  getLatest(socket: ReactiveSocket<any, Encodable>): Observable<Manga[]> {\r\n    return new Observable<Manga>((subscriber) => {\r\n      socket\r\n        .requestStream(routedPayload(\"latest-manga\"))\r\n        .map(extractPayloadData)\r\n        .subscribe(flowableSignal2RXJS(subscriber));\r\n    }).pipe(toArray());\r\n  }\r\n\r\n  getChapters(id: number): Observable<MangaChapters> {\r\n    return new Observable<MangaChapters>((subscriber) => {\r\n      this.rsocket\r\n        .requestResponse(routedPayload(\"get-chapters-\" + id))\r\n        .map(extractPayloadData)\r\n        .subscribe(singleSignal2RXJS(subscriber));\r\n    });\r\n  }\r\n\r\n  watchDBChanges(socket: ReactiveSocket<any, Encodable>): Observable<Manga> {\r\n    return new Observable<Manga>((subscriber) => {\r\n      socket\r\n        .requestStream(routedPayload(\"mongo-change-stream\"))\r\n        .map(extractPayloadData)\r\n        .subscribe(flowableSignal2RXJS(subscriber));\r\n    });\r\n  }\r\n\r\n  publishConnectEvent(sock: ReactiveSocket<any, Encodable>) {\r\n    sock.connectionStatus().subscribe((status) => {\r\n      if (status.kind !== \"CONNECTED\") {\r\n        console.log(\"RSocket Connection is: \" + status.kind);\r\n        this.connected = false;\r\n        this.rsocket = undefined;\r\n        if (status.kind === \"ERROR\") {\r\n          this.connectFailed = true;\r\n        }\r\n      } else {\r\n        this.rsocket = sock;\r\n        this.socketReady.next(sock);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Title } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { ReaderComponent } from \"../Components/reader/reader.component\";\r\nimport { MangaListService } from \"./manga-list-service\";\r\nimport { MangaService } from \"./manga.service\";\r\nimport { RSocketService } from \"./rsocket-service\";\r\n\r\n// Not Meant to be Injected\r\nexport class ReaderService {\r\n  constructor(\r\n    private reader: ReaderComponent,\r\n    protected service: MangaService,\r\n    protected rsocketService: RSocketService,\r\n    protected listService: MangaListService,\r\n    protected route: ActivatedRoute,\r\n    protected router: Router,\r\n    protected title: Title\r\n  ) {}\r\n\r\n  // goes to next page\r\n  nextPage(i) {\r\n    this.reader.firstPage = false;\r\n\r\n    // if it's not in vertical mode, proceed to next page by setting thier hidden status\r\n    if (i + 1 < this.reader.display.length && !this.reader.verticalView) {\r\n      this.reader.display[i][4] = false;\r\n      this.reader.display[++i][4] = true;\r\n      this.reader.currentPage = i;\r\n      window.scroll(0, 0);\r\n      this.service.setPageIndex(i);\r\n    }\r\n\r\n    // this will make the last page in vertical clickable\r\n    else if (i + 1 >= this.reader.Index.images.length - 1) {\r\n      this.nextChapter();\r\n      window.scroll(0, 0);\r\n    }\r\n\r\n    // this will check if at end of manga\r\n    if (\r\n      this.service.chapterIndex ==\r\n        this.reader.chapters.chapters[0].chapterIndex &&\r\n      this.reader.display[this.reader.display.length - 1][0] ===\r\n        this.reader.display[i][0]\r\n    ) {\r\n      this.reader.finalPage = true;\r\n    }\r\n  }\r\n\r\n  // goes to previous page\r\n  lastPage(i) {\r\n    this.reader.finalPage = false;\r\n    if (i != 0) {\r\n      this.reader.display[i][4] = false;\r\n      this.reader.display[--i][4] = true;\r\n      this.reader.currentPage = i;\r\n      this.service.setPageIndex(i);\r\n    } else if (i == 0) {\r\n      this.lastChapter();\r\n    }\r\n\r\n    if (\r\n      this.reader.display.length !== 0 &&\r\n      this.service.chapterIndex ==\r\n        this.reader.chapters.chapters[this.reader.chapters.chapters.length - 1]\r\n          .chapterIndex &&\r\n      this.reader.display[0][0] === this.reader.display[i][0]\r\n    ) {\r\n      this.reader.firstPage = true;\r\n    }\r\n\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  // jumps to page\r\n  jump(index) {\r\n    this.reader.display.forEach((element) => (element[4] = false));\r\n    this.reader.display[index][4] = true;\r\n    this.reader.currentPage = index;\r\n    this.service.setPageIndex(index);\r\n    // check if first page\r\n    if (\r\n      this.reader.display[0][0] === this.reader.display[index][0] &&\r\n      this.service.chapterIndex ==\r\n        this.reader.chapters.chapters[this.reader.chapters.chapters.length - 1]\r\n          .chapterIndex\r\n    ) {\r\n      this.reader.firstPage = true;\r\n    } else {\r\n      this.reader.firstPage = false;\r\n    }\r\n    // check if last page\r\n    if (\r\n      this.reader.display[this.reader.display.length - 1][0] ===\r\n        this.reader.display[index][0] &&\r\n      this.service.chapterIndex == this.reader.chapters.chapters[0].chapterIndex\r\n    ) {\r\n      this.reader.finalPage = true;\r\n    } else {\r\n      this.reader.finalPage = false;\r\n    }\r\n  }\r\n  // jumps to chapter\r\n  jumpChapter(chapter) {\r\n    this.service.setChapterIndex(\"Chapter \" + chapter);\r\n    clearInterval(this.reader.interval);\r\n    this.reader.display = [];\r\n    this.service.setPageIndex(undefined);\r\n    this.reader.finalPage = false;\r\n    this.router.navigate([\r\n      \"manga-reader/\",\r\n      this.reader.list[0].realID,\r\n      chapter,\r\n      1,\r\n    ]);\r\n  }\r\n  // goes to next chapter\r\n  nextChapter() {\r\n    this.reader.firstChapter = false;\r\n    for (let i = this.reader.chapters.chapters.length - 1; i >= 0; i--) {\r\n      if (\r\n        this.reader.chapters.chapters[i].chapterIndex ===\r\n          this.service.chapterIndex &&\r\n        i - 1 >= 0\r\n      ) {\r\n        this.service.setChapterIndex(\r\n          this.reader.chapters.chapters[i - 1].chapterIndex\r\n        );\r\n        this.reader.display = [];\r\n        clearInterval(this.reader.interval);\r\n        this.service.setPageIndex(undefined);\r\n\r\n        this.router.navigate([\r\n          \"manga-reader/\",\r\n          this.reader.list[0].realID,\r\n          parseFloat(\r\n            this.reader.chapters.chapters[i - 1].chapterIndex.substring(8)\r\n          ),\r\n          1,\r\n        ]);\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // goes to previous chapter\r\n  lastChapter() {\r\n    this.reader.currentPageLoaded = false;\r\n    this.reader.finalChapter = false;\r\n    for (let i = this.reader.chapters.chapters.length - 1; i >= 0; i--) {\r\n      if (\r\n        this.reader.chapters.chapters[i].chapterIndex ===\r\n        this.service.chapterIndex\r\n      ) {\r\n        this.service.setChapterIndex(\r\n          this.reader.chapters.chapters[i + 1].chapterIndex\r\n        );\r\n\r\n        this.reader.display = [];\r\n        clearInterval(this.reader.interval);\r\n\r\n        this.service.setPageIndex(undefined);\r\n        this.router.navigate([\r\n          \"manga-reader/\",\r\n          this.reader.list[0].realID,\r\n          parseFloat(\r\n            this.reader.chapters.chapters[i + 1].chapterIndex.substring(8)\r\n          ),\r\n          //@ts-ignore\r\n          this.reader.chapters.chapters[i + 1].images[0][0] + 1,\r\n        ]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // gets all chapters from API\r\n  getChapter(params) {\r\n    // this checks if the service has the right manga\r\n    if (\r\n      this.service.Manga &&\r\n      this.service.Manga.realID === parseFloat(params.get(\"manga\"))\r\n    ) {\r\n      this.reader.list[0] = this.service.Manga;\r\n\r\n      // this.reader checks whether the manga page has a pending request\r\n      if (!this.service.sendingRequest) {\r\n        this.service\r\n          .getChapter(this.service.Manga.realID)\r\n          .subscribe((chapters) => {\r\n            this.service.chapters = chapters;\r\n            this.service.sendingRequest = false;\r\n\r\n            this.reader.setup(params);\r\n            this.title.setTitle(\r\n              this.reader.list[0].t + \": Chapter \" + this.reader.chapterIndex\r\n            );\r\n          });\r\n      }\r\n\r\n      // else wait for request\r\n      else {\r\n        this.service.chapterSubject.subscribe((chapters) => {\r\n          this.service.chapters = chapters;\r\n\r\n          this.reader.setup(params);\r\n          this.title.setTitle(\r\n            this.reader.list[0].t + \": Chapter \" + this.reader.chapterIndex\r\n          );\r\n          this.service.sendingRequest = false;\r\n        });\r\n      }\r\n    }\r\n\r\n    // else wrong manga\r\n    else {\r\n      this.rsocketService\r\n        .getMangaByID(params.get(\"manga\"))\r\n        .subscribe((manga) => {\r\n          this.reader.list[0] = manga;\r\n          this.service.setManga(manga);\r\n\r\n          this.service\r\n            .getChapter(this.service.Manga.realID)\r\n            .subscribe((chapters) => {\r\n              this.service.chapters = chapters;\r\n              this.service.sendingRequest = false;\r\n\r\n              this.reader.setup(params);\r\n              this.title.setTitle(\r\n                this.reader.list[0].t + \": Chapter \" + this.reader.chapterIndex\r\n              );\r\n            });\r\n        });\r\n    }\r\n  }\r\n\r\n  // sets the current chapter\r\n  setChapter(params) {\r\n    const filtered = this.reader.chapters.chapters.filter(\r\n      (chapter) => chapter.chapterIndex === \"Chapter \" + params.get(\"index\")\r\n    );\r\n\r\n    this.reader.Index = filtered[0];\r\n    this.service.setChapterIndex(\"Chapter \" + params.get(\"index\"));\r\n    this.populateDisplay();\r\n\r\n    // check if first page\r\n    if (\r\n      this.service.chapterIndex ==\r\n      this.reader.chapters.chapters[this.reader.chapters.chapters.length - 1]\r\n        .chapterIndex\r\n    ) {\r\n      this.reader.firstChapter = true;\r\n      this.reader.firstPage = true;\r\n    } else {\r\n      this.reader.firstChapter = false;\r\n      this.reader.firstPage = false;\r\n    }\r\n\r\n    // check if final chapter\r\n    if (\r\n      this.service.chapterIndex == this.reader.chapters.chapters[0].chapterIndex\r\n    ) {\r\n      this.reader.finalChapter = true;\r\n    } else {\r\n      this.reader.finalChapter = false;\r\n    }\r\n  }\r\n\r\n  // uses interval to add pages to the display\r\n  populateDisplay() {\r\n    let i = 0;\r\n    const array = this.reader.Index.images.slice().reverse();\r\n    this.reader.interval = setInterval(() => {\r\n      if (i === array.length) {\r\n        return;\r\n      }\r\n\r\n      this.reader.display.push(array[i]);\r\n      this.reader.display[i][5] = false;\r\n\r\n      if (i === this.reader.currentPage) {\r\n        this.reader.display[i][4] = true;\r\n      } else {\r\n        this.reader.display[i][4] = false;\r\n      }\r\n\r\n      i++;\r\n    }, 0);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'truncate'\r\n})\r\nexport class TruncatePipe implements PipeTransform {\r\n\r\n  transform(value: any, ...args: any[]): any {\r\n    const limit = args.length > 0 ? parseInt(args[0], 10) : 20;\r\n    const trail = args.length > 1 ? args[1] : '...';\r\n\r\n    return value.length > limit ? value.substring(0, limit) + trail : value;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper fadeInDown\">\r\n    <div id=\"formContent\">\r\n      <!-- Tabs Titles -->\r\n\r\n      <!-- Icon -->\r\n      <div class=\"fadeIn first\">\r\n        <img src=\"https://www.b-cube.in/wp-content/uploads/2014/05/aditya-300x177.jpg\" id=\"icon\" alt=\"User Icon\" />\r\n        <h1>Manga Paradise</h1>\r\n      </div>\r\n\r\n      <!-- Login Form -->\r\n      <form>\r\n        <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"username\">\r\n        <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"email\">\r\n        <input type=\"text\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"password\">\r\n        <input type=\"text\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"re-enterpassword\">\r\n        <input type=\"submit\" class=\"fadeIn fourth\" value=\"Sign Up\">\r\n      </form>\r\n\r\n      <!-- Remind Passowrd -->\r\n      <div id=\"formFooter\">\r\n        <a class=\"underlineHover\" href=\"#\">Go to the Site</a>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n","<div class=\"row\">\r\n  <div *ngFor=\"let manga of favorites\" class=\"col\">\r\n    <div class=\"card-deck\" [ngClass]=\"{'notWeird': !wierdSize}\">\r\n      <div class=\"card\">\r\n\r\n        <div *ngIf=\"!manga.info.imageLoaded\">\r\n          <app-spinner></app-spinner>\r\n        </div>\r\n\r\n        <img [hidden]=\"!manga.info.imageLoaded\" (load)='manga.info.imageLoaded = true' class=\"img card-img-top\"\r\n          src=\"{{getImage(manga.im)}}\" alt=\"Card image cap\">\r\n\r\n        <div class=\"card-body\">\r\n          <a routerLink=\"/manga-page/{{manga.realID}}\" routerLinkActive=\"router-link-active\">\r\n            <h6 class=\"card-title\">{{ manga.t }}</h6>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, HostListener, OnInit } from \"@angular/core\";\r\nimport { Manga } from \"src/app/Models/Manga.models\";\r\nimport { MangaListService } from \"src/app/Services/manga-list-service\";\r\nimport { RSocketService } from \"src/app/Services/rsocket-service\";\r\n\r\n@Component({\r\n  selector: \"app-popular-manga\",\r\n  templateUrl: \"./popular-manga.component.html\",\r\n  styleUrls: [\"./popular-manga.component.css\"],\r\n})\r\nexport class PopularMangaComponent implements OnInit {\r\n  favorites: Manga[];\r\n  filter: Manga[];\r\n  wierdSize: boolean;\r\n\r\n  constructor(\r\n    private service: MangaListService,\r\n    private rsocketservice: RSocketService\r\n  ) {\r\n    this.getScreenSize();\r\n  }\r\n\r\n  getImage(url: string) {\r\n    if (url.startsWith(\"http\")) {\r\n      return url;\r\n    } else {\r\n      return \"/image/\" + url;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.service.popular) {\r\n      this.favorites = this.service.popular;\r\n    } else {\r\n      this.rsocketservice.popularSubject.subscribe((apiResponse) => {\r\n        this.favorites = apiResponse;\r\n        this.service.popular = apiResponse;\r\n      });\r\n    }\r\n  }\r\n\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  getScreenSize(event?) {\r\n    if (window.innerWidth > 767 && window.innerWidth < 993)\r\n      this.wierdSize = true;\r\n    else this.wierdSize = false;\r\n  }\r\n}\r\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent {\r\n  title = \"Manga Spring\";\r\n}\r\n","<div class=\"main-container\">\r\n  <app-navbar></app-navbar>\r\n  <router-outlet></router-outlet>\r\n  <app-footer></app-footer>\r\n</div>\r\n","import { DeviceInfo } from \"ngx-device-detector\";\r\nimport { Encodable } from \"rsocket-core\";\r\nimport { Flowable, Single } from \"rsocket-flowable\";\r\nimport { Payload, Responder } from \"rsocket-types\";\r\nimport { Subject } from \"rxjs\";\r\nimport { bufferCount, map } from \"rxjs/operators\";\r\nimport { rxjs2Flowable } from \"./RsocketUtils\";\r\n\r\nfunction logRequest(type: string, payload: Payload<any, Encodable>) {\r\n  console.log(`Responder response to ${type}, data: ${payload.data || \"null\"}`);\r\n}\r\n\r\nfunction make(data): Payload<any, Encodable> {\r\n  return {\r\n    data,\r\n    metadata: \"\",\r\n  };\r\n}\r\n\r\nexport class RSocketClientResponder implements Responder<any, Encodable> {\r\n  mangaSubject: Subject<string>;\r\n\r\n  constructor(mangaSubject: Subject<string>, private deviceInfo: DeviceInfo) {\r\n    this.mangaSubject = mangaSubject;\r\n  }\r\n\r\n  metadataPush(payload: Payload<any, Encodable>): Single<void> {\r\n    return Single.error(new Error(\"not implemented\"));\r\n  }\r\n\r\n  fireAndForget(payload: Payload<any, Encodable>): void {\r\n    logRequest(\"fire-and-forget\", payload);\r\n  }\r\n\r\n  requestResponse(\r\n    payload: Payload<any, Encodable>\r\n  ): Single<Payload<any, Encodable>> {\r\n    console.log(\"request-response Request from server\", payload.metadata);\r\n    return Single.of(make(this.deviceInfo));\r\n  }\r\n\r\n  requestStream(\r\n    payload: Payload<any, Encodable>\r\n  ): Flowable<Payload<any, Encodable>> {\r\n    console.log(\"request-stream Request from server\", payload.metadata);\r\n    return new Flowable(\r\n      rxjs2Flowable(\r\n        this.mangaSubject.pipe(\r\n          bufferCount(2),\r\n          map((arr) => arr[arr.length - 1])\r\n        )\r\n      )\r\n    );\r\n  }\r\n\r\n  requestChannel(\r\n    payloads: Flowable<Payload<any, Encodable>>\r\n  ): Flowable<Payload<any, Encodable>> {\r\n    return Flowable.just(make(\"client channel response\"));\r\n  }\r\n}\r\n","import { Inject, Injectable } from \"@angular/core\";\r\nimport { LOCAL_STORAGE, WebStorageService } from \"ngx-webstorage-service\";\r\nimport { Subject } from \"rxjs\";\r\nimport { delay, map, take } from \"rxjs/operators\";\r\nimport { Manga, MangaChapters } from \"../Models/Manga.models\";\r\nimport { MangaListService } from \"./manga-list-service\";\r\nimport { RSocketService } from \"./rsocket-service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class MangaService {\r\n  public Manga: Manga;\r\n  public chapters: MangaChapters;\r\n  public chapterIndex: string;\r\n  public pageIndex: number;\r\n  public chapterSubject = new Subject<MangaChapters>();\r\n  public updateSubject = new Subject<Manga>();\r\n  public sendingRequest: boolean;\r\n  search: boolean;\r\n\r\n  constructor(\r\n    @Inject(LOCAL_STORAGE) private storage: WebStorageService,\r\n    private rsocketService: RSocketService,\r\n    listService: MangaListService\r\n  ) {\r\n    // gets manga and chapterindex from session\r\n    const storageManga = storage.get(\"Manga\");\r\n    const storageCIndex = storage.get(\"CIndex\");\r\n    const storagePIndex = storage.get(\"PIndex\");\r\n\r\n    if (storageManga) {\r\n      this.Manga = storageManga;\r\n      //ensure data in session isn't stale\r\n      listService.mangaSubject.subscribe((list) => {\r\n        const mangaFromService = list.find(\r\n          (m) => m.realID === this.Manga.realID\r\n        );\r\n        this.setManga(mangaFromService);\r\n        this.updateSubject.next(mangaFromService);\r\n      });\r\n    }\r\n\r\n    if (storageCIndex) {\r\n      this.setChapterIndex(storageCIndex);\r\n    }\r\n\r\n    if (storagePIndex) {\r\n      this.setPageIndex(storagePIndex);\r\n    }\r\n    //Update set Manga on Change Stream\r\n    listService.changeSubject.pipe(delay(500)).subscribe((m) => {\r\n      const existsInList = listService.mangaList.find(\r\n        (m) => m.realID === this.Manga.realID\r\n      );\r\n      if (existsInList) {\r\n        this.setManga(m);\r\n        this.updateSubject.next(m);\r\n      }\r\n    });\r\n  }\r\n\r\n  // sets current manga\r\n  setManga(manga: Manga) {\r\n    this.Manga = manga;\r\n  }\r\n  // sets current manga\r\n  saveManga2Local() {\r\n    this.storage.set(\"Manga\", this.Manga);\r\n  }\r\n\r\n  setMangaForReader(manga: Manga) {\r\n    this.Manga = manga;\r\n    this.saveManga2Local();\r\n  }\r\n\r\n  setMangaFromPage(manga: Manga) {\r\n    this.Manga = manga;\r\n    this.chapterSubject = new Subject<MangaChapters>();\r\n    this.getChapter(manga.realID).subscribe(this.chapterSubject);\r\n    this.chapterSubject.subscribe((chapters) => {\r\n      this.chapters = chapters;\r\n      this.sendingRequest = false;\r\n    });\r\n  }\r\n\r\n  setChapterIndex(index: string) {\r\n    this.chapterIndex = index;\r\n    this.storage.set(\"CIndex\", this.chapterIndex);\r\n    this.rsocketService.currentMangaSubject.next(this.Manga.t + \" \" + index);\r\n  }\r\n\r\n  setPageIndex(index: number) {\r\n    this.pageIndex = index;\r\n    this.storage.set(\"PIndex\", this.pageIndex);\r\n  }\r\n\r\n  getManga(id): Subject<Manga> {\r\n    const sub = new Subject<Manga>();\r\n    if (this.rsocketService.rsocket !== undefined) {\r\n      this.rsocketService.getMangaByID(id).subscribe(sub);\r\n    } else {\r\n      this.rsocketService.socketReady\r\n        .pipe(take(1))\r\n        .subscribe((b) => this.rsocketService.getMangaByID(id).subscribe(sub));\r\n    }\r\n    return sub;\r\n  }\r\n\r\n  getChapter(id: number) {\r\n    const sub = new Subject<MangaChapters>();\r\n    this.sendingRequest = true;\r\n\r\n    if (this.rsocketService.rsocket !== undefined) {\r\n      this.rsocketService.getChapters(id).subscribe(sub);\r\n    } else {\r\n      this.rsocketService.socketReady\r\n        .pipe(take(1))\r\n        .subscribe((b) => this.rsocketService.getChapters(id).subscribe(sub));\r\n    }\r\n    sub\r\n      .pipe(map((c) => c.mangaName))\r\n      .subscribe((n) => this.rsocketService.currentMangaSubject.next(n));\r\n    return sub;\r\n  }\r\n\r\n  saveToStorage() {\r\n    this.storage.set(\"Manga\", this.Manga);\r\n    this.storage.set(\"CIndex\", this.chapterIndex);\r\n    this.storage.set(\"PIndex\", this.pageIndex);\r\n  }\r\n}\r\n","import {\r\n  APPLICATION_JSON,\r\n  BufferEncoders,\r\n  ClientConfig,\r\n  Encodable,\r\n  encodeBearerAuthMetadata,\r\n  encodeCompositeMetadata,\r\n  MESSAGE_RSOCKET_AUTHENTICATION,\r\n  MESSAGE_RSOCKET_COMPOSITE_METADATA,\r\n} from \"rsocket-core\";\r\nimport RSocketWebSocketClient from \"rsocket-websocket-client\";\r\nimport { JSONBufferSerializers } from \"./JSONBufferSerializer\";\r\nimport { RSocketClientResponder } from \"./RSocketClientResponder\";\r\n\r\nexport class RSocketConfig {\r\n  rsocketConfig: ClientConfig<any, Encodable>;\r\n\r\n  constructor(id, jwt: string, responder: RSocketClientResponder) {\r\n    // const rsocketUrl = \"ws://localhost:8080/rsocket\";\r\n    const rsocketUrl = \"wss://manga-spring.herokuapp.com/rsocket\";\r\n\r\n    const transport = new RSocketWebSocketClient(\r\n      {\r\n        url: rsocketUrl,\r\n      },\r\n      BufferEncoders\r\n    );\r\n\r\n    const connectionConfig = {\r\n      keepAlive: 20000,\r\n      lifetime: 180000,\r\n      dataMimeType: APPLICATION_JSON.string,\r\n      metadataMimeType: MESSAGE_RSOCKET_COMPOSITE_METADATA.string,\r\n      //setup payload\r\n      payload: {\r\n        data: id,\r\n        metadata: encodeCompositeMetadata([\r\n          [MESSAGE_RSOCKET_AUTHENTICATION, encodeBearerAuthMetadata(jwt)],\r\n        ]),\r\n      },\r\n    };\r\n\r\n    this.rsocketConfig = {\r\n      serializers: JSONBufferSerializers,\r\n      setup: connectionConfig,\r\n      responder: responder,\r\n      transport: transport,\r\n    };\r\n  }\r\n}\r\n","<!-- generic Spinner -->\r\n<div *ngIf=\"!wedge && !rainbow && !drip\" class=\"loader\">Loading...</div>\r\n\r\n<!-- rainbow spinner -->\r\n<section *ngIf=\"rainbow\" class=\"wrapper\">\r\n  <div class=\"spinner\">\r\n    <i></i>\r\n    <i></i>\r\n    <i></i>\r\n    <i></i>\r\n    <i></i>\r\n    <i></i>\r\n    <i></i>\r\n  </div>\r\n</section>\r\n\r\n<!-- wedge spinner -->\r\n<div *ngIf=\"wedge && !isMobile\" class=\"container row justify-content-center\">\r\n  <div class=\"loadingio-spinner-wedges-v3ub56f6x8p\">\r\n    <div class=\"ldio-lneahrv1l9r\">\r\n      <div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Drip spinner -->\r\n<div *ngIf=\"drip || isMobile\" class=\"container\" style=\"text-align:center;\">\r\n\r\n  <svg class=\"gegga\">\r\n    <defs>\r\n      <filter id=\"gegga\">\r\n        <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"7\" result=\"blur\" />\r\n        <feColorMatrix in=\"blur\" mode=\"matrix\" values=\"1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 20 -10\" result=\"inreGegga\" />\r\n        <feComposite in=\"SourceGraphic\" in2=\"inreGegga\" operator=\"atop\" />\r\n      </filter>\r\n    </defs>\r\n  </svg>\r\n  <svg class=\"snurra\" width=\"200\" height=\"200\" viewBox=\"0 0 200 200\">\r\n    <defs>\r\n      <linearGradient id=\"linjärGradient\">\r\n        <stop class=\"stopp1\" offset=\"0\" />\r\n        <stop class=\"stopp2\" offset=\"1\" />\r\n      </linearGradient>\r\n      <linearGradient y2=\"160\" x2=\"160\" y1=\"40\" x1=\"40\" gradientUnits=\"userSpaceOnUse\" id=\"gradient\"\r\n        xlink:href=\"#linjärGradient\" />\r\n    </defs>\r\n    <path class=\"halvan\"\r\n      d=\"m 164,100 c 0,-35.346224 -28.65378,-64 -64,-64 -35.346224,0 -64,28.653776 -64,64 0,35.34622 28.653776,64 64,64 35.34622,0 64,-26.21502 64,-64 0,-37.784981 -26.92058,-64 -64,-64 -37.079421,0 -65.267479,26.922736 -64,64 1.267479,37.07726 26.703171,65.05317 64,64 37.29683,-1.05317 64,-64 64,-64\" />\r\n    <circle class=\"strecken\" cx=\"100\" cy=\"100\" r=\"64\" />\r\n  </svg>\r\n</div>\r\n","import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-spinner\",\r\n  templateUrl: \"./spinner.component.html\",\r\n  styleUrls: [\"./spinner.component.css\"],\r\n})\r\nexport class SpinnerComponent {\r\n  @Input() wedge = false;\r\n  @Input() rainbow = false;\r\n  @Input() drip = false;\r\n  @Input() isMobile = false;\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  HostListener,\r\n  OnDestroy,\r\n  OnInit,\r\n} from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute, ParamMap, Router } from \"@angular/router\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { Chapters, MangaChapters } from \"../../Models/Manga.models\";\r\nimport { MangaListService } from \"../../Services/manga-list-service\";\r\nimport { MangaService } from \"../../Services/manga.service\";\r\nimport { ReaderService } from \"../../Services/reader-service\";\r\nimport { RSocketService } from \"../../Services/rsocket-service\";\r\n// tslint:disable: triple-equals\r\n// tslint:disable: align\r\n// tslint:disable: one-line\r\n// tslint:disable: no-trailing-whitespace\r\n// tslint:disable: quotemark\r\n// tslint:disable: max-line-length\r\n// tslint:disable: radix\r\n\r\n@Component({\r\n  selector: \"app-reader\",\r\n  templateUrl: \"./reader.component.html\",\r\n  styleUrls: [\"./reader.component.css\"],\r\n})\r\nexport class ReaderComponent implements OnInit, OnDestroy {\r\n  list = [];\r\n\r\n  readerService: ReaderService;\r\n\r\n  constructor(\r\n    protected service: MangaService,\r\n    protected listService: MangaListService,\r\n    protected route: ActivatedRoute,\r\n    private element: ElementRef,\r\n    protected router: Router,\r\n    protected title: Title,\r\n    rsocketService: RSocketService,\r\n    deviceService: DeviceDetectorService\r\n  ) {\r\n    this.isMobile = deviceService.isMobile();\r\n    this.darkMode();\r\n\r\n    // If on phone, the pages will be displayed vertically\r\n    if (this.isMobile) {\r\n      this.verticalView = !this.verticalView;\r\n    }\r\n    this.readerService = new ReaderService(\r\n      this,\r\n      service,\r\n      rsocketService,\r\n      listService,\r\n      route,\r\n      router,\r\n      title\r\n    );\r\n  }\r\n\r\n  imageSize = 60;\r\n  isMobile: boolean;\r\n  verticalView = false;\r\n  dark = false;\r\n  chapters: MangaChapters;\r\n  Index: Chapters;\r\n  chapterIndex: string;\r\n  interval;\r\n  display = [];\r\n  currentPage = 0;\r\n  firstPage;\r\n  firstChapter = false;\r\n  finalPage = false;\r\n  finalChapter = false;\r\n  loadedImage = false;\r\n  currentPageLoaded = false;\r\n  expandImage = false;\r\n\r\n  changeView() {\r\n    this.verticalView = !this.verticalView;\r\n  }\r\n\r\n  resizeImages(size: number) {\r\n    this.imageSize = size;\r\n    this.expandImage = !this.expandImage;\r\n  }\r\n\r\n  darkMode() {\r\n    this.dark = !this.dark;\r\n\r\n    if (this.dark) {\r\n      this.element.nativeElement.ownerDocument.body.style.backgroundColor =\r\n        \"black\";\r\n    } else {\r\n      this.element.nativeElement.ownerDocument.body.style.backgroundColor =\r\n        \"white\";\r\n    }\r\n  }\r\n\r\n  disableSpinner() {\r\n    this.currentPageLoaded = true;\r\n    return null;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.display = [];\r\n      clearInterval(this.interval);\r\n\r\n      // tslint:disable: radix\r\n      if (\r\n        isNaN(parseInt(params.get(\"manga\"))) ||\r\n        isNaN(parseInt(params.get(\"index\")))\r\n      ) {\r\n        this.router.navigate([\"**\"]);\r\n      }\r\n\r\n      // if manga exists in session\r\n      if (\r\n        this.service.Manga &&\r\n        parseFloat(params.get(\"manga\")) === this.service.Manga.realID\r\n      ) {\r\n        this.list[0] = this.service.Manga;\r\n        this.setup(params);\r\n        this.title.setTitle(this.list[0].t + \": Chapter \" + this.chapterIndex);\r\n      }\r\n\r\n      // if the mangalist is loaded\r\n      else if (this.listService.mangaList) {\r\n        this.list = this.listService.mangaList.filter(\r\n          (item) => item.realID == parseInt(params.get(\"manga\"))\r\n        );\r\n\r\n        this.setup(params);\r\n        this.title.setTitle(this.list[0].t + \": Chapter \" + this.chapterIndex);\r\n      }\r\n\r\n      // check if this is part of the latest manga\r\n      else if (!this.listService.mangaList && this.checkLatest(params)) {\r\n        this.list = this.listService.recent\r\n          .slice()\r\n          .filter((item) => item.realID == parseInt(params.get(\"manga\")));\r\n\r\n        this.setup(params);\r\n        this.title.setTitle(this.list[0].t + \": Chapter \" + this.chapterIndex);\r\n      } else {\r\n        // this will run if it's part of the latest manga\r\n        this.listService.recentSubject.subscribe((latest) => {\r\n          if (!this.list) {\r\n            this.list = latest.filter(\r\n              (item) => item.realID == parseInt(params.get(\"manga\"))\r\n            );\r\n\r\n            if (this.list.length != 0) {\r\n              this.setup(params);\r\n              this.title.setTitle(\r\n                this.list[0].t + \": Chapter \" + this.chapterIndex\r\n              );\r\n            }\r\n          }\r\n        });\r\n\r\n        // this will run in all other cases\r\n        this.listService.mangaSubject.subscribe((manga) => {\r\n          if (this.list.length == 0) {\r\n            this.list = manga.filter(\r\n              (item) => item.realID == parseInt(params.get(\"manga\"))\r\n            );\r\n            this.setup(params);\r\n            this.title.setTitle(\r\n              this.list[0].t + \": Chapter \" + this.chapterIndex\r\n            );\r\n          }\r\n        });\r\n\r\n        // this will load the manga's info straight from the database if the above two functions fail\r\n        this.loadFromDatabase(params);\r\n      }\r\n    });\r\n  }\r\n\r\n  // setup variables based on the route\r\n  setup(params) {\r\n    //saves manga 2 local storage for later reading\r\n    this.service.saveManga2Local();\r\n    this.chapterIndex = params.get(\"index\");\r\n\r\n    // if chapterlist is in the service\r\n    if (\r\n      this.service.chapters &&\r\n      this.list[0].t === this.service.chapters.mangaName\r\n    ) {\r\n      this.chapters = this.service.chapters;\r\n      this.readerService.setChapter(params);\r\n    } else {\r\n      this.service.setManga(this.list[0]);\r\n      this.readerService.getChapter(params);\r\n    }\r\n\r\n    // sets page\r\n    if (this.service.pageIndex != undefined) {\r\n      this.currentPage = this.service.pageIndex;\r\n    } else if (parseInt(params.get(\"page\")) > 0) {\r\n      this.currentPage = parseInt(params.get(\"page\")) - 1;\r\n    } else {\r\n      this.currentPage = 0;\r\n    }\r\n  }\r\n\r\n  // checks whether manga is part of the latest manga\r\n  checkLatest(params) {\r\n    try {\r\n      return (\r\n        params.get(\"manga\") ===\r\n        this.listService.recent\r\n          .find((manga) => manga.realID.toString() === params.get(\"manga\"))\r\n          .realID.toString()\r\n      );\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // this will load the manga from the database if the site doesn't currently have it\r\n  loadFromDatabase(params: ParamMap) {\r\n    setTimeout(() => {\r\n      // this checks if the service has a manga stored\r\n      if (this.list.length === 0) {\r\n        this.readerService.getChapter(params);\r\n      }\r\n    }, 3000);\r\n  }\r\n\r\n  @HostListener(\"window:keydown\", [\"$event\"])\r\n  keyEvent(event: KeyboardEvent) {\r\n    if (this.service.search) {\r\n      //won't do anything because we're in the searchbar\r\n    } else if (\r\n      (event.keyCode === 39 || event.keyCode === 32 || event.keyCode === 68) &&\r\n      !this.verticalView\r\n    ) {\r\n      this.readerService.nextPage(this.currentPage);\r\n      event.preventDefault();\r\n    } else if (\r\n      (event.keyCode === 37 || event.keyCode === 65) &&\r\n      !this.verticalView\r\n    ) {\r\n      this.readerService.lastPage(this.currentPage);\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //reset dark theme\r\n    this.element.nativeElement.ownerDocument.body.style.backgroundColor =\r\n      \"white\";\r\n    //clear pageindex from session\r\n    this.service.setPageIndex(undefined);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n\r\n  <!-- if pages haven't loaded display the loading spinners -->\r\n  <div *ngIf=\"display.length === 0\">\r\n    <app-spinner [drip]=true></app-spinner>\r\n  </div>\r\n\r\n  <div *ngIf=\"!verticalView && display.length !== 0 && !currentPageLoaded \">\r\n    <app-spinner [rainbow]=true></app-spinner>\r\n  </div>\r\n\r\n  <!-- vertical view top button row -->\r\n  <div *ngIf=\"display.length !== 0\">\r\n\r\n    <div *ngIf=\"verticalView\" class=\" text-center align-middle row justify-content-center topBtn flex-wrap\">\r\n\r\n      <div class=\"dropdown btn-group\" role=\"group\">\r\n\r\n        <button *ngIf=\"!firstChapter\" (click)=\"readerService.lastChapter()\" type=\"button\" class=\"btn btn-dark\"><i\r\n            class=\"fas fa-arrow-left\"></i></button>\r\n\r\n        <div class=\" dropdown btn-group\">\r\n          <button type=\"button\" class=\"btn btn-warning btn-sm dropdown-toggle\" id=\"dropdownButton\"\r\n            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-cog\"></i></button>\r\n\r\n          <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n\r\n            <button *ngIf=\"!isMobile && !expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(100)\"><i\r\n                *ngIf=\"!expandImage\" class=\"fas fa-expand-arrows-alt\"></i> See\r\n              Full Size Images</button>\r\n\r\n            <button *ngIf=\"!isMobile && expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(60)\"><i\r\n                class=\"fas fa-compress-arrows-alt\"></i> See\r\n              60% Size Images (Default)</button>\r\n\r\n            <button class=\"dropdown-item\" (click)=\"changeView()\"><i class=\"fas fa-arrow-alt-circle-right\"></i> Change\r\n              View</button>\r\n\r\n            <button *ngIf=\"dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n              <i class=\"fas fa-sun\"></i> Light Mode\r\n            </button>\r\n\r\n            <button *ngIf=\"!dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n              <i class=\"fas fa-moon\"></i> Dark Mode\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button class=\"btn btn-secondary dropdown-toggle \" type=\"button\" id=\"dropdownButton\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Chapter {{this.chapterIndex}}\r\n        </button>\r\n        <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n          <button *ngFor=\"let chapter of list[0].info.chapters.slice().reverse(); let i = index\" class=\"dropdown-item\"\r\n            (click)=\"readerService.jumpChapter(chapter[0])\">\r\n            Chapter {{ chapter[0] }}\r\n          </button>\r\n        </div>\r\n\r\n        <button *ngIf=\"!finalChapter\" (click)=\"readerService.nextChapter()\" type=\"button\" class=\"btn btn-primary\"><i\r\n            class=\"fas fa-arrow-right\"></i></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- /vertical view top buttons -->\r\n\r\n  <!-- Image NGFOR -->\r\n  <div [hidden]=\"!pages[4] && !verticalView\" *ngFor=\"let pages of display; let i = index\">\r\n\r\n    <!-- If Display hasn't caught up -->\r\n    <div [hidden]=\"true\" *ngIf=\"(pages[4] && !verticalView)\">\r\n      <div [hidden]=\"true\" *ngIf=\"disableSpinner() || false\"></div>\r\n    </div>\r\n\r\n    <!-- top buttons -->\r\n    <div *ngIf=\"!verticalView\" class=\"container row justify-content-center topBtn flex-wrap\">\r\n\r\n      <div class=\"dropdown btn-group\" role=\"group\">\r\n\r\n        <button *ngIf=\"!firstPage\" (click)=\"readerService.lastPage(i)\" type=\"button\" class=\"btn btn-dark\"><i\r\n            class=\"fas fa-arrow-left\"></i></button>\r\n\r\n        <button class=\"btn btn-secondary dropdown-toggle \" type=\"button\" id=\"dropdownButton\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Chapter {{this.chapterIndex}}\r\n        </button>\r\n\r\n        <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n          <button *ngFor=\"let chapter of list[0].info.chapters.slice().reverse(); let i = index\" class=\"dropdown-item\"\r\n            (click)=\"readerService.jumpChapter(chapter[0])\">\r\n            Chapter {{ chapter[0] }}\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\" dropdown btn-group\">\r\n          <button type=\"button\" class=\"btn btn-warning btn-sm dropdown-toggle\" id=\"dropdownButton\"\r\n            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-cog\"></i></button>\r\n\r\n          <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n\r\n            <button *ngIf=\"!isMobile && !expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(100)\"><i\r\n                *ngIf=\"!expandImage\" class=\"fas fa-expand-arrows-alt\"></i> See\r\n              Full Size Images</button>\r\n\r\n            <button *ngIf=\"!isMobile && expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(60)\"><i\r\n                class=\"fas fa-compress-arrows-alt\"></i> See\r\n              60% Size Images (Default)</button>\r\n            <button class=\"dropdown-item\" (click)=\"changeView()\"><i class=\"fas fa-arrow-alt-circle-down\"></i> Change\r\n              View</button>\r\n\r\n            <button *ngIf=\"dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n              <i class=\"fas fa-sun\"></i> Light Mode\r\n            </button>\r\n\r\n            <button *ngIf=\"!dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n              <i class=\"fas fa-moon\"></i> Dark Mode\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"dropdown btn-group\" role=\"group\">\r\n\r\n          <button class=\"btn btn-info dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Page {{currentPage + 1}}\r\n          </button>\r\n\r\n          <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            <button *ngFor=\"let pages of display; let i = index\" (click)=\"readerService.jump(i)\" class=\"dropdown-item\"\r\n              href=\"#\">{{pages[0] + 1}}</button>\r\n          </div>\r\n\r\n\r\n          <button *ngIf=\"!finalPage\" (click)=\"readerService.nextPage(i)\" type=\"button\" class=\"btn btn-primary\"><i\r\n              class=\"fas fa-arrow-right\"></i></button>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <!-- /top buttons -->\r\n\r\n    <!-- if images aren't loaded display loading spinner -->\r\n    <div *ngIf=\"!this.display[i][5]\">\r\n      <app-spinner [rainbow]=true></app-spinner>\r\n    </div>\r\n    <!-- Dead Image -->\r\n\r\n\r\n    <!-- Image container -->\r\n    <div\r\n      *ngVar=\"{isCurrentPage:(this.display[i][4] || verticalView), isPreloadable: currentPage + 2 > i && currentPage - 1 < i } as conditions\"\r\n      [hidden]=\"!this.display[i][5]\" class=\"container-fluid justify-content: center\">\r\n      <!-- For PC Device -->\r\n      <img *ngIf=\"!isMobile && conditions.isCurrentPage || (!isMobile && conditions.isPreloadable)\"\r\n        (load)=\"this.display[i][5] = true\" [style.width.%]=imageSize class=\"img-fluid\" src=\"{{pages[1]}}\"\r\n        (click)=\"readerService.nextPage(i)\">\r\n      <!-- For Mobile Device -->\r\n      <img *ngIf=\"isMobile && conditions.isCurrentPage || (isMobile && conditions.isPreloadable)\"\r\n        (load)=\"this.display[i][5] = true\" class=\"img-fluid mobile\" src=\"{{pages[1]}}\"\r\n        (click)=\"readerService.nextPage(i)\">\r\n    </div>\r\n    <!-- /image container -->\r\n\r\n    <!-- bottom buttons -->\r\n    <div *ngIf=\"!verticalView\" class=\"container row justify-content-center Bbtn flex-wrap\">\r\n\r\n      <div class=\"dropdown btn-group\" role=\"group\">\r\n\r\n        <button *ngIf=\"!firstPage\" (click)=\"readerService.lastPage(i)\" type=\"button\" class=\"btn btn-dark\"><i\r\n            class=\"fas fa-arrow-left\"></i></button>\r\n\r\n        <button class=\"btn btn-secondary dropdown-toggle \" type=\"button\" id=\"dropdownButton\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Chapter {{this.chapterIndex}}\r\n        </button>\r\n\r\n        <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n          <button *ngFor=\"let chapter of list[0].info.chapters.slice().reverse(); let i = index\" class=\"dropdown-item\"\r\n            (click)=\"readerService.jumpChapter(chapter[0])\">\r\n            Chapter {{ chapter[0] }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\" dropdown btn-group \">\r\n        <button type=\"button\" class=\"btn btn-warning btn-sm dropdown-toggle\" id=\"dropdownButton\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-cog\"></i></button>\r\n\r\n        <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n\r\n          <button *ngIf=\"!isMobile && !expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(100)\"><i\r\n              class=\"fas fa-expand-arrows-alt\"></i> See\r\n            Full Size Images</button>\r\n\r\n          <button *ngIf=\"!isMobile && expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(60)\"><i\r\n              class=\"fas fa-compress-arrows-alt\"></i> See\r\n            60% Size Images (Default)</button>\r\n\r\n          <button class=\"dropdown-item\" (click)=\"changeView()\"><i class=\"fas fa-arrow-alt-circle-down\"></i> Change\r\n            View</button>\r\n\r\n          <button *ngIf=\"dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n            <i class=\"fas fa-sun\"></i> Light Mode\r\n          </button>\r\n\r\n          <button *ngIf=\"!dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n            <i class=\"fas fa-moon\"></i> Dark Mode\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"dropdown btn-group\" role=\"group\">\r\n\r\n        <button class=\"btn btn-info dropdown-toggle \" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Page {{currentPage + 1}}\r\n        </button>\r\n\r\n        <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n          <button *ngFor=\"let pages of display; let i = index\" (click)=\"readerService.jump(i)\" class=\"dropdown-item\"\r\n            href=\"#\">{{pages[0] + 1}}</button>\r\n        </div>\r\n\r\n\r\n        <button *ngIf=\"!finalPage\" (click)=\"readerService.nextPage(i)\" type=\"button\" class=\"btn btn-primary\"><i\r\n            class=\"fas fa-arrow-right\"></i></button>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n  <!-- /bottom buttons -->\r\n\r\n</div>\r\n\r\n<!-- /Image NG FOR -->\r\n\r\n<!-- vertical view bottom buttons -->\r\n<div *ngIf=\"display.length !== 0 \">\r\n  <div class=\"container justify-content-center Bbtn flex-wrap\">\r\n\r\n    <div *ngIf=\"verticalView\" class=\" row justify-content-center Bbtn flex-wrap\">\r\n\r\n      <div class=\"dropdown btn-group\" role=\"group\">\r\n\r\n        <button *ngIf=\"!firstChapter\" (click)=\"readerService.lastChapter()\" type=\"button\" class=\"btn btn-dark\"><i\r\n            class=\"fas fa-arrow-left\"></i></button>\r\n\r\n        <div class=\" dropdown btn-group\">\r\n          <button type=\"button\" class=\"btn btn-warning btn-sm dropdown-toggle\" id=\"dropdownButton\"\r\n            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-cog\"></i></button>\r\n\r\n          <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n\r\n            <button *ngIf=\"!isMobile && !expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(100)\"><i\r\n                *ngIf=\"!expandImage\" class=\"fas fa-expand-arrows-alt\"></i> See\r\n              Full Size Images</button>\r\n\r\n            <button *ngIf=\"!isMobile && expandImage\" class=\"dropdown-item\" (click)=\"resizeImages(60)\"><i\r\n                class=\"fas fa-compress-arrows-alt\"></i> See\r\n              60% Size Images (Default)</button>\r\n\r\n            <button class=\"dropdown-item\" (click)=\"changeView()\"><i class=\"fas fa-arrow-alt-circle-right\"></i> Change\r\n              View</button>\r\n\r\n            <button *ngIf=\"dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n              <i class=\"fas fa-sun\"></i> Light Mode\r\n            </button>\r\n\r\n            <button *ngIf=\"!dark\" class=\"dropdown-item\" (click)=\"darkMode()\">\r\n              <i class=\"fas fa-moon\"></i> Dark Mode\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button class=\"btn btn-secondary dropdown-toggle \" type=\"button\" id=\"dropdownButton\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Chapter {{this.chapterIndex}}\r\n        </button>\r\n        <div class=\"dropdown-menu scrollable-menu\" aria-labelledby=\"dropdownButton\">\r\n          <button *ngFor=\"let chapter of list[0].info.chapters.slice().reverse(); let i = index\" class=\"dropdown-item\"\r\n            (click)=\"readerService.jumpChapter(chapter[0])\">\r\n            Chapter {{ chapter[0] }}\r\n          </button>\r\n        </div>\r\n\r\n        <button *ngIf=\"!finalChapter\" (click)=\"readerService.nextChapter()\" type=\"button\" class=\"btn btn-primary\"><i\r\n            class=\"fas fa-arrow-right\"></i></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- vertical view bottom buttons -->\r\n</div>\r\n","import { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { NgxPaginationModule } from \"ngx-pagination\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { HomeComponent } from \"./Components/home/home.component\";\r\nimport { PopularMangaComponent } from \"./Components/home/popular-manga/popular-manga.component\";\r\nimport { MangaListComponent } from \"./Components/manga-list/manga-list.component\";\r\nimport { MangaPageComponent } from \"./Components/manga-page/manga-page.component\";\r\nimport { ReaderComponent } from \"./Components/reader/reader.component\";\r\nimport { FooterComponent } from \"./Components/SubComponents/footer/footer.component\";\r\nimport { LoginComponent } from \"./Components/SubComponents/navbar/login/login.component\";\r\nimport { NavbarComponent } from \"./Components/SubComponents/navbar/navbar.component\";\r\nimport { RegisterComponent } from \"./Components/SubComponents/navbar/register/register.component\";\r\nimport { SpinnerComponent } from \"./Components/SubComponents/spinner/spinner.component\";\r\nimport { ImagePreloadDirective } from \"./Directives/ImageDirective\";\r\nimport { VarDirective } from \"./Directives/VarDirective\";\r\nimport { AuthInterceptor } from \"./Interceptors/Auth.interceptor\";\r\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\r\nimport { TruncatePipe } from \"./truncate.pipe\";\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    MangaListComponent,\r\n    PageNotFoundComponent,\r\n    FooterComponent,\r\n    PopularMangaComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    MangaPageComponent,\r\n    ReaderComponent,\r\n    TruncatePipe,\r\n    SpinnerComponent,\r\n    ImagePreloadDirective,\r\n    VarDirective,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatDialogModule,\r\n    NgxPaginationModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [RegisterComponent, LoginComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<footer class=\"section footer-classic context-dark bg-image bg-dark\" style=\"background: #2d3246;\">\r\n    <div class=\"container\">\r\n      <div class=\"row row-30\">\r\n\r\n        <div class=\"col\">\r\n          <div class=\"pr-xl-4\">\r\n            <!-- Rights-->\r\n            <p class=\"rights text-center align-middle\"><span>Copyright </span><span>©  </span><span class=\"copyright-year\">2019</span><span> </span><span>MangaSpring</span><span>. </span><span>All Rights Reserved.</span></p>\r\n             <div class=\"text-center align-middle\">Logo made by <a href=\"https://www.designevo.com/logo-maker/\" title=\"Free Online Logo Maker\">DesignEvo free logo creator</a></div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n","import { Directive, Input, TemplateRef, ViewContainerRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"[ngVar]\",\r\n})\r\nexport class VarDirective {\r\n  @Input()\r\n  set ngVar(context: any) {\r\n    this.context.$implicit = this.context.ngVar = context;\r\n    this.updateView();\r\n  }\r\n\r\n  context: any = {};\r\n\r\n  constructor(\r\n    private vcRef: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>\r\n  ) {}\r\n\r\n  updateView() {\r\n    this.vcRef.clear();\r\n    this.vcRef.createEmbeddedView(this.templateRef, this.context);\r\n  }\r\n}\r\n","<!--Array of buttons that filter the manga list-->\r\n<div *ngIf=\"service.IsLoaded\" class=\"container con\">\r\n  <div class=\"btn-toolbar justify-content-center align-items-center\">\r\n    <div *ngFor=\"let letter of alphabet\" class=\"btn-group btn-group-sm button\">\r\n      <button (click)=\"filter(letter)\" class=\"btn btn-outline-primary\">{{ letter }}</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--Filter dropdown and pagination-->\r\n<div *ngIf=\"service.IsLoaded\" class=\"container\">\r\n  <div class=\"row justify-content-center filter\">\r\n    <button (click)=\"expand(); setStatus(0)\" class=\"btn btn-secondary justify-content-center\" type=\"button\"><i\r\n        class=\"fas fa-filter\"></i> Filter</button>\r\n  </div>\r\n\r\n  <div *ngIf=\"show\" class=\"wrapper\">\r\n    <h6>Genre:</h6>\r\n    <div *ngFor=\"let genre of genres\" class=\"form-check-inline\">\r\n      <div>\r\n        <label class=\"checkbox-inline items\"><input (click)=\"addToList(genre)\" type=\"checkbox\"> {{ genre }}</label>\r\n      </div>\r\n    </div>\r\n\r\n    <h6>Status:</h6>\r\n    <div class=\"form-check\">\r\n      <label class=\"form-check-label\"><input class=\"form-check-input\" (click)=\"setStatus(1)\" name=\"radio\"\r\n          type=\"radio\">Ongoing</label>\r\n    </div>\r\n\r\n    <div class=\"form-check\">\r\n      <label class=\"form-check-label\"><input class=\"form-check-input\" (click)=\"setStatus(2)\" name=\"radio\"\r\n          type=\"radio\">Completed</label>\r\n    </div>\r\n\r\n    <div class=\"form-check\">\r\n      <label class=\"form-check-label\"><input class=\"form-check-input\" (click)=\"setStatus(0)\" name=\"radio\"\r\n          type=\"radio\">None</label>\r\n    </div>\r\n\r\n    <div class=\"row justify-content-center\">\r\n      <button (click)=\"sendInfo(content)\" class=\"btn btn-success\"><i class=\"far fa-paper-plane\"></i> Submit</button>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div *ngIf=\"service.IsLoaded\" class=\"row justify-content-center\">\r\n    <pagination-controls (pageChange)=\"p =$event; resetSpinner()\"></pagination-controls>\r\n  </div>\r\n</div>\r\n\r\n<!--Renders the manga in a list form-->\r\n<div *ngIf=\"service.IsLoaded\" class=\"container con2\">\r\n  <div class=\"row\">\r\n    <div *ngFor=\"let manga of list | paginate: {itemsPerPage:6, currentPage: p}\" class=\"col-md-2 col-6\">\r\n      <div class=\"card-deck\">\r\n        <div class=\"card\">\r\n\r\n          <div *ngIf=\"!manga.info.imageLoaded\">\r\n            <app-spinner></app-spinner>\r\n          </div>\r\n\r\n          <img *ngIf=\"manga.im\" [hidden]=\"!manga.info.imageLoaded\" (load)='manga.info.imageLoaded = true'\r\n            class=\"img card-img-top\" src=\"{{getImage(manga.im)}}\" alt=\"Card image cap\">\r\n\r\n          <div>\r\n            <a class=\"card-body align-middle text-center\" routerLink=\"/manga-page/{{manga.realID}}\"\r\n              routerLinkActive=\"router-link-active\">\r\n              <h6 class=\"align-middle text-center card-title\">{{ manga.t | truncate: [26, '...']}}</h6>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--Pagination controls-->\r\n<div *ngIf=\"service.IsLoaded\" class=\"container\">\r\n  <div class=\"row justify-content-center\">\r\n    <pagination-controls (pageChange)=\"p =$event;\"></pagination-controls>\r\n  </div>\r\n\r\n</div>\r\n\r\n<!-- If api isn't finished getting manga show cool spinner -->\r\n<div *ngIf=\"!service.IsLoaded\" class=\"container justify-content-center\">\r\n\r\n  <app-spinner [wedge]=true [isMobile]=isMobile></app-spinner>\r\n  <h5>Getting Manga...<br>Read something from the <a routerLink=\"/home\"\r\n      routerLinkActive=\"router-link-active\">Homepage</a> while you wait.</h5>\r\n</div>\r\n\r\n<!-- Modal -->\r\n<ng-template #content let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Could Not Find Manga</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p>No such manga with the selected filters exists&hellip;</p>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\r\n  </div>\r\n</ng-template>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { Manga } from \"../../Models/Manga.models\";\r\nimport { MangaListService } from \"../../Services/manga-list-service\";\r\n\r\n@Component({\r\n  selector: \"app-manga-list\",\r\n  templateUrl: \"./manga-list.component.html\",\r\n  styleUrls: [\"./manga-list.component.css\"],\r\n})\r\nexport class MangaListComponent implements OnInit {\r\n  alphabet = [\r\n    \"All\",\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\",\r\n    \"#\",\r\n  ];\r\n  genres = [\r\n    \"Action\",\r\n    \"Adult\",\r\n    \"Adventure\",\r\n    \"Comic\",\r\n    \"Comedy\",\r\n    \"Drama\",\r\n    \"Demons\",\r\n    \"Doujinshi\",\r\n    \"Ecchi\",\r\n    \"Fantasy\",\r\n    \"Harem\",\r\n    \"Historical\",\r\n    \"Horror\",\r\n    \"Josei\",\r\n    \"Martial Arts\",\r\n    \"Magic\",\r\n    \"Mature\",\r\n    \"Mecha\",\r\n    \"Mystery\",\r\n    \"Psychological\",\r\n    \"Romance\",\r\n    \"Seinen\",\r\n    \"School Life\",\r\n    \"Shoujo\",\r\n    \"Sci-fi\",\r\n    \"Shounen\",\r\n    \"Supernatural\",\r\n    \"Sports\",\r\n    \"Tragedy\",\r\n  ];\r\n  genreArray = [];\r\n  p: number;\r\n  show = false;\r\n  mangaList: Manga[];\r\n  list: Manga[];\r\n  status = 0;\r\n  toggle = false;\r\n  isMobile: boolean;\r\n\r\n  constructor(\r\n    public service: MangaListService,\r\n    title: Title,\r\n    private route: ActivatedRoute,\r\n    private modalService: NgbModal,\r\n    deviceService: DeviceDetectorService\r\n  ) {\r\n    this.isMobile = deviceService.isMobile();\r\n    title.setTitle(\"MangaList\");\r\n    window.scroll(0, 0);\r\n  }\r\n\r\n  // expands the filter options\r\n  expand() {\r\n    this.show = !this.show;\r\n  }\r\n\r\n  // filters the manga depending on which button letter the user clicks\r\n  filter(letter: string) {\r\n    if (letter === \"All\") {\r\n      this.mangaList = this.service.mangaList;\r\n      this.list = this.mangaList;\r\n      this.p = 0;\r\n    } else if (letter === \"#\") {\r\n      const filtered = this.mangaList.filter(\r\n        (manga) =>\r\n          manga.t.startsWith(\"0\") ||\r\n          manga.t.startsWith(\"1\") ||\r\n          manga.t.startsWith(\"2\") ||\r\n          manga.t.startsWith(\"3\") ||\r\n          manga.t.startsWith(\"4\") ||\r\n          manga.t.startsWith(\"5\") ||\r\n          manga.t.startsWith(\"6\") ||\r\n          manga.t.startsWith(\"7\") ||\r\n          manga.t.startsWith(\"8\") ||\r\n          manga.t.startsWith(\"9\")\r\n      );\r\n      this.list = filtered.sort((a, b) => a.a.localeCompare(b.a));\r\n      this.p = 0;\r\n    } else {\r\n      const filtered = this.mangaList.filter((manga) =>\r\n        manga.t.startsWith(letter)\r\n      );\r\n      this.list = filtered.sort((a, b) => a.a.localeCompare(b.a));\r\n      this.p = 0;\r\n    }\r\n  }\r\n\r\n  // Adds genres from the filter selection\r\n  addToList(genre) {\r\n    if (!this.genreArray.find((item) => item === genre)) {\r\n      this.genreArray.push(genre);\r\n    } else {\r\n      for (let i = 0; i < this.genreArray.length; i++) {\r\n        if (this.genreArray[i] === genre) {\r\n          this.genreArray.splice(i, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setStatus(n: number) {\r\n    this.status = n;\r\n  }\r\n\r\n  // Sends genreArray to filter multiple genres selected\r\n  sendInfo(content) {\r\n    this.list = this.service.mangaList;\r\n\r\n    if (this.status === 1) {\r\n      this.list = this.list.filter(\r\n        (manga) =>\r\n          this.genreArray.every((value) => {\r\n            return manga.c.indexOf(value) >= 0;\r\n          }) && manga.s === 1\r\n      );\r\n    } else if (this.status === 2) {\r\n      this.list = this.list.filter(\r\n        (manga) =>\r\n          this.genreArray.every((value) => {\r\n            return manga.c.indexOf(value) >= 0;\r\n          }) && manga.s === 2\r\n      );\r\n    } else if (this.status === 0) {\r\n      this.list = this.list.filter((manga) =>\r\n        this.genreArray.every((value) => {\r\n          return manga.c.indexOf(value) >= 0;\r\n        })\r\n      );\r\n    }\r\n\r\n    if (this.list.length === 0) {\r\n      this.list = this.service.mangaList;\r\n      //open modal\r\n      this.modalService.open(content, { centered: true });\r\n    }\r\n\r\n    this.p = 0;\r\n  }\r\n\r\n  // filters list by (one) genre, author, and artist depending on the condition(from home page)\r\n  filterByGenre(genre) {\r\n    // checks for genre\r\n    this.list = this.list.filter((item) => item.c.find((gen) => gen === genre));\r\n\r\n    // checks for author\r\n    if (this.list.length === 0) {\r\n      this.list = this.mangaList.filter((item) => item.info.author === genre);\r\n    }\r\n    // checks for artist\r\n    if (this.list.length === 0) {\r\n      this.list = this.mangaList.filter((item) => item.info.artist === genre);\r\n    }\r\n    if (this.list.length === 0) {\r\n      this.list = this.service.mangaList;\r\n      window.alert(\"No such mangas with the selected genre exists\");\r\n    }\r\n  }\r\n\r\n  // renders the images\r\n  getImage(url: string) {\r\n    if (url.startsWith(\"http\")) {\r\n      return url;\r\n    } else {\r\n      return \"/image/\" + url;\r\n    }\r\n  }\r\n\r\n  resetSpinner() {\r\n    this.list.forEach((manga) => (manga.info.imageLoaded = false));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe((params) => {\r\n      if (this.service.mangaList) {\r\n        this.mangaList = this.service.mangaList\r\n          .sort((a, b) => b.h - a.h)\r\n          .reverse();\r\n        this.list = this.mangaList;\r\n        this.resetSpinner();\r\n\r\n        if (params.get(\"genre\") != null) {\r\n          this.filterByGenre(params.get(\"genre\"));\r\n        }\r\n      }\r\n\r\n      this.service.mangaSubject.subscribe((list) => {\r\n        this.mangaList = list.sort((a, b) => b.h - a.h).reverse();\r\n        this.list = this.mangaList;\r\n        this.resetSpinner();\r\n\r\n        if (params.get(\"genre\") != null) {\r\n          this.filterByGenre(params.get(\"genre\"));\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Component, HostListener, OnInit } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { Manga } from \"src/app/Models/Manga.models\";\r\nimport { MangaListService } from \"src/app/Services/manga-list-service\";\r\nimport { MangaService } from \"src/app/Services/manga.service\";\r\nimport { RSocketService } from \"src/app/Services/rsocket-service\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\n\r\n@Component({\r\n  selector: \"app-navbar\",\r\n  templateUrl: \"./navbar.component.html\",\r\n  styleUrls: [\"./navbar.component.css\"],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  list: Manga[];\r\n  name;\r\n  showlist;\r\n  tempList;\r\n  isMobile: boolean;\r\n  scrHeight: number;\r\n  scrWidth: number;\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    public service: MangaListService,\r\n    public rsocket: RSocketService,\r\n    private mangaService: MangaService,\r\n    deviceService: DeviceDetectorService\r\n  ) {\r\n    this.isMobile = deviceService.isMobile();\r\n    this.getScreenSize();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.service.mangaList) {\r\n      this.list = this.service.mangaList.slice();\r\n    } else {\r\n      this.service.mangaSubject.subscribe((manga) => {\r\n        this.list = manga.filter((item) => item.realID != -2);\r\n      });\r\n    }\r\n  }\r\n\r\n  @HostListener(\"window:resize\", [\"$event\"])\r\n  getScreenSize(event?) {\r\n    this.scrHeight = window.innerHeight;\r\n    this.scrWidth = window.innerWidth;\r\n  }\r\n\r\n  // when mouse hovers enters navbar it disables the keyboard scroll in reader\r\n  @HostListener(\"mouseenter\") inSearch() {\r\n    this.mangaService.search = true;\r\n  }\r\n\r\n  // when mouse hovers outside of navbar it disables the list\r\n  @HostListener(\"mouseleave\") closeList() {\r\n    this.showlist = false;\r\n    this.mangaService.search = false;\r\n  }\r\n\r\n  @HostListener(\"window:beforeunload\", [\"$event\"])\r\n  saveToStorage(event: Event) {\r\n    this.mangaService.saveToStorage();\r\n  }\r\n\r\n  // sends the chapter to the service so that manga-page can display the data\r\n  setChapter(manga) {\r\n    this.mangaService.setManga(manga);\r\n    this.showlist = false;\r\n    this.name = \"\";\r\n  }\r\n\r\n  // A temp variable takes the list to display the data being filtered\r\n  search(n: string) {\r\n    if (n.length > 1) {\r\n      n = n.toUpperCase();\r\n      this.showlist = true;\r\n      this.tempList = this.list.sort((a, b) => a.a.localeCompare(b.a));\r\n      this.tempList = this.tempList.filter((manga) =>\r\n        manga.t.toUpperCase().startsWith(n)\r\n      );\r\n    } else {\r\n      this.showlist = false;\r\n    }\r\n  }\r\n\r\n  // handles the images\r\n  getImage(url: string) {\r\n    if (url.startsWith(\"http\")) {\r\n      return url;\r\n    } else {\r\n      return \"/image/\" + url;\r\n    }\r\n  }\r\n\r\n  // dialog buttons operations\r\n  openDialog(): void {\r\n    this.dialog.open(RegisterComponent);\r\n  }\r\n\r\n  openLogin(): void {\r\n    this.dialog.open(LoginComponent);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark \">\r\n  <a class=\"navbar-brand\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\"><img class=\"logo\" src=\"../../assets/imageedit_11_3620823692.png\"> MangaSpring</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" [ngClass]=\"{row: scrWidth > 991}\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/home']\" routerLinkActive=\"router-link-active\" >Home</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/manga-list']\" routerLinkActive=\"router-link-active\" >List</a>\r\n      </li>\r\n\r\n    <form *ngIf=\"service.IsLoaded\" class=\"form-inline my-2 my-lg-0 \" [ngClass]=\"{'col-sm' : scrWidth > 991}\" >\r\n      <input [(ngModel)]=\"name\" [ngModelOptions]=\"{standalone: true}\" (keyup)=\"search(name)\" class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\">\r\n      <div class=\"search-container\">\r\n      <ul *ngFor=\"let item of tempList; let i = index\" class=\"list-group\">\r\n        <li *ngIf=\"item.im === null && showlist && i < 10\" class=\"list-group-item\" (click)=\"setChapter(item)\" routerLink=\"/manga-page/{{item.realID}}\" routerLinkActive=\"router-link-active\"><img class=\"img card-img-top\" src=\"../../../assets/noimage.jpeg\" alt=\"Card image cap\">{{ item.t | truncate: [17, '...']}}</li>\r\n        <li *ngIf=\"item.im != null && showlist  && i < 10\" class=\"list-group-item\" (click)=\"setChapter(item)\" routerLink=\"/manga-page/{{item.realID}}\" routerLinkActive=\"router-link-active\"><img class=\"img card-img-top\" src=\"{{getImage(item.im)}}\" alt=\"Card image cap\"> {{ item.t | truncate: [17, '...']}}</li>\r\n      </ul>\r\n    </div>\r\n      <!-- <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"button\" (click)=\"openDialog()\">Register</button> -->\r\n      <!-- <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"button\" (click)=\"openLogin()\">Login</button> -->\r\n    </form>\r\n    </ul>\r\n\r\n  </div>\r\n</nav>\r\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor() { }\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: \"Basic \" + btoa(\"SpringRsocketBackendUserName:SpringRsocketBackendSecretUserPassword\"),\r\n      },\r\n    });\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import {\r\n  Encodable,\r\n  encodeCompositeMetadata,\r\n  encodeRoute,\r\n  MESSAGE_RSOCKET_ROUTING,\r\n} from \"rsocket-core\";\r\nimport { IFutureSubscriber } from \"rsocket-flowable/Single\";\r\nimport { ISubscriber, Payload } from \"rsocket-types\";\r\nimport { Observable, Subscriber } from \"rxjs\";\r\nimport { take } from \"rxjs/operators\";\r\n\r\nexport function routedPayload(\r\n  route: string,\r\n  data: any = null\r\n): Payload<any, Encodable> {\r\n  return {\r\n    data: data,\r\n    metadata: encodeCompositeMetadata([\r\n      [MESSAGE_RSOCKET_ROUTING, encodeRoute(route)],\r\n    ]),\r\n  };\r\n}\r\n\r\nexport function basicPayload(data): Payload<any, Encodable> {\r\n  return {\r\n    data: data,\r\n    metadata: null,\r\n  };\r\n}\r\n\r\nexport const extractPayloadData = (p) => p.data;\r\n\r\nexport function singleSignal2RXJS(\r\n  subscriber: Subscriber<any>\r\n): Partial<IFutureSubscriber<any>> {\r\n  return {\r\n    onComplete: (n) => {\r\n      subscriber.next(n);\r\n      subscriber.complete();\r\n    },\r\n    onError: (e) => subscriber.error(e),\r\n  };\r\n}\r\n\r\nexport function flowableSignal2RXJS(\r\n  subscriber: Subscriber<any>,\r\n  requestN: number = Number.MAX_SAFE_INTEGER\r\n): Partial<ISubscriber<any>> {\r\n  return {\r\n    onNext: (n) => subscriber.next(n),\r\n    onComplete: () => subscriber.complete(),\r\n    onError: (e) => subscriber.error(e),\r\n    onSubscribe: (s) => s.request(requestN),\r\n  };\r\n}\r\n\r\nexport function rxjs2Flowable(observabl: Observable<any>) {\r\n  return (subscriber: ISubscriber<any>) => {\r\n    subscriber.onSubscribe({\r\n      request: (n) => {\r\n        observabl\r\n          .pipe(take(n))\r\n          .subscribe((s) => subscriber.onNext(basicPayload(s)));\r\n      },\r\n      cancel: () => console.log(\"Cancelled Server Request\"),\r\n    });\r\n  };\r\n}\r\n","import { JsonSerializer, Serializer } from \"rsocket-core\";\r\n\r\n/**  Serializer that serializes data to Buffer and deserializes to JSON\r\n */\r\nexport const JSONBufferSerializer: Serializer<any> = {\r\n  deserialize: JsonSerializer.deserialize,\r\n  serialize: (data) => {\r\n    if (Buffer.isBuffer(data) || data == null) {\r\n      return data;\r\n    } else return Buffer.from(JSON.stringify(data));\r\n  },\r\n};\r\n/**  Serializer that serializes metadata to Buffer and deserializes to JSON\r\n *  If incoming metadata contains multiple objects will deserialize and return an array of objects\r\n *  If incoming metadata doesn't return any JSON will return\r\n */\r\nexport const JSONCompositeMetadataSerializer: Serializer<any> = {\r\n  deserialize: (metadata) => {\r\n    let str;\r\n    if (metadata == null) {\r\n      return null;\r\n    } else if (typeof metadata === \"string\") {\r\n      str = metadata;\r\n    } else if (Buffer.isBuffer(metadata)) {\r\n      const buffer: Buffer = metadata;\r\n      str = buffer.toString(\"utf8\");\r\n    } else {\r\n      const buffer: Buffer = Buffer.from(metadata);\r\n      str = buffer.toString(\"utf8\");\r\n    }\r\n\r\n    if (str.includes(\"application/json\")) {\r\n      const objArray = [];\r\n      const jsonStrArr = str.split(\"application/json\");\r\n      for (let i = 1; i < jsonStrArr.length; i++) {\r\n        const unformattedJsonstr = jsonStrArr[i];\r\n\r\n        const jsonstr = unformattedJsonstr.substring(\r\n          unformattedJsonstr.indexOf(\"{\"),\r\n          unformattedJsonstr.lastIndexOf(\"}\") + 1\r\n        );\r\n        objArray.push(JSON.parse(jsonstr));\r\n      }\r\n      if (objArray.length > 1) return objArray;\r\n      else return objArray[0];\r\n    } else return metadata;\r\n  },\r\n  serialize: (metadata) => {\r\n    if (Buffer.isBuffer(metadata) || metadata == null) {\r\n      return metadata;\r\n    } else return Buffer.from(JSON.stringify(metadata));\r\n  },\r\n};\r\n\r\nexport const JSONBufferSerializers = {\r\n  data: JSONBufferSerializer,\r\n  metadata: JSONCompositeMetadataSerializer,\r\n};\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport { toArray } from \"rxjs/operators\";\r\nimport { Manga } from \"../Models/Manga.models\";\r\nimport { RSocketService } from \"./rsocket-service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class MangaListService {\r\n  public mangaList: Manga[];\r\n  popular: Manga[];\r\n  recent: Manga[];\r\n  postlist: Manga[];\r\n  IsLoaded = false;\r\n  sendingRequest: boolean;\r\n\r\n  // subjects allow for multicasted observables\r\n  mangaSubject = new Subject<Manga[]>();\r\n  recentSubject = new Subject<Manga[]>();\r\n  changeSubject = new Subject<Manga>();\r\n\r\n  constructor(rsocketService: RSocketService) {\r\n    //multicast manga values to the rest of application\r\n    rsocketService.mangaListSubject\r\n      .pipe(toArray())\r\n      .subscribe(this.mangaSubject);\r\n    rsocketService.latestSubject.subscribe(this.recentSubject);\r\n    rsocketService.popularSubject.subscribe((p) => (this.popular = p));\r\n    this.recentSubject.subscribe((r) => (this.recent = r));\r\n    this.mangaSubject.subscribe((list) => {\r\n      this.mangaList = list;\r\n      this.IsLoaded = true;\r\n      //subscribe to rsocket change stream for real-time updates\r\n      rsocketService.changeStream.subscribe(this.changeSubject);\r\n      this.changeSubject.subscribe((m) => this.changeStreamEventHandler(m));\r\n    });\r\n  }\r\n  //Handle Changed manga\r\n  changeStreamEventHandler(manga: Manga): void {\r\n    console.log(manga.t + \" Was Updated\");\r\n    this.updateArray(this.mangaList, manga);\r\n    this.updateArray(this.popular, manga);\r\n    this.updateArray(this.recent, manga);\r\n  }\r\n\r\n  updateArray(arr: any[], manga: Manga) {\r\n    const exists = !arr.find((m) => m.realID === manga.realID);\r\n    //if manga was just inserted into table\r\n    if (exists && arr != this.popular) {\r\n      arr.push(manga);\r\n    }\r\n    //else find manga in array and replace\r\n    else {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].realID === manga.realID) arr[i] = manga;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"wrapper fadeInDown\">\r\n    <div id=\"formContent\">\r\n      <!-- Tabs Titles -->\r\n\r\n      <!-- Icon -->\r\n      <div class=\"fadeIn first\">\r\n        <img src=\"https://www.b-cube.in/wp-content/uploads/2014/05/aditya-300x177.jpg\" id=\"icon\" alt=\"User Icon\" />\r\n        <h1>Manga Paradise</h1>\r\n      </div>\r\n\r\n      <!-- Login Form -->\r\n      <form>\r\n        <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"username\">\r\n        <input type=\"text\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"password\">\r\n        <input type=\"submit\" class=\"fadeIn fourth\" value=\"Log In\">\r\n      </form>\r\n\r\n      <!-- Remind Passowrd -->\r\n      <div id=\"formFooter\">\r\n        <a class=\"underlineHover\" href=\"#\">Go to the Site</a>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n","import { Directive, HostBinding, Input } from \"@angular/core\";\r\n@Directive({\r\n  selector: \"img\",\r\n  host: {\r\n    \"(error)\": \"updateUrl()\",\r\n    \"(load)\": \"load()\",\r\n    \"[src]\": \"src\",\r\n  },\r\n})\r\nexport class ImagePreloadDirective {\r\n  @Input() src: string;\r\n  @HostBinding(\"class\") className;\r\n\r\n  updateUrl() {\r\n    this.src = \"../../../assets/noimage.jpeg\";\r\n  }\r\n  load() {\r\n    this.className = \"image-loaded\";\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<img class=\"img-responsive img-fluid\" src=\"../../assets/404.png\">\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { HomeComponent } from \"./Components/home/home.component\";\r\nimport { MangaListComponent } from \"./Components/manga-list/manga-list.component\";\r\nimport { MangaPageComponent } from \"./Components/manga-page/manga-page.component\";\r\nimport { ReaderComponent } from \"./Components/reader/reader.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", redirectTo: \"/home\", pathMatch: \"full\" },\r\n  {\r\n    path: \"manga-reader/:manga/:index\",\r\n    redirectTo: \"/manga-reader/:manga/:index/1\",\r\n    pathMatch: \"full\",\r\n  },\r\n  {\r\n    path: \"manga-reader/:manga\",\r\n    redirectTo: \"/manga-page/:manga\",\r\n    pathMatch: \"full\",\r\n  },\r\n  { path: \"home\", component: HomeComponent },\r\n  { path: \"manga-list\", component: MangaListComponent },\r\n  { path: \"manga-list/:genre\", component: MangaListComponent },\r\n  { path: \"manga-page/:realID\", component: MangaPageComponent },\r\n  { path: \"manga-reader/:manga/:index/:page\", component: ReaderComponent },\r\n  //{path: '**', component: PageNotFoundComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","<!-- If api isn't finished getting manga show cool spinner -->\r\n<div *ngIf=\"showSpinner\" class=\"container justify-content-center\">\r\n  <app-spinner [wedge]=true [isMobile]=isMobile></app-spinner>\r\n</div>\r\n\r\n<div [hidden]=\"showSpinner\" class=\"container\">\r\n  <!--Displays the first container that contains info such as author,artist, status and manga image-->\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n\r\n      <img class=\"image-fluid rounded cover\" (load)=\"showSpinner=false\" src=\"{{manga.im}}\">\r\n\r\n      <div class=\"col\">\r\n        <h1 class=\"title\">{{ manga.t }} </h1>\r\n        <p>Author: <a routerLink=\"/manga-list/{{manga.info.author}}\" routerLinkActive=\"router-link-active\">{{\r\n            manga.info.author }}</a></p>\r\n        <p>Artist: <a routerLink=\"/manga-list/{{manga.info.artist}}\" routerLinkActive=\"router-link-active\">{{\r\n            manga.info.artist }}</a></p>\r\n        <p *ngIf=\"manga.s == 1\">Status: <span>Ongoing | {{ manga.info.chapters.length }} Chapters</span></p>\r\n        <p *ngIf=\"manga.s == 2\">Status: <span>Completed | {{ manga.info.chapters.length }} Chapters</span></p>\r\n        <button class=\"btn btn-success read\" (click)=\"startReading()\"><i class=\"fas fa-book-open\"></i> Start\r\n          Reading</button>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!--Displays the second container that contains info such as summary, genre and other facts-->\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <h1 class=\"title2\">Summary</h1>\r\n        <div class=\"row genre\">\r\n          <h4 class=\"genre\" *ngFor=\"let genre of genres\"><a routerLink=\"/manga-list/{{genre}}\"><span\r\n                class=\"badge badge-primary\">{{ genre }}</span></a></h4>\r\n        </div>\r\n\r\n        <h3 class=\"title2\">Description</h3>\r\n        <p class=\"description\" [innerHTML]=manga.info.description></p>\r\n        <h3 class=\"title2\">Other Facts</h3>\r\n        <p class=\"lastUpdate\">Last Update: {{ manga.ld * 1000 | date:'MM-dd-yyyy' }}</p>\r\n        <p class=\"published\">Published year: {{ manga.info.released}}</p>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!--Displays the third container that contains the manga chapters-->\r\n  <div class=\"container page2\">\r\n    <div class=\"row\">\r\n\r\n      <div class=\"col-lg-6\">\r\n        <div class=\"card mangaChapters\">\r\n          <div class=\"card-header\">\r\n            <h3 *ngIf=\"!showChapter\"><i class=\"fas fa-book\"></i> CHAPTERS </h3>\r\n            <h3 *ngIf=\"showChapter\"> CHAPTERS | JUMP </h3>\r\n            <button [hidden]=\"!showChapter\" class=\"btn btn-info jump\" (click)=\"jumpToChapter(item)\"\r\n              *ngFor=\"let item of location\">{{jumpDisplay(item)}}</button>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div *ngFor=\"let chapter of chapters; let i = index\" class=\"card-title\">\r\n              <div *ngIf=\"showChapter || i < 10\" id=\"chapter {{chapter[0]}}\">\r\n                <a (click)=\"service.setPageIndex(undefined)\"\r\n                  routerLink=\"/manga-reader/{{manga.realID}}/{{ chapter[0] }}/0\" routerLinkActive=\"router-link-active\">\r\n                  <span *ngIf=\"!chapter[2] && chapter[2] != chapter[0]\">Chapter {{ chapter[0]}}</span>\r\n                  <span *ngIf=\"chapter[2] == chapter[0]\">Chapter {{ chapter[2]}}</span>\r\n                  <span *ngIf=\"chapter[2] && chapter[2] != chapter[0]\">Chapter {{ chapter[0]}}: {{ chapter[2]}}</span>\r\n                </a>\r\n              </div>\r\n              <div *ngIf=\"showChapter\">\r\n                <div *ngIf=\"checkIndex(chapter[0])\"></div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button *ngIf=\"!showChapter\" (click)=\"showMore()\" class=\"btn btn-success showMore\"><i\r\n                  class=\"fas fa-angle-down\"></i></button>\r\n              <button *ngIf=\"showChapter\" (click)=\"showMore()\" class=\"btn btn-success showMore\"><i\r\n                  class=\"fas fa-angle-up\"></i></button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!--Related mangas section-->\r\n      <div class=\"col-lg-6\">\r\n        <div class=\"card related\">\r\n          <div class=\"card-header\">\r\n            <h3><img class=\"logo\" src=\"../../assets/imageedit_11_3620823692.png\"> SIMILAR MANGA</h3>\r\n          </div>\r\n          <div *ngFor=\"let item of relatedManga;  let i = index\" class=\"card-body text-center align-middle\">\r\n\r\n            <div *ngIf=\"item!==undefined && !item.info.imageLoaded\">\r\n              <app-spinner></app-spinner>\r\n            </div>\r\n\r\n            <img *ngIf=\"item !== undefined && manga.realID != item.realID\" [hidden]=\"!item.info.imageLoaded\"\r\n              (load)='item.info.imageLoaded = true' (error)='item.info.imageLoaded = true'\r\n              class=\"relatedImg card-img-top\" src=\"{{item.im}}\" alt=\"Card image cap\">\r\n            <div class=\"col\">\r\n              <a *ngIf=\"item !== undefined && manga.realID != item.realID\" class=\"card-title\"\r\n                routerLink=\"/manga-page/{{item.realID}}\" routerLinkActive=\"router-link-active\">\r\n                <h4>{{item.t}}</h4>\r\n              </a>\r\n            </div>\r\n\r\n            <div class=\"col\">\r\n              <p *ngIf=\"item !== undefined && i < 5 && manga.realID != item.realID && item.s == 1\">Status:\r\n                <span>Ongoing | {{ item.info.chapters.length }} Chapters</span>\r\n              </p>\r\n              <p *ngIf=\"item !== undefined && i < 5 && manga.realID != item.realID && item.s == 2\">Status:\r\n                <span>Completed | {{ item.info.chapters.length }} Chapters</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { DeviceDetectorService } from \"ngx-device-detector\";\r\nimport { Manga } from \"src/app/Models/Manga.models\";\r\nimport { MangaListService } from \"src/app/Services/manga-list-service\";\r\nimport { MangaService } from \"src/app/Services/manga.service\";\r\n\r\n@Component({\r\n  selector: \"app-manga-page\",\r\n  templateUrl: \"./manga-page.component.html\",\r\n  styleUrls: [\"./manga-page.component.css\"],\r\n})\r\nexport class MangaPageComponent implements OnInit {\r\n  manga: Manga;\r\n  list = [];\r\n  relatedManga: Manga[] = [];\r\n  genres = [];\r\n  chapters: any[];\r\n  location = [];\r\n  showChapter = false;\r\n  showSpinner = true;\r\n  isMobile: boolean;\r\n\r\n  constructor(\r\n    public service: MangaService,\r\n    private mangaListService: MangaListService,\r\n    private title: Title,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    deviceService: DeviceDetectorService\r\n  ) {\r\n    window.scroll(0, 0);\r\n    this.isMobile = deviceService.isMobile();\r\n  }\r\n\r\n  fixString() {\r\n    this.manga.info.description = this.manga.info.description\r\n      .split(\"&#039;\")\r\n      .join(\"'\");\r\n    this.manga.info.description = this.manga.info.description\r\n      .split(\"&quot;\")\r\n      .join(\"'\");\r\n    this.manga.info.description = this.manga.info.description\r\n      .split(\"&amp;\")\r\n      .join(\"'\");\r\n    this.manga.info.description = this.manga.info.description\r\n      .split(\"&nbsp;\")\r\n      .join(\"'\");\r\n  }\r\n\r\n  showMore() {\r\n    this.showChapter = !this.showChapter;\r\n  }\r\n\r\n  startReading() {\r\n    this.service.setPageIndex(undefined);\r\n    this.router.navigate([\r\n      \"manga-reader/\",\r\n      this.manga.realID,\r\n      this.manga.info.chapters[this.manga.info.chapters.length - 1][0],\r\n      1,\r\n    ]);\r\n  }\r\n\r\n  // renders a list of 5 mangas that are related to the current genre\r\n  relatedMangas() {\r\n    const filter = (m) => {\r\n      let i = 0;\r\n      this.genres.forEach((g) => {\r\n        if (m.c.includes(g)) i++;\r\n      });\r\n      return i >= 2;\r\n    };\r\n\r\n    if (this.mangaListService.mangaList) {\r\n      this.relatedManga = this.mangaListService.mangaList\r\n        .slice()\r\n        .filter((manga) => this.manga.realID !== manga.realID);\r\n      this.shuffle(this.relatedManga);\r\n      // Until Our Numbers are up, this logic must be disabled\r\n      this.relatedManga = this.relatedManga.filter(filter);\r\n      if (this.relatedManga.length > 3) this.relatedManga.length = 3;\r\n    } else {\r\n      this.mangaListService.mangaSubject.subscribe((l) => {\r\n        this.relatedManga = l\r\n          .slice()\r\n          .filter((manga) => this.manga.realID !== manga.realID);\r\n        this.shuffle(this.relatedManga);\r\n        // Until Our Numbers are up, this logic must be disabled\r\n        this.relatedManga = this.relatedManga.filter(filter);\r\n        if (this.relatedManga.length > 3) this.relatedManga.length = 3;\r\n      });\r\n    }\r\n  }\r\n\r\n  // gets image from api\r\n  getImage(url: string) {\r\n    if (url.startsWith(\"http\")) {\r\n      return url;\r\n    } else {\r\n      return \"/image/\" + url;\r\n    }\r\n  }\r\n\r\n  // filter function that handles the manga\r\n  filter(params) {\r\n    // tslint:disable-next-line:radix\r\n    this.list = this.list.filter(\r\n      (manga) => manga.realID === parseInt(params.get(\"realID\"))\r\n    );\r\n\r\n    if (this.list[0] == null || isNaN(parseInt(params.get(\"realID\")))) {\r\n      this.router.navigate([\"**\"]);\r\n    }\r\n\r\n    this.title.setTitle(this.list[0].t);\r\n    this.manga = this.list[0];\r\n    this.fixString();\r\n    this.service.setManga(this.list[0]);\r\n    this.genres = this.manga.c;\r\n    this.manga.info.numOfChapters = this.manga.info.chapters.length;\r\n    this.chapters = this.manga.info.chapters;\r\n  }\r\n\r\n  // Pushes every 50 element into an array\r\n  checkIndex(i) {\r\n    i = parseFloat(i);\r\n    if (i % 50 === 0 && i !== 0) {\r\n      if (this.location.find((num) => num === i)) {\r\n        return;\r\n      } else {\r\n        this.location.push(parseFloat(i));\r\n      }\r\n    }\r\n  }\r\n\r\n  jumpToChapter(chapter) {\r\n    if (chapter - 50 > 1) {\r\n      const x = document.getElementById(\"chapter \" + (chapter - 50));\r\n      x.scrollIntoView();\r\n    } else {\r\n      const x = document.getElementById(\r\n        \"chapter \" + this.chapters[this.chapters.length - 1][0]\r\n      );\r\n      x.scrollIntoView();\r\n    }\r\n  }\r\n\r\n  jumpDisplay(item) {\r\n    if (item - 50 > 1) {\r\n      return item - 50;\r\n    } else {\r\n      return this.chapters[this.chapters.length - 1][0];\r\n    }\r\n  }\r\n\r\n  // shuffles an array\r\n  shuffle(array) {\r\n    // tslint:disable-next-line:one-variable-per-declaration\r\n    let currentIndex = array.length,\r\n      temporaryValue,\r\n      randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  IsLatest(params) {\r\n    try {\r\n      return (\r\n        params.get(\"realID\") ===\r\n        this.mangaListService.recent\r\n          .find((manga) => manga.realID.toString() === params.get(\"realID\"))\r\n          .realID.toString()\r\n      );\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  IsPopular(params) {\r\n    try {\r\n      return (\r\n        params.get(\"realID\") ===\r\n        this.mangaListService.popular\r\n          .find((manga) => manga.realID.toString() === params.get(\"realID\"))\r\n          .realID.toString()\r\n      );\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  loadFromDatabase(params) {\r\n    setTimeout(() => {\r\n      if (this.list.length === 0) {\r\n        if (\r\n          this.service.Manga &&\r\n          this.service.Manga.realID === parseFloat(params.get(\"realID\"))\r\n        ) {\r\n          this.list[0] = this.service.Manga;\r\n          this.filter(params);\r\n          this.relatedMangas();\r\n        } else {\r\n          this.service.getManga(params.get(\"realID\")).subscribe((manga) => {\r\n            this.list[0] = manga;\r\n            this.service.setMangaFromPage(manga);\r\n\r\n            this.filter(params);\r\n            this.relatedMangas();\r\n          });\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  resetSpinner() {\r\n    this.list.forEach((manga) => (manga.info.imageLoaded = false));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe((params) => {\r\n      this.resetSpinner();\r\n      window.scroll(0, 0);\r\n\r\n      // if manga is in manga service\r\n      if (\r\n        this.service.Manga &&\r\n        parseFloat(params.get(\"realID\")) === this.service.Manga.realID\r\n      ) {\r\n        this.list[0] = this.service.Manga;\r\n\r\n        this.filter(params);\r\n        this.relatedMangas();\r\n        // if any manga are in the api service\r\n      } else if (this.mangaListService.mangaList) {\r\n        this.list = this.mangaListService.mangaList.slice();\r\n        this.filter(params);\r\n        this.service.setMangaFromPage(this.list[0]);\r\n        this.relatedMangas();\r\n\r\n        // if in popular manga\r\n      } else if (!this.mangaListService.mangaList && this.IsPopular(params)) {\r\n        this.list = this.mangaListService.popular.slice();\r\n        this.filter(params);\r\n        this.relatedMangas();\r\n\r\n        // if in latest manga\r\n      } else if (!this.mangaListService.mangaList && this.IsLatest(params)) {\r\n        this.list = this.mangaListService.recent.slice();\r\n        this.filter(params);\r\n        this.service.setMangaFromPage(this.list[0]);\r\n        this.relatedMangas();\r\n      } else {\r\n        // this will load the manga's info straight from the database if the next functions fail\r\n        this.loadFromDatabase(params);\r\n\r\n        // this will run if it's part of the latest manga\r\n        this.mangaListService.recentSubject.subscribe((latest) => {\r\n          if (!this.list) {\r\n            this.list = latest.filter(\r\n              (item) => item.realID == parseInt(params.get(\"realID\"))\r\n            );\r\n\r\n            if (this.list.length != 0) {\r\n              this.filter(params);\r\n              this.service.setMangaFromPage(this.list[0]);\r\n              this.relatedMangas();\r\n            }\r\n          }\r\n        });\r\n\r\n        this.mangaListService.mangaSubject.subscribe((manga) => {\r\n          if (!this.list) {\r\n            this.list = manga.slice();\r\n            this.filter(params);\r\n            this.service.setMangaFromPage(this.list[0]);\r\n            this.relatedMangas();\r\n          }\r\n        });\r\n      }\r\n      this.service.updateSubject.subscribe((m) => {\r\n        if (this.manga.realID === m.realID) {\r\n          this.manga = m;\r\n          this.list[0] = m;\r\n          this.filter(params);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}