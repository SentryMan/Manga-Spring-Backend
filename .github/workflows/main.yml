# This is a basic workflow to help you get started with Actions

name: Compile/Deploy Native Image To Heroku.
# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [main]

# Your workflows jobs.
jobs:
  Build-Image:
    concurrency:
      group: concurrency-group-1
      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "16"
          java-package: jdk
          architecture: x64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Cache Maven Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Build Artifact
        run: mvn clean package

      - name: Multi-Stage Image Build
        run: docker buildx build --build-arg BUILDPLATFORM=linux/amd64 --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache-new -t manga-backend .

        # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move Docker Cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  # Prod-Release:
  #   environment: manga-spring.com
  #   concurrency:
  #     group: concurrency-group-2
  #     cancel-in-progress: true
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Release Image
  #       env:
  #         HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  #       run: heroku container:release web -a manga-spring
